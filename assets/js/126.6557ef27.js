(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{442:function(s,a,t){"use strict";t.r(a);var n=t(7),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),a("h2",{attrs:{id:"版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本控制"}},[s._v("#")]),s._v(" 版本控制")]),s._v(" "),a("h3",{attrs:{id:"什么是版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是版本控制"}},[s._v("#")]),s._v(" 什么是版本控制")]),s._v(" "),a("p",[s._v("版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实现跨区域多人协同开发")])]),s._v(" "),a("li",[a("p",[s._v("追踪和记载一个或者多个文件的历史记录")])]),s._v(" "),a("li",[a("p",[s._v("组织和保护你的源代码和文档")])]),s._v(" "),a("li",[a("p",[s._v("统计工作量")])]),s._v(" "),a("li",[a("p",[s._v("并行开发、提高开发效率")])]),s._v(" "),a("li",[a("p",[s._v("跟踪记录整个软件的开发过程")])]),s._v(" "),a("li",[a("p",[s._v("减轻开发人员的负担，节省时间，同时降低人为错误")])])]),s._v(" "),a("p",[s._v("简单说就是用于管理多人协同开发项目的技术。")]),s._v(" "),a("p",[s._v("没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。")]),s._v(" "),a("p",[s._v("无论是工作还是学习，或者是自己做笔记，都经历过这样一个阶段！我们就迫切需要一个版本控制工具！")]),s._v(" "),a("p",[s._v("多人开发就必须要使用版本控制！")]),s._v(" "),a("h3",{attrs:{id:"常见的版本控制工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的版本控制工具"}},[s._v("#")]),s._v(" 常见的版本控制工具")]),s._v(" "),a("p",[s._v("我们学习的东西，一定是当下最流行的！")]),s._v(" "),a("p",[s._v("主流的版本控制器有如下这些：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("Git")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("SVN")]),s._v("（Subversion）")])]),s._v(" "),a("li",[a("h3",{attrs:{id:"cvs-concurrent-versions-system"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cvs-concurrent-versions-system"}},[s._v("#")]),s._v(" "),a("strong",[s._v("CVS")]),s._v("（Concurrent Versions System）")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("VSS")]),s._v("（Micorosoft Visual SourceSafe）")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("TFS")]),s._v("（Team Foundation Server）")])]),s._v(" "),a("li",[a("p",[s._v("Visual Studio Online")])])]),s._v(" "),a("p",[s._v("版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN")]),s._v(" "),a("h3",{attrs:{id:"版本控制分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本控制分类"}},[s._v("#")]),s._v(" 版本控制分类")]),s._v(" "),a("p",[a("strong",[s._v("1、本地版本控制")])]),s._v(" "),a("p",[s._v("记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014587364.png",alt:"1686014587364"}})]),s._v(" "),a("p",[a("strong",[s._v("2、集中版本控制  SVN")])]),s._v(" "),a("p",[s._v("所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014598959.png",alt:"1686014598959"}})]),s._v(" "),a("p",[s._v("所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS")]),s._v(" "),a("p",[a("strong",[s._v("3、分布式版本控制 Git")])]),s._v(" "),a("p",[s._v("每个人都拥有全部的代码！安全隐患！")]),s._v(" "),a("p",[s._v("所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。")]),s._v(" "),a("p",[s._v("不会因为服务器损坏或者网络问题，造成不能工作的情况！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014624053.png",alt:"1686014624053"}})]),s._v(" "),a("h3",{attrs:{id:"git与svn的主要区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git与svn的主要区别"}},[s._v("#")]),s._v(" Git与SVN的主要区别")]),s._v(" "),a("p",[s._v("SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。")]),s._v(" "),a("p",[s._v("Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！")]),s._v(" "),a("p",[a("strong",[s._v("Git是目前世界上最先进的分布式版本控制系统。")])]),s._v(" "),a("h2",{attrs:{id:"聊聊git的历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聊聊git的历史"}},[s._v("#")]),s._v(" 聊聊Git的历史")]),s._v(" "),a("p",[s._v("同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。")]),s._v(" "),a("p",[s._v("Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991－2002年间)。到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。")]),s._v(" "),a("p",[s._v("Linux社区中存在很多的大佬！破解研究 BitKeeper ！")]),s._v(" "),a("p",[s._v("到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。这就迫使 Linux 开源社区(特别是 Linux 的缔造者 Linus Torvalds)基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。（2周左右！） 也就是后来的 Git！")]),s._v(" "),a("p",[a("strong",[s._v("Git是目前世界上最先进的分布式版本控制系统。")])]),s._v(" "),a("p",[s._v("Git是免费、开源的，最初Git是为辅助 Linux 内核开发的，来替代 BitKeeper！")]),s._v(" "),a("h2",{attrs:{id:"git环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git环境配置"}},[s._v("#")]),s._v(" Git环境配置")]),s._v(" "),a("h3",{attrs:{id:"软件下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件下载"}},[s._v("#")]),s._v(" 软件下载")]),s._v(" "),a("p",[s._v("打开 [git官网] https://git-scm.com/，下载git对应操作系统的版本。")]),s._v(" "),a("p",[s._v("所有东西下载慢的话就可以去找镜像！")]),s._v(" "),a("p",[s._v("官网下载太慢，我们可以使用淘宝镜像下载：http://npm.taobao.org/mirrors/git-for-windows/")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014725981.png",alt:"1686014725981"}})]),s._v(" "),a("p",[s._v("保证我们有git的环境变量")]),s._v(" "),a("p",[s._v("下载对应的版本即可安装！")]),s._v(" "),a("p",[s._v("安装：无脑下一步即可！安装完毕就可以使用了！")]),s._v(" "),a("h3",{attrs:{id:"启动git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动git"}},[s._v("#")]),s._v(" 启动Git")]),s._v(" "),a("p",[s._v("安装成功后在开始菜单中会有Git项，菜单下有3个程序：任意文件夹下右键也可以看到对应的程序！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014731322.png",alt:"1686014731322"}})]),s._v(" "),a("p",[s._v("**Git Bash：**Unix与Linux风格的命令行，使用最多，推荐最多")]),s._v(" "),a("p",[s._v("**Git CMD：**Windows风格的命令行")]),s._v(" "),a("p",[a("strong",[s._v("Git GUI")]),s._v("：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令")]),s._v(" "),a("h3",{attrs:{id:"常用的linux命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的linux命令"}},[s._v("#")]),s._v(" 常用的Linux命令")]),s._v(" "),a("p",[s._v("平时一定要多使用这些基础的命令！")]),s._v(" "),a("p",[s._v("1）、cd : 改变目录。")]),s._v(" "),a("p",[s._v("2）、cd . . 回退到上一个目录，直接cd进入默认目录")]),s._v(" "),a("p",[s._v("3）、pwd : 显示当前所在的目录路径。")]),s._v(" "),a("p",[s._v("4）、ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。")]),s._v(" "),a("p",[s._v("5）、touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。")]),s._v(" "),a("p",[s._v("6）、rm:  删除一个文件, rm index.js 就会把index.js文件删除。")]),s._v(" "),a("p",[s._v("7）、mkdir:  新建一个目录,就是新建一个文件夹。")]),s._v(" "),a("p",[s._v("8）、rm -r :  删除一个文件夹, rm -r src 删除src目录")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("rm -rf /  切勿在Linux中尝试！删除电脑中全部文件！\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("9）、mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。")]),s._v(" "),a("p",[s._v("10）、reset 重新初始化终端/清屏。")]),s._v(" "),a("p",[s._v("11）、clear 清屏。")]),s._v(" "),a("p",[s._v("12）、history 查看命令历史。")]),s._v(" "),a("p",[s._v("13）、help 帮助。")]),s._v(" "),a("p",[s._v("14）、exit 退出。")]),s._v(" "),a("p",[s._v("15）、#表示注释")]),s._v(" "),a("h3",{attrs:{id:"git配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git配置"}},[s._v("#")]),s._v(" Git配置")]),s._v(" "),a("p",[s._v("所有的配置文件，其实都保存在本地！")]),s._v(" "),a("p",[s._v("查看配置 git config -l (–list)")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014741476.png",alt:"1686014741476"}})]),s._v(" "),a("p",[s._v("查看不同级别的配置文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#查看系统config\ngit config --system --list\n　　\n#查看当前用户（global）配置\ngit config --global  --list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("Git相关的配置文件：")])]),s._v(" "),a("p",[s._v("1）、Git\\etc\\gitconfig  ：Git 安装目录下的 gitconfig     --system 系统级")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1668432283005.png",alt:"1668432283005"}})]),s._v(" "),a("p",[s._v("2）、C:\\Users\\Administrator\\ .gitconfig    只适用于当前登录用户的配置  --global 全局")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014757404.png",alt:"1686014757404"}})]),s._v(" "),a("p",[s._v("这里可以直接编辑配置文件，通过命令设置后会响应到这里。")]),s._v(" "),a("h3",{attrs:{id:"设置用户名与邮箱-用户标识-必要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置用户名与邮箱-用户标识-必要"}},[s._v("#")]),s._v(" 设置用户名与邮箱（用户标识，必要）")]),s._v(" "),a("p",[s._v("当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"kuangshen"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24736743")]),s._v("@qq.com   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#邮箱")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("只需要做一次这个设置，如果你传递了--global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要--global选项。总之--global为全局配置，不加为某个项目的特定配置。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014765490.png",alt:"1686014765490"}})]),s._v(" "),a("h2",{attrs:{id:"git基本理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git基本理论"}},[s._v("#")]),s._v(" Git基本理论")]),s._v(" "),a("p",[s._v("（核心所有的时间都需要源于这个理论）")]),s._v(" "),a("h3",{attrs:{id:"三个区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三个区域"}},[s._v("#")]),s._v(" 三个区域")]),s._v(" "),a("p",[s._v("Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage/Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014772107.png",alt:"1686014772107"}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Workspace：工作区，就是你平时存放项目代码的地方")])]),s._v(" "),a("li",[a("p",[s._v("Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息")])]),s._v(" "),a("li",[a("p",[s._v("Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本")])]),s._v(" "),a("li",[a("p",[s._v("Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换")])])]),s._v(" "),a("p",[s._v("本地的三个区域确切的说应该是git仓库中HEAD指向的版本：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014778873.png",alt:"1686014778873"}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。")])]),s._v(" "),a("li",[a("p",[s._v("WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。")])]),s._v(" "),a("li",[a("p",[s._v(".git：存放Git管理信息的目录，初始化仓库的时候自动创建。")])]),s._v(" "),a("li",[a("p",[s._v("Index/Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。")])]),s._v(" "),a("li",[a("p",[s._v("Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。")])]),s._v(" "),a("li",[a("p",[s._v("Stash：隐藏，是一个工作状态保存栈，用于保存/恢复WorkSpace中的临时状态。")])])]),s._v(" "),a("h3",{attrs:{id:"工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[s._v("#")]),s._v(" 工作流程")]),s._v(" "),a("p",[s._v("git的工作流程一般是这样的：")]),s._v(" "),a("p",[s._v("１、在工作目录中添加、修改文件；")]),s._v(" "),a("p",[s._v("２、将需要进行版本管理的文件放入暂存区域；")]),s._v(" "),a("p",[s._v("３、将暂存区域的文件提交到git仓库。")]),s._v(" "),a("p",[s._v("因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014789484.png",alt:"1686014789484"}})]),s._v(" "),a("h2",{attrs:{id:"git项目搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git项目搭建"}},[s._v("#")]),s._v(" Git项目搭建")]),s._v(" "),a("h3",{attrs:{id:"创建工作目录与常用指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建工作目录与常用指令"}},[s._v("#")]),s._v(" 创建工作目录与常用指令")]),s._v(" "),a("p",[s._v("工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。")]),s._v(" "),a("p",[s._v("日常使用只要记住下图6个命令：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014797690.png",alt:"1686014797690"}})]),s._v(" "),a("h3",{attrs:{id:"本地仓库搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地仓库搭建"}},[s._v("#")]),s._v(" 本地仓库搭建")]),s._v(" "),a("p",[s._v("创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。")]),s._v(" "),a("p",[s._v("1、创建全新的仓库，需要用GIT管理的项目的根目录执行：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前目录新建一个Git代码库")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("2、执行后可以看到，仅仅在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。")]),s._v(" "),a("h3",{attrs:{id:"克隆远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#克隆远程仓库"}},[s._v("#")]),s._v(" 克隆远程仓库")]),s._v(" "),a("p",[s._v("1、另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 克隆一个项目和它的整个代码历史(版本信息)")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://gitee.com/kuangstudy/openclass.git")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定拉 master 分支代码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" master http://gitslab.yiqing.com/declare/about.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("2、去 gitee 或者 github 上克隆一个测试！")]),s._v(" "),a("h2",{attrs:{id:"git文件操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git文件操作"}},[s._v("#")]),s._v(" Git文件操作")]),s._v(" "),a("h3",{attrs:{id:"文件的四种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的四种状态"}},[s._v("#")]),s._v(" 文件的四种状态")]),s._v(" "),a("p",[s._v("版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Untracked")]),s._v(": 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过"),a("mark"),s._v(" 状态变为"),a("mark",[s._v("Staged")]),s._v(".")]),s._v(" "),a("li",[a("strong",[s._v("Unmodify")]),s._v(": 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为"),a("mark",[s._v("Modified")]),s._v(".  如果使用"),a("mark",[s._v("git rm")]),s._v("移出版本库, 则成为"),a("mark",[s._v("Untracked")]),s._v("文件")]),s._v(" "),a("li",[a("strong",[s._v("Modified")]),s._v(": 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过"),a("mark",[s._v("git add")]),s._v("可进入暂存"),a("mark",[s._v("staged")]),s._v("状态, 使用"),a("mark",[s._v("git checkout")]),s._v(" 则丢弃修改过, 返回到"),a("mark",[s._v("unmodify")]),s._v("状态, 这个"),a("mark",[s._v("git checkout")]),s._v("即从库中取出文件, 覆盖当前修改 !")])]),s._v(" "),a("p",[s._v("（前三种状态都在workspace工作区）")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Staged")]),s._v(": 暂存状态. 执行"),a("mark",[s._v("git commit")]),s._v("则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为"),a("mark",[s._v("Unmodify")]),s._v("状态. 执行"),a("mark",[s._v("git reset HEAD filename")]),s._v("取消暂存, 文件状态为Modified")])]),s._v(" "),a("h3",{attrs:{id:"查看文件状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看文件状态"}},[s._v("#")]),s._v(" 查看文件状态")]),s._v(" "),a("p",[s._v("上面说文件有4种状态，通过如下命令可以查看到文件的状态：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看指定文件状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看所有文件状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加所有文件到暂存区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果文件未被跟踪,即没有使用git add这个命令时,文件为红色,如果使用这个命令,则文件变为绿色. ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"消息内容"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提交暂存区中的内容到本地仓库 -m 提交信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new file hello.txt"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -a 参数表示，可以将所有已跟踪文件中的执行修改或删除操作的文件都提交到本地仓库，即使它们没有经过 git add 添加到暂存区。（或者直接 -am 一样）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[s._v("#")]),s._v(" 忽略文件")]),s._v(" "),a("p",[s._v("有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等")]),s._v(" "),a("p",[s._v('在主目录下建立".gitignore"文件，此文件有如下规则：')]),s._v(" "),a("ol",[a("li",[a("p",[s._v("忽略文件中的空行或以井号（#）开始的行将会被忽略。")])]),s._v(" "),a("li",[a("p",[s._v("可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,...}）代表可选的字符串等。")])]),s._v(" "),a("li",[a("p",[s._v("如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。")])]),s._v(" "),a("li",[a("p",[s._v("如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。")])]),s._v(" "),a("li",[a("p",[s._v("如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为注释")]),s._v("\n*.txt        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#忽略所有 .txt结尾的文件,这样的话上传就不会被选中！")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("lib.txt     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#但lib.txt除外")]),s._v("\n/temp        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#仅忽略项目根目录下的temp文件,不包括其它目录temp")]),s._v("\nbuild/       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#忽略build/目录下的所有文件")]),s._v("\ndoc/*.txt    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#会忽略 doc/notes.txt 但不包括 doc/server/arch.txt")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"使用码云"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用码云"}},[s._v("#")]),s._v(" 使用码云")]),s._v(" "),a("h3",{attrs:{id:"github-是有墙的-比较慢-在国内的话-我们一般使用-gitee-公司中有时候会搭建自己的gitlab服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-是有墙的-比较慢-在国内的话-我们一般使用-gitee-公司中有时候会搭建自己的gitlab服务器"}},[s._v("#")]),s._v(" github 是有墙的，比较慢，在国内的话，我们一般使用 gitee ，公司中有时候会搭建自己的gitlab服务器")]),s._v(" "),a("p",[s._v("这个其实可以作为大家未来找工作的一个重要信息！")]),s._v(" "),a("p",[s._v("1、注册登录码云，完善个人信息")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014805646.png",alt:"1686014805646"}})]),s._v(" "),a("p",[s._v("2、设置本机绑定SSH公钥，实现免密码登录！（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库！)")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 C:\\Users\\Administrator\\.ssh 目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成公钥")]),s._v("\nssh-keygen （-t rsa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"/assets/1686014819370.png",alt:"1686014819370"}})]),s._v(" "),a("p",[s._v("3、将公钥信息public key 添加到码云账户中即可！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014825797.png",alt:"1686014825797"}})]),s._v(" "),a("p",[s._v("4、使用码云创建一个自己的仓库！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014833147.png",alt:"1686014833147"}})]),s._v(" "),a("p",[s._v("许可证：开源是否可以随意转载，开源但是不能商业使用，不能转载，...  限制！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014845861.png",alt:"1686014845861"}})]),s._v(" "),a("p",[s._v("克隆到本地！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014855674.png",alt:"1686014855674"}})]),s._v(" "),a("h2",{attrs:{id:"git提交代码到远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git提交代码到远程仓库"}},[s._v("#")]),s._v(" git提交代码到远程仓库")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程仓库地址别名(可以自定义,一般为origin)  远程仓库地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/smileatl/leetcode101.git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以有多个，github一个，gitee一个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前远程地址的别名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" origin "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 远程仓库的名字修改了，可以先删除再重新添加")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push 远程仓库地址别名 分支名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推送远程分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" origin master "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -u 记住推送地址及分支，下次推送只需要输入git push即可.")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("git push详细解析：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push命令用于从将本地的分支版本上传到远程并合并。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程主机名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("本地分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果本地分支名与远程分支名相同，则可以省略冒号：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("远程主机名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("本地分支名"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果本地版本与远程版本有差异，但又要强制推送可以使用 --force 参数：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--force")]),s._v(" origin master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除主机的分支可以使用 --delete 参数，以下命令表示删除 origin 主机的 master 分支：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HEAD是一个特别的指针，它是一个指向你正在工作的本地分支的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin HEAD:master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("git pull拉去远程仓库中最新的版本：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取远程仓库中最新的版本：git pull 远程仓库地址 远程地址分支名称")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取origin仓库的master分支，与本地当前分支合并")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"查看版本-回退版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看版本-回退版本"}},[s._v("#")]),s._v(" 查看版本，回退版本")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有提交记录")]),s._v("\nvs： "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pretty")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一行显示版本信息")]),s._v("\n补充：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log lfa380b5O2a0Ob82bfc8d84c5ab5el5b8fbf7dac "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会显示所有关于这个id以及之前的修改记录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log lfa380b5O2a0Ob82bfc8d84c5ab5el5b8fbf7dac "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加上-1参数表示我们只想看到一行记录")]),s._v("\n而如果想要查看这条提交记录具体修改了什么内容，可以在命令中加入p参数，命令如下:\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log Ifa380b502a00b82bfc8d84c5ab5el5b8fbf7dac "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有版本信息")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" 版本id  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 回退版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 在执行git checkout master或者git pull命令前，执行过git add .及commit命令git commit -m "xxx"，git工具才能给你记录你的版本变化（本地的）,否则丢失代码可能无可挽救。')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"说明-git分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明-git分支"}},[s._v("#")]),s._v(" 说明：GIT分支")]),s._v(" "),a("p",[s._v("分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014868042.png",alt:"1686014868042"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1686014876139.png",alt:"1686014876139"}})]),s._v(" "),a("p",[s._v("git分支中常用指令：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有本地分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有远程分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有分支，包括本地和远程分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建一个分支，但依然停留在当前分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建一个分支，并切换到该分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并指定分支到当前分支，比如当前分支是util，branch是util_test，就是将util_test合并到util")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge时最好也加消息信息")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除分支")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程分支")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-dr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("remote/branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名分支")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在当前分支时")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" new_branch_name\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当不在当前分支时")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" old_branch_name new_branch_name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("h3",{attrs:{id:"git新建远程分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git新建远程分支"}},[s._v("#")]),s._v(" Git新建远程分支")]),s._v(" "),a("p",[s._v("现在我在master分支上，工作目标是干净的，也没有需要commit的：")]),s._v(" "),a("p",[a("code",[s._v("$ git branch")]),s._v("\n* master\nrelease")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master\nYour branch is up-to-date with "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nnothing to commit, working directory clean\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("新建远程分支\n新建一个本地分支：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" localbranch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看一下现在的分支状态:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n*localbranch\n master\n release\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("星号(*)表示当前所在分支。现在的状态是成功创建的新的分支并且已经切换到新分支上。")]),s._v(" "),a("p",[s._v("把新建的本地分支push到远程服务器，远程分支与本地分支同名（当然可以随意起名）：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin localbranch:localbranch\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用"),a("code",[s._v("git branch -a")]),s._v("查看所有分支，会看到"),a("code",[s._v("remotes/origin/localbranch")]),s._v("这个远程分支，说明新建远程分支成功。")]),s._v(" "),a("p",[s._v("删除远程分支\n我比较喜欢的简单方式，推送一个空分支到远程分支，其实就相当于删除远程分支：")]),s._v(" "),a("p",[a("code",[s._v("$ git push origin :localbranch")]),s._v("\n也可以使用：")]),s._v(" "),a("p",[a("code",[s._v("$ git push origin --delete localbranch")]),s._v("\n这两种方式都可以删除指定的远程分支")]),s._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[s._v("#")]),s._v(" 问题")]),s._v(" "),a("p",[s._v("多个分支如果并行执行，就会导致我们代码不冲突，也就是同时存在多个版本！")]),s._v(" "),a("p",[s._v("如果同一个文件在合并分支时都被修改了则会引起冲突：解决的办法是我们可以修改冲突文件后重新提交！选择要保留他的代码还是你的代码！")]),s._v(" "),a("p",[a("mark",[s._v("master主分支应该非常稳定，用来发布新版本，一般情况下不允许在上面工作，工作一般情况下在新建的dev分支上工作，工作完后，比如上要发布，或者说dev分支代码稳定后可以合并到主分支master上来。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1668437158747.png",alt:"1668437158747"}})]),s._v(" "),a("h2",{attrs:{id:"常见问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),a("p",[s._v("git中出现“interactive rebase in progress； onto 11dde1e”错误分析与解决方案")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--continue")]),s._v("   //使用该命令继续代码的提交\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("大家在做项目的时候经常会使用git，但同时也会遇到很多问题，比如刚修改后得代码突然后悔了，这时怎么办呢\n1、未使用git add 的时候----在工作区")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- filepathname //放弃修改某个文件\n例如： "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- readme.md\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("  //放弃所有修改的文件\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" restore "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" //放弃所有修改的文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("2、已经使用git add 的时候----在暂存区")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD filepathname //恢复某个文件到工作区\n例如： "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD readme.md\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" //恢复所有文件到工作区\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("  reset  //恢复所有文件到工作区\n\n注意：这里只是恢复到了工作区，如果想放弃修改的代码还需要执行步骤1（工作区）中的操作\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("3、已经使用git commit提交的了代码----在版本区(本地仓库)")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("、如果你想全部撤回并回到远程仓库最新的状态"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("不保存代码修改"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("、git reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" HEAD^ //回退上一次commit的状态（本来2-2，现在1-1）\n\t\t//或git reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" commit_id //回退某个版本+id号就行\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("、git pull //拉取一下远程最新的\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("、如果你想拉回工作区并保存修改。只撤销 commit 和 add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("保存代码修改"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("（本来2-2，现在2-1，没有使用git add，文件为红色，表示文件不在暂存区） \n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--mixed")]),s._v(" HEAD^\n\t\t或\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset HEAD^\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("、如果你想撤销commit 但是不撤销 add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("保存代码修改"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" （本来2-2，现在2-1，但是使用了git add，文件变为绿色，表示文件在暂存区）\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--soft")]),s._v(" HEAD^ //只撤销了git commit ， 修改后的代码还在暂存区\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 、终极版，由于你太懒，不管是暂存区，版本区，你只想撤销修改并回到远程最新的版本"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("不保存代码修改"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n \t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 、git fetch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--all")]),s._v("\n \t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("、git reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" origin/master //git reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" origin/远程分支名\n\t注意：这里只在暂存区和版本区\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("4、如果你git push 到了远程分支，这时候你后悔了怎么办")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("胆小误试，搞之前记得做备份\n第一种\n回滚远程分支的最近一次提交\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert HEAD\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin 分支名\n例如：我刚在master分支提交了一次\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert HEAD\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n慎用啊~~~这种方式会在远程生成一个版本号\n\n第二种\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" HEAD^ //回退上一个版本\n或\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v(" commit_id //回退到某个版本 id就是你的版本号\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin HEAD "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--force")]),s._v(" //强制推送到远程，可能会受到保护\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("git中一般按q是退出")]),s._v(" "),a("p",[s._v("git diff")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示自上次提交以来对代码的更改，git diff origin/util将显示相对于初始xv6-labs-2020中util代码的更改")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" origin/util\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("出现问题：[!remote rejected]:refusing to delete the current branch")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除远程分支")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("删除指定的分支是远程仓库当前的默认分支，所有无法删除")]),s._v(" "),a("p",[s._v("方法：修改默认分支")]),s._v(" "),a("p",[s._v("出现问题：remote: Support for password authentication was removed on August 13, 2021.\nfatal: 'https://github.com/smileatl/MIT6.S081-labs.git/' 鉴权失败\n2021.8.13起，github要求使用基于令牌的身份验证")]),s._v(" "),a("p",[a("img",{attrs:{src:"/assets/1669031239456.png",alt:"1669031239456"}})]),s._v(" "),a("p",[s._v("重新去github上生成令牌，当前生成的令牌是：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")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote set-url origin  https://"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("your_token"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("@github.com/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USERNAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("REPO"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote set-url github https://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@github.com/smileatl/MITS6.S081-labs.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果出现远程库与本地库不一致造成的问题")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--rebase")]),s._v(" origin master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该命令的意思是把远程库中的更新合并到（pull=fetch+merge）本地库中，–-rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。出现如下图执行pull执行成功后，可以成功执行git push origin master操作。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"gitignore规则不生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitignore规则不生效"}},[s._v("#")]),s._v(" .gitignore规则不生效")]),s._v(" "),a("p",[s._v(".gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。")]),s._v(" "),a("p",[s._v("解决方法就是先把本地缓存删除（改变成未track状态），然后再提交:")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cached")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'update .gitignore'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);