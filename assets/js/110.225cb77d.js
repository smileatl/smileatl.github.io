(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{430:function(t,s,a){"use strict";a.r(s);var e=a(7),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[t._v("#")]),t._v(" MySQL")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("h3",{attrs:{id:"mysql数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据库"}},[t._v("#")]),t._v(" MySQL数据库")]),t._v(" "),s("h4",{attrs:{id:"客户端连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#客户端连接"}},[t._v("#")]),t._v(" 客户端连接")]),t._v(" "),s("p",[t._v("1). 方式一：使用MySQL提供的客户端命令行工具")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1673233450471.png",alt:"1673233450471"}})]),t._v(" "),s("p",[t._v("2). 方式二：使用系统自带的命令行工具执行指令")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-h "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-P "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" root "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("\n\n参数：\n\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" MySQL服务所在的主机IP\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-P")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" MySQL服务端口号， 默认3306\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-u")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" MySQL数据库用户名\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" ： MySQL数据库用户名对应的密码\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("[]内为可选参数，如果需要连接远程的MySQL，需要加上这两个参数来指定远程主机IP、端口，如果\n连接本地的MySQL，则无需指定这两个参数。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1673233486011.png",alt:"1673233486011"}})]),t._v(" "),s("blockquote",[s("p",[t._v("注意： 使用这种方式进行连接时，需要安装完毕后配置PATH环境变量。")])]),t._v(" "),s("h4",{attrs:{id:"数据模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[t._v("#")]),t._v(" 数据模型")]),t._v(" "),s("p",[t._v("MySQL是关系型数据库，是基于二维表进行数据存储的，具体的结构图下:")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1673233275580.png",alt:"1673233275580"}})]),t._v(" "),s("ul",[s("li",[t._v("我们可以通过MySQL客户端连接数据库管理系统DBMS，然后通过DBMS操作数据库。")]),t._v(" "),s("li",[t._v("可以使用SQL语句，通过数据库管理系统操作数据库，以及操作数据库中的表结构及数据。")]),t._v(" "),s("li",[t._v("一个数据库服务器中可以创建多个数据库，一个数据库中也可以包含多张表，而一张表中又可以包\n含多行记录。")])]),t._v(" "),s("h2",{attrs:{id:"基础篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础篇"}},[t._v("#")]),t._v(" 基础篇")]),t._v(" "),s("h3",{attrs:{id:"通用语法及分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通用语法及分类"}},[t._v("#")]),t._v(" 通用语法及分类")]),t._v(" "),s("p",[t._v("在学习具体的SQL语句之前，先来了解一下SQL语言的同于语法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("SQL语句可以单行或多行书写，以分号结尾。")])]),t._v(" "),s("li",[s("p",[t._v("SQL语句可以使用空格/缩进来增强语句的可读性。")])]),t._v(" "),s("li",[s("p",[t._v("MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。")])]),t._v(" "),s("li",[s("p",[t._v("注释：")]),t._v(" "),s("p",[t._v("单行注释：-- 注释内容  或  ## 注释内容")]),t._v(" "),s("p",[t._v("多行注释：/* 注释内容 */")])])]),t._v(" "),s("ul",[s("li",[t._v("DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）")]),t._v(" "),s("li",[t._v("DML: 数据操作语言，用来对数据库表中的数据进行增删改")]),t._v(" "),s("li",[t._v("DQL: 数据查询语言，用来查询数据库中表的记录")]),t._v(" "),s("li",[t._v("DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限")])]),t._v(" "),s("h4",{attrs:{id:"ddl-数据定义语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ddl-数据定义语言"}},[t._v("#")]),t._v(" DDL（数据定义语言）")]),t._v(" "),s("p",[t._v("数据定义语言")]),t._v(" "),s("h5",{attrs:{id:"数据库操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库操作"}},[t._v("#")]),t._v(" 数据库操作")]),t._v(" "),s("p",[t._v("查询所有数据库：\n"),s("code",[t._v("SHOW DATABASES;")]),t._v("\n查询当前数据库（查看当前处于哪一个数据库里面）：\n"),s("code",[t._v("SELECT DATABASE();")]),t._v("\n创建数据库：\n"),s("code",[t._v("CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];")]),t._v("\n删除数据库：\n"),s("code",[t._v("DROP DATABASE [ IF EXISTS ] 数据库名;")]),t._v("\n使用切换数据库：\n"),s("code",[t._v("USE 数据库名;")])]),t._v(" "),s("h6",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集")])]),t._v(" "),s("h5",{attrs:{id:"表操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表操作"}},[t._v("#")]),t._v(" 表操作")]),t._v(" "),s("p",[t._v("查询当前数据库所有表：\n"),s("code",[t._v("SHOW TABLES;")]),t._v("\n查询表结构：\n"),s("code",[t._v("DESC 表名;")]),t._v("\n查询指定表的建表语句：\n"),s("code",[t._v("SHOW CREATE TABLE 表名;")])]),t._v(" "),s("p",[t._v("创建表：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("注释"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("注释"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" 字段"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("注释"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t字段n 字段n类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" 字段n注释"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" 表注释 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("最后一个字段后面没有逗号")])]),t._v(" "),s("p",[t._v("添加字段：\n"),s("code",[t._v("ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束]s;")]),t._v("\n例："),s("code",[t._v("ALTER TABLE emp ADD nickname varchar(20) COMMENT '昵称';")])]),t._v(" "),s("p",[t._v("修改数据类型：\n"),s("code",[t._v("ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);")]),t._v("\n修改字段名和字段类型：\n"),s("code",[t._v("ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];")]),t._v("\n例：将emp表的nickname字段修改为username，类型为varchar(30)\n"),s("code",[t._v("ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT '昵称';")])]),t._v(" "),s("p",[t._v("删除字段：\n"),s("code",[t._v("ALTER TABLE 表名 DROP 字段名;")])]),t._v(" "),s("p",[t._v("修改表名：\n"),s("code",[t._v("ALTER TABLE 表名 RENAME TO 新表名")])]),t._v(" "),s("p",[t._v("删除表：\n"),s("code",[t._v("DROP TABLE [IF EXISTS] 表名;")]),t._v("\n删除表，并重新创建该表：\n"),s("code",[t._v("TRUNCATE TABLE 表名;")])]),t._v(" "),s("h4",{attrs:{id:"dml-数据操作语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dml-数据操作语言"}},[t._v("#")]),t._v(" DML（数据操作语言）")]),t._v(" "),s("h5",{attrs:{id:"添加数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加数据"}},[t._v("#")]),t._v(" 添加数据")]),t._v(" "),s("p",[t._v("指定字段：\n"),s("code",[t._v("INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);")]),t._v("\n全部字段：\n"),s("code",[t._v("INSERT INTO 表名 VALUES (值1, 值2, ...);")])]),t._v(" "),s("p",[t._v("批量添加数据：\n"),s("code",[t._v("INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);")]),t._v(" "),s("code",[t._v("INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);")])]),t._v(" "),s("h6",{attrs:{id:"注意事项-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("插入数据时，指定的字段顺序需要与值得顺序是一一对应的")])]),t._v(" "),s("li",[s("p",[t._v("字符串和日期类型数据应该包含在引号中")])]),t._v(" "),s("li",[s("p",[t._v("插入的数据大小应该在字段的规定范围内")])])]),t._v(" "),s("h5",{attrs:{id:"更新和删除数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新和删除数据"}},[t._v("#")]),t._v(" 更新和删除数据")]),t._v(" "),s("p",[t._v("修改数据：\n"),s("code",[t._v("UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];")]),t._v("\n例：\n"),s("code",[t._v("UPDATE emp SET name = 'Jack' WHERE id = 1;")])]),t._v(" "),s("p",[s("strong",[t._v("注意事项")])]),t._v(" "),s("ul",[s("li",[t._v("修改语句的条件可以有，也可以没有，如果没有条件，则会修改整张表的所有数据")])]),t._v(" "),s("p",[t._v("删除数据：\n"),s("code",[t._v("DELETE FROM 表名 [ WHERE 条件 ];")])]),t._v(" "),s("p",[s("strong",[t._v("注意事项")])]),t._v(" "),s("ul",[s("li",[t._v("delete语句的条件可以有，也可以没有，如果没有条件，则会删除整张表的所有数据。")]),t._v(" "),s("li",[t._v("delete 语句不能删除某一个字段的值(可以使用update，将该字段值置为NULL即可)。")]),t._v(" "),s("li",[t._v("当进行删除全部数据操作时，datagrip会提示我们，询问时候确认删除，我们直接点击Execute即可。")])]),t._v(" "),s("h4",{attrs:{id:"dql-数据查询语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dql-数据查询语言"}},[t._v("#")]),t._v(" DQL（数据查询语言）")]),t._v(" "),s("p",[t._v("Data Query Language")]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("\n\t字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("\n\t表名字段\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("\n\t条件列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v("\n\t分组字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v("\n\t分组后的条件列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v("\n\t排序字段列表\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v("\n\t分页参数\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h5",{attrs:{id:"基础查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础查询"}},[t._v("#")]),t._v(" 基础查询")]),t._v(" "),s("p",[t._v("查询多个字段：\n"),s("code",[t._v("SELECT 字段1, 字段2, 字段3, ... FROM 表名;")]),t._v(" "),s("code",[t._v("SELECT * FROM 表名;")])]),t._v(" "),s("p",[t._v("设置别名：\n"),s("code",[t._v("SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;")]),t._v(" "),s("code",[t._v("SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;")])]),t._v(" "),s("p",[t._v("去除重复记录：\n"),s("code",[t._v("SELECT DISTINCT 字段列表 FROM 表名;")])]),t._v(" "),s("p",[t._v("转义：\n"),s("code",[t._v("SELECT * FROM 表名 WHERE name LIKE '/_张三' ESCAPE '/'")]),t._v("\n/ 之后的_不作为通配符")]),t._v(" "),s("h5",{attrs:{id:"条件查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[t._v("#")]),t._v(" 条件查询")]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 字段列表 FROM 表名 WHERE 条件列表;")])]),t._v(" "),s("p",[t._v("条件：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("比较运算符")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v(">")]),t._v(" "),s("td",[t._v("大于")])]),t._v(" "),s("tr",[s("td",[t._v(">=")]),t._v(" "),s("td",[t._v("大于等于")])]),t._v(" "),s("tr",[s("td",[t._v("<")]),t._v(" "),s("td",[t._v("小于")])]),t._v(" "),s("tr",[s("td",[t._v("<=")]),t._v(" "),s("td",[t._v("小于等于")])]),t._v(" "),s("tr",[s("td",[t._v("=")]),t._v(" "),s("td",[t._v("等于")])]),t._v(" "),s("tr",[s("td",[t._v("<> 或 !=")]),t._v(" "),s("td",[t._v("不等于")])]),t._v(" "),s("tr",[s("td",[t._v("BETWEEN ... AND ...")]),t._v(" "),s("td",[t._v("在某个范围内（含最小、最大值）")])]),t._v(" "),s("tr",[s("td",[t._v("IN(...)")]),t._v(" "),s("td",[t._v("在in之后的列表中的值，多选一")])]),t._v(" "),s("tr",[s("td",[t._v("LIKE 占位符")]),t._v(" "),s("td",[t._v("模糊匹配（_匹配单个字符，%匹配任意个字符）")])]),t._v(" "),s("tr",[s("td",[t._v("IS NULL")]),t._v(" "),s("td",[t._v("是NULL")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("逻辑运算符")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AND 或 &&")]),t._v(" "),s("td",[t._v("并且（多个条件同时成立）")])]),t._v(" "),s("tr",[s("td",[t._v("OR 或 ||")]),t._v(" "),s("td",[t._v("或者（多个条件任意一个成立）")])]),t._v(" "),s("tr",[s("td",[t._v("NOT 或 !")]),t._v(" "),s("td",[t._v("非，不是")])])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄等于30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄小于30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 小于等于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 没有身份证")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" idcard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" idcard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 有身份证")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" idcard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" idcard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 不等于")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄在20到30之间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 下面语句不报错，但查不到任何信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("between")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 性别为女且年龄小于30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" gender "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄等于25或30或35")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 姓名为两个字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 身份证最后为X")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" idcard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br")])]),s("h5",{attrs:{id:"聚合查询-聚合函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚合查询-聚合函数"}},[t._v("#")]),t._v(" 聚合查询（聚合函数）")]),t._v(" "),s("p",[t._v("常见聚合函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("count")]),t._v(" "),s("td",[t._v("统计数量")])]),t._v(" "),s("tr",[s("td",[t._v("max")]),t._v(" "),s("td",[t._v("最大值")])]),t._v(" "),s("tr",[s("td",[t._v("min")]),t._v(" "),s("td",[t._v("最小值")])]),t._v(" "),s("tr",[s("td",[t._v("avg")]),t._v(" "),s("td",[t._v("平均值")])]),t._v(" "),s("tr",[s("td",[t._v("sum")]),t._v(" "),s("td",[t._v("求和")])])])]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 聚合函数(字段列表) FROM 表名;")]),t._v("\n例：\n"),s("code",[t._v('SELECT count(id) from employee where workaddress = "广东省";')])]),t._v(" "),s("h5",{attrs:{id:"分组查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[t._v("#")]),t._v(" 分组查询")]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];")])]),t._v(" "),s("p",[t._v("where 和 having 的区别：")]),t._v(" "),s("ul",[s("li",[t._v("执行时机不同：where是分组之前进行过滤，不满足where条件不参与分组；having是分组后对结果进行过滤。")]),t._v(" "),s("li",[t._v("判断条件不同：where不能对聚合函数进行判断，而having可以。")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据性别分组，统计男性和女性数量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据性别分组，统计男性和女性的平均年龄")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄小于45，并根据工作地址分组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" workaddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" workaddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" workaddress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" address_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("group")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" workaddress "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("having")]),t._v(" address_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h6",{attrs:{id:"注意事项-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-3"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("执行顺序：where > 聚合函数 > having")]),t._v(" "),s("li",[t._v("分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义")])]),t._v(" "),s("h5",{attrs:{id:"排序查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序查询"}},[t._v("#")]),t._v(" 排序查询")]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;")])]),t._v(" "),s("p",[t._v("排序方式：")]),t._v(" "),s("ul",[s("li",[t._v("ASC: 升序（默认）")]),t._v(" "),s("li",[t._v("DESC: 降序")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据年龄升序排序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 两字段排序，根据年龄升序排序，入职时间降序排序")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ASC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" entrydate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h6",{attrs:{id:"注意事项-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-4"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果是升序，可以不指定排序方式ASC")])]),t._v(" "),s("li",[s("p",[t._v("如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序")])])]),t._v(" "),s("h5",{attrs:{id:"分页查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页查询"}},[t._v("#")]),t._v(" 分页查询")]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询第一页数据，展示10条")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询第二页")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h6",{attrs:{id:"注意事项-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-5"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("起始索引从0开始，起始索引 = （查询页码 - 1） * 每页显示记录数")]),t._v(" "),s("li",[t._v("分页查询是数据库的方言，不同数据库有不同实现，MySQL是LIMIT")]),t._v(" "),s("li",[t._v("如果查询的是==第一页数据，起始索引可以省略==，直接简写 LIMIT 10")])]),t._v(" "),s("h5",{attrs:{id:"dql执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dql执行顺序"}},[t._v("#")]),t._v(" ==DQL执行顺序==")]),t._v(" "),s("p",[t._v("==FROM -> WHERE -> GROUP BY -> SELECT -> ORDER BY -> LIMIT==")]),t._v(" "),s("p",[t._v("==from ... where ... group by ... having ... select ... order by ... limit ...==")]),t._v(" "),s("h4",{attrs:{id:"dcl-数据控制语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dcl-数据控制语言"}},[t._v("#")]),t._v(" DCL（数据控制语言）")]),t._v(" "),s("h5",{attrs:{id:"管理用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管理用户"}},[t._v("#")]),t._v(" 管理用户")]),t._v(" "),s("p",[t._v("查询用户：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("创建用户:\n"),s("code",[t._v("CREATE USER '用户名'@'主机名' IDENTIFIED BY '密码';")])]),t._v(" "),s("p",[t._v("修改用户密码：\n"),s("code",[t._v("ALTER USER '用户名'@'主机名' IDENTIFIED WITH mysql_native_password BY '新密码';")])]),t._v(" "),s("p",[t._v("删除用户：\n"),s("code",[t._v("DROP USER '用户名'@'主机名';")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建用户test，只能在当前主机localhost访问")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'localhost'")]),t._v(" identified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 创建用户test，能在任意主机访问")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'%'")]),t._v(" identified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),t._v(" identified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 修改密码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'localhost'")]),t._v(" identified "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" mysql_native_password "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除用户")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@'localhost'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h6",{attrs:{id:"注意事项-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-6"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("主机名可以使用 % 通配")])]),t._v(" "),s("h5",{attrs:{id:"权限控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限控制"}},[t._v("#")]),t._v(" 权限控制")]),t._v(" "),s("p",[t._v("常用权限：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("权限")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("ALL, ALL PRIVILEGES")]),t._v(" "),s("td",[t._v("所有权限")])]),t._v(" "),s("tr",[s("td",[t._v("SELECT")]),t._v(" "),s("td",[t._v("查询数据")])]),t._v(" "),s("tr",[s("td",[t._v("INSERT")]),t._v(" "),s("td",[t._v("插入数据")])]),t._v(" "),s("tr",[s("td",[t._v("UPDATE")]),t._v(" "),s("td",[t._v("修改数据")])]),t._v(" "),s("tr",[s("td",[t._v("DELETE")]),t._v(" "),s("td",[t._v("删除数据")])]),t._v(" "),s("tr",[s("td",[t._v("ALTER")]),t._v(" "),s("td",[t._v("修改表")])]),t._v(" "),s("tr",[s("td",[t._v("DROP")]),t._v(" "),s("td",[t._v("删除数据库/表/视图")])]),t._v(" "),s("tr",[s("td",[t._v("CREATE")]),t._v(" "),s("td",[t._v("创建数据库/表")])])])]),t._v(" "),s("p",[t._v("更多权限请看"),s("a",{attrs:{href:"#%E6%9D%83%E9%99%90%E4%B8%80%E8%A7%88%E8%A1%A8",title:"权限一览表"}},[t._v("权限一览表")])]),t._v(" "),s("p",[t._v("查询权限：\n"),s("code",[t._v("SHOW GRANTS FOR '用户名'@'主机名';")])]),t._v(" "),s("p",[t._v("授予权限：\n"),s("code",[t._v("GRANT 权限列表 ON 数据库名.表名 TO '用户名'@'主机名';")])]),t._v(" "),s("p",[t._v("撤销权限：\n"),s("code",[t._v("REVOKE 权限列表 ON 数据库名.表名 FROM '用户名'@'主机名';")])]),t._v(" "),s("h6",{attrs:{id:"注意事项-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-7"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("多个权限用逗号分隔")]),t._v(" "),s("li",[t._v("授权时，数据库名和表名可以用 * 进行通配，代表所有")])]),t._v(" "),s("h3",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("ul",[s("li",[t._v("字符串函数")]),t._v(" "),s("li",[t._v("数值函数")]),t._v(" "),s("li",[t._v("日期函数")]),t._v(" "),s("li",[t._v("流程函数")])]),t._v(" "),s("h4",{attrs:{id:"字符串函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[t._v("#")]),t._v(" 字符串函数")]),t._v(" "),s("p",[t._v("常用函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CONCAT(s1, s2, ..., sn)")]),t._v(" "),s("td",[t._v("字符串拼接，将s1, s2, ..., sn拼接成一个字符串")])]),t._v(" "),s("tr",[s("td",[t._v("LOWER(str)")]),t._v(" "),s("td",[t._v("将字符串全部转为小写")])]),t._v(" "),s("tr",[s("td",[t._v("UPPER(str)")]),t._v(" "),s("td",[t._v("将字符串全部转为大写")])]),t._v(" "),s("tr",[s("td",[t._v("LPAD(str, n, pad)")]),t._v(" "),s("td",[t._v("左填充，用字符串pad对str的左边进行填充，达到n个字符串长度")])]),t._v(" "),s("tr",[s("td",[t._v("RPAD(str, n, pad)")]),t._v(" "),s("td",[t._v("右填充，用字符串pad对str的右边进行填充，达到n个字符串长度")])]),t._v(" "),s("tr",[s("td",[t._v("TRIM(str)")]),t._v(" "),s("td",[t._v("去掉字符串头部和尾部的空格")])]),t._v(" "),s("tr",[s("td",[t._v("SUBSTRING(str, start, len)")]),t._v(" "),s("td",[t._v("返回从字符串str从start位置起的len个长度的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("REPLACE(column, source, replace)")]),t._v(" "),s("td",[t._v("替换字符串")])])])]),t._v(" "),s("p",[t._v("使用示例：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 拼接")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" CONCAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 小写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LOWER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 大写")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" UPPER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 左填充")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" LPAD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## ---01")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 右填充")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" RPAD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 01---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 去除空格")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" TRIM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' Hello World '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 切片（起始索引为1）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" SUBSTRING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h4",{attrs:{id:"数值函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值函数"}},[t._v("#")]),t._v(" 数值函数")]),t._v(" "),s("p",[t._v("常见函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CEIL(x)")]),t._v(" "),s("td",[t._v("向上取整")])]),t._v(" "),s("tr",[s("td",[t._v("FLOOR(x)")]),t._v(" "),s("td",[t._v("向下取整")])]),t._v(" "),s("tr",[s("td",[t._v("MOD(x, y)")]),t._v(" "),s("td",[t._v("返回x/y的模")])]),t._v(" "),s("tr",[s("td",[t._v("RAND()")]),t._v(" "),s("td",[t._v("返回0~1内的随机数")])]),t._v(" "),s("tr",[s("td",[t._v("ROUND(x, y)")]),t._v(" "),s("td",[t._v("求参数x的四舍五入值，保留y位小数")])])])]),t._v(" "),s("p",[s("strong",[t._v("例子")])]),t._v(" "),s("p",[t._v("通过数据库的函数，生成一个六位数的随机验证码。\n思路： 获取随机数可以通过rand()函数，但是获取出来的随机数是在0-1之间的，所以可以在其基础\n上乘以1000000，然后舍弃小数部分，如果长度不足6位，补0")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" lpad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 241032")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"日期函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[t._v("#")]),t._v(" 日期函数")]),t._v(" "),s("p",[t._v("常用函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CURDATE()")]),t._v(" "),s("td",[t._v("返回当前日期")])]),t._v(" "),s("tr",[s("td",[t._v("CURTIME()")]),t._v(" "),s("td",[t._v("返回当前时间")])]),t._v(" "),s("tr",[s("td",[t._v("NOW()")]),t._v(" "),s("td",[t._v("返回当前日期和时间")])]),t._v(" "),s("tr",[s("td",[t._v("YEAR(date)")]),t._v(" "),s("td",[t._v("获取指定date的年份")])]),t._v(" "),s("tr",[s("td",[t._v("MONTH(date)")]),t._v(" "),s("td",[t._v("获取指定date的月份")])]),t._v(" "),s("tr",[s("td",[t._v("DAY(date)")]),t._v(" "),s("td",[t._v("获取指定date的日期")])]),t._v(" "),s("tr",[s("td",[t._v("DATE_ADD(date, INTERVAL expr type)")]),t._v(" "),s("td",[t._v("返回一个日期/时间值加上一个时间间隔expr后的时间值")])]),t._v(" "),s("tr",[s("td",[t._v("DATEDIFF(date1, date2)")]),t._v(" "),s("td",[t._v("返回起始时间date1和结束时间date2之间的天数")])])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- DATE_ADD")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" DATE_ADD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOW")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTERVAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"流程函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程函数"}},[t._v("#")]),t._v(" 流程函数")]),t._v(" "),s("p",[t._v("常用函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("IF(value, t, f)")]),t._v(" "),s("td",[t._v("如果value为true，则返回t，否则返回f")])]),t._v(" "),s("tr",[s("td",[t._v("IFNULL(value1, value2)")]),t._v(" "),s("td",[t._v("如果value1不为空，返回value1，否则返回value2")])]),t._v(" "),s("tr",[s("td",[t._v("CASE WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END")]),t._v(" "),s("td",[t._v("如果val1为true，返回res1，... 否则返回default默认值")])]),t._v(" "),s("tr",[s("td",[t._v("CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] ... ELSE [ default ] END")]),t._v(" "),s("td",[t._v("如果expr的值等于val1，返回res1，... 否则返回default默认值")])])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\tname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'中年'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'青年'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n\tname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" workaddress "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'北京市'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'一线城市'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'上海市'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'一线城市'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'二线城市'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'工作地址'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[t._v("#")]),t._v(" 约束")]),t._v(" "),s("p",[t._v("分类：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("约束")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("非空约束")]),t._v(" "),s("td",[t._v("限制该字段的数据不能为null")]),t._v(" "),s("td",[t._v("NOT NULL")])]),t._v(" "),s("tr",[s("td",[t._v("唯一约束")]),t._v(" "),s("td",[t._v("保证该字段的所有数据都是唯一、不重复的")]),t._v(" "),s("td",[t._v("UNIQUE")])]),t._v(" "),s("tr",[s("td",[t._v("主键约束")]),t._v(" "),s("td",[t._v("主键是一行数据的唯一标识，要求非空且唯一")]),t._v(" "),s("td",[t._v("PRIMARY KEY")])]),t._v(" "),s("tr",[s("td",[t._v("默认约束")]),t._v(" "),s("td",[t._v("保存数据时，如果未指定该字段的值，则采用默认值")]),t._v(" "),s("td",[t._v("DEFAULT")])]),t._v(" "),s("tr",[s("td",[t._v("检查约束（8.0.1版本后）")]),t._v(" "),s("td",[t._v("保证字段值满足某一个条件")]),t._v(" "),s("td",[t._v("CHECK")])]),t._v(" "),s("tr",[s("td",[t._v("外键约束")]),t._v(" "),s("td",[t._v("用来让两张图的数据之间建立连接，保证数据的一致性和完整性")]),t._v(" "),s("td",[t._v("FOREIGN KEY")])])])]),t._v(" "),s("p",[t._v("约束是作用于表中字段上的，可以==在创建表/修改表==的时候添加约束。")]),t._v(" "),s("h4",{attrs:{id:"常用约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用约束"}},[t._v("#")]),t._v(" 常用约束")]),t._v(" "),s("p",[t._v("概念：约束是作用于表中字段上的规则，用于限制存储在表中的数据，可以在创建表/修改表的时候添加约束\n目的：保证数据库中数据的正确、有效性和完整性。")]),t._v(" "),s("p",[s("strong",[t._v("分类：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("约束")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("描述")])]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("关键字")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("非空约束")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("限制该字段的数据不能为null")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("NOT NULL")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("唯一约束")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("保证该字段的所有数据都是唯一、不重复的")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("UNIQUE")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("主键约束")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("主键是一行数据的唯一标识，要求非空且唯一")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PRIMARY KEY")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("默认约束")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("保存数据时，如果未指定该字段的值，则采用默认值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DEFAULT")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("检查约束(8.0.16版本之后)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("保证字段值满足某一个条件")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("CHECK")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("外键约束")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用来让两张表的数据之间建立连接，保证数据的一致性和完整性")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FOREIGN KEY")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("约束条件")]),t._v(" "),s("th",[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("主键")]),t._v(" "),s("td",[t._v("PRIMARY KEY")])]),t._v(" "),s("tr",[s("td",[t._v("自动增长")]),t._v(" "),s("td",[t._v("AUTO_INCREMENT")])]),t._v(" "),s("tr",[s("td",[t._v("不为空")]),t._v(" "),s("td",[t._v("NOT NULL")])]),t._v(" "),s("tr",[s("td",[t._v("唯一")]),t._v(" "),s("td",[t._v("UNIQUE")])]),t._v(" "),s("tr",[s("td",[t._v("逻辑条件")]),t._v(" "),s("td",[t._v("CHECK")])]),t._v(" "),s("tr",[s("td",[t._v("默认值")]),t._v(" "),s("td",[t._v("DEFAULT")])])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tage "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("check")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tgender "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"外键约束"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外键约束"}},[t._v("#")]),t._v(" 外键约束")]),t._v(" "),s("p",[t._v("添加外键：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t字段名 字段类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("外键名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("外键字段名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" 主表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表列名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" 外键名称 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("外键字段名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" 主表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("主表列名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 例子")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constraint")]),t._v(" fk_emp_dept_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("references")]),t._v(" dept"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## fk_emp_dept_id自己取的外键名称")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("删除外键：\n"),s("code",[t._v("ALTER TABLE 表名 DROP FOREIGN KEY 外键名;")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("alter")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("foreign")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" fk_emp_dept_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("查询系统中所有数据库下，所有存在外键的表：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" INFORMATION_SCHEMA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KEY_COLUMN_USAGE\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" REFERENCED_TABLE_NAME "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h5",{attrs:{id:"删除-更新行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除-更新行为"}},[t._v("#")]),t._v(" 删除/更新行为")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("行为")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("NO ACTION")]),t._v(" "),s("td",[t._v("当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与RESTRICT一致）")])]),t._v(" "),s("tr",[s("td",[t._v("RESTRICT")]),t._v(" "),s("td",[t._v("当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新（与NO ACTION一致）")])]),t._v(" "),s("tr",[s("td",[t._v("CASCADE")]),t._v(" "),s("td",[t._v("当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除/更新外键在子表中的记录")])]),t._v(" "),s("tr",[s("td",[t._v("SET NULL")]),t._v(" "),s("td",[t._v("当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（要求该外键允许为null）")])]),t._v(" "),s("tr",[s("td",[t._v("SET DEFAULT")]),t._v(" "),s("td",[t._v("父表有变更时，子表将外键设为一个默认值（Innodb不支持）")])])])]),t._v(" "),s("p",[t._v("更改删除/更新行为：\n"),s("code",[t._v("ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;")])]),t._v(" "),s("h3",{attrs:{id:"多表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[t._v("#")]),t._v(" 多表查询")]),t._v(" "),s("h4",{attrs:{id:"多表关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多表关系"}},[t._v("#")]),t._v(" 多表关系")]),t._v(" "),s("ul",[s("li",[t._v("一对多（多对一）")]),t._v(" "),s("li",[t._v("多对多")]),t._v(" "),s("li",[t._v("一对一")])]),t._v(" "),s("h5",{attrs:{id:"一对多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一对多"}},[t._v("#")]),t._v(" 一对多")]),t._v(" "),s("p",[t._v("案例：部门与员工\n关系：一个部门对应多个员工，一个员工对应一个部门\n实现：在多的一方建立外键，指向一的一方的主键")]),t._v(" "),s("h5",{attrs:{id:"多对多"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多对多"}},[t._v("#")]),t._v(" 多对多")]),t._v(" "),s("p",[t._v("案例：学生与课程\n关系：一个学生可以选多门课程，一门课程也可以供多个学生选修\n实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键")]),t._v(" "),s("h5",{attrs:{id:"一对一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一对一"}},[t._v("#")]),t._v(" 一对一")]),t._v(" "),s("p",[t._v("案例：用户与用户详情\n关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率\n实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）")]),t._v(" "),s("h4",{attrs:{id:"查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[t._v("#")]),t._v(" 查询")]),t._v(" "),s("p",[t._v("合并查询（笛卡尔积，会展示所有组合结果）：\n"),s("code",[t._v("select * from employee, dept;")])]),t._v(" "),s("blockquote",[s("p",[t._v("笛卡尔积：两个集合A集合和B集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）")])]),t._v(" "),s("p",[t._v("消除无效笛卡尔积：\n"),s("code",[t._v("select * from employee, dept where employee.dept = dept.id;")])]),t._v(" "),s("h4",{attrs:{id:"内连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内连接查询"}},[t._v("#")]),t._v(" 内连接查询")]),t._v(" "),s("p",[t._v("内连接查询的是两张表交集的部分")]),t._v(" "),s("p",[t._v("隐式内连接：\n"),s("code",[t._v("SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;")])]),t._v(" "),s("p",[t._v("显式内连接：\n"),s("code",[t._v("SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;")])]),t._v(" "),s("p",[t._v("显式性能比隐式高")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询员工姓名，及关联的部门的名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 隐式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 显式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("注意事项")])]),t._v(" "),s("ul",[s("li",[t._v("一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字段。")])]),t._v(" "),s("h4",{attrs:{id:"外连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#外连接查询"}},[t._v("#")]),t._v(" 外连接查询")]),t._v(" "),s("p",[t._v("左外连接：\n查询左表所有数据，以及两张表交集部分数据\n"),s("code",[t._v("SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;")]),t._v("\n相当于查询表1的所有数据，包含表1和表2交集部分数据")]),t._v(" "),s("p",[t._v("右外连接：\n查询右表所有数据，以及两张表交集部分数据\n"),s("code",[t._v("SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 左")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" emp e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 这条语句与下面的语句效果一样")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 右")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("左连接可以查询到没有dept的employee，右连接可以查询到没有employee的dept")]),t._v(" "),s("p",[s("strong",[t._v("注意事项")])]),t._v(" "),s("ul",[s("li",[t._v("左外连接和右外连接是可以相互替换的，只需要调整在连接查询时SQL中，表结构的先后顺序就可以了。而我们在日常开发使用时，更偏向于左外连接。")])]),t._v(" "),s("h4",{attrs:{id:"自连接查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自连接查询"}},[t._v("#")]),t._v(" 自连接查询")]),t._v(" "),s("p",[t._v("当前表与自身的连接查询，自连接必须使用表别名")]),t._v(" "),s("p",[t._v("语法：\n"),s("code",[t._v("SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;")])]),t._v(" "),s("p",[t._v("自连接查询，可以是内连接查询，也可以是外连接查询")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询员工及其所属领导的名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" employee b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 没有领导的也查询出来")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" employee b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("注意事项")])]),t._v(" "),s("p",[t._v("在自连接查询中，必须要为表起别名，要不然我们不清楚所指定的条件、返回的字段，到底是哪一张表的字段。")]),t._v(" "),s("h4",{attrs:{id:"联合查询-union-union-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#联合查询-union-union-all"}},[t._v("#")]),t._v(" 联合查询 union, union all")]),t._v(" "),s("p",[t._v("把多次查询的结果合并，形成一个新的查询集")]),t._v(" "),s("ul",[s("li",[t._v("对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。")]),t._v(" "),s("li",[t._v("union all 会将全部的数据直接合并在一起，union 会对合并之后的数据去重。")])]),t._v(" "),s("p",[t._v("语法：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表A "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表B "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h5",{attrs:{id:"注意事项-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-8"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("UNION ALL 会有重复结果，UNION 不会")]),t._v(" "),s("li",[t._v("联合查询比使用or效率高，不会使索引失效")])]),t._v(" "),s("h4",{attrs:{id:"子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[t._v("#")]),t._v(" 子查询")]),t._v(" "),s("p",[t._v("SQL语句中嵌套SELECT语句，称谓嵌套查询，又称子查询。\n"),s("code",[t._v("SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);")]),t._v(" "),s("strong",[t._v("子查询外部的语句可以是 INSERT / UPDATE / DELETE / SELECT 的任何一个")])]),t._v(" "),s("p",[t._v("根据子查询结果可以分为：")]),t._v(" "),s("ul",[s("li",[t._v("标量子查询（子查询结果为单个值）")]),t._v(" "),s("li",[t._v("列子查询（子查询结果为一列）")]),t._v(" "),s("li",[t._v("行子查询（子查询结果为一行）")]),t._v(" "),s("li",[t._v("表子查询（子查询结果为多行多列）")])]),t._v(" "),s("p",[t._v("根据子查询位置可分为：")]),t._v(" "),s("ul",[s("li",[t._v("WHERE 之后")]),t._v(" "),s("li",[t._v("FROM 之后")]),t._v(" "),s("li",[t._v("SELECT 之后")])]),t._v(" "),s("h5",{attrs:{id:"标量子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标量子查询"}},[t._v("#")]),t._v(" 标量子查询")]),t._v(" "),s("p",[t._v("子查询返回的结果是单个值（数字、字符串、日期等）。\n常用操作符：- < > > >= < <=")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询销售部所有员工")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 根据销售部部门ID，查询员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 合并（子查询）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询xxx入职之后的员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" entrydate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" entrydate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h5",{attrs:{id:"列子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列子查询"}},[t._v("#")]),t._v(" 列子查询")]),t._v(" "),s("p",[t._v("返回的结果是一列（可以是多行）。")]),t._v(" "),s("p",[t._v("常用操作符：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("IN")]),t._v(" "),s("td",[t._v("在指定的集合范围内，多选一")])]),t._v(" "),s("tr",[s("td",[t._v("NOT IN")]),t._v(" "),s("td",[t._v("不在指定的集合范围内")])]),t._v(" "),s("tr",[s("td",[t._v("ANY")]),t._v(" "),s("td",[t._v("子查询返回列表中，有任意一个满足即可")])]),t._v(" "),s("tr",[s("td",[t._v("SOME")]),t._v(" "),s("td",[t._v("与ANY等同，使用SOME的地方都可以使用ANY")])]),t._v(" "),s("tr",[s("td",[t._v("ALL")]),t._v(" "),s("td",[t._v("子查询返回列表的所有值都必须满足")])])])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询销售部和市场部的所有员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'销售部'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'市场部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询比财务部所有人工资都高的员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'财务部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询比研发部任意一人工资高的员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("any")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'研发部'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h5",{attrs:{id:"行子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行子查询"}},[t._v("#")]),t._v(" 行子查询")]),t._v(" "),s("p",[t._v("返回的结果是一行（可以是多列）。\n常用操作符：=, <, >, IN, NOT IN")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询与xxx的薪资及直属领导相同的员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" manager "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h5",{attrs:{id:"表子查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表子查询"}},[t._v("#")]),t._v(" 表子查询")]),t._v(" "),s("p",[t._v("返回的结果是多行多列\n常用操作符：IN")]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询与xxx1，xxx2的职位和薪资相同的员工")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询入职日期是2006-01-01之后的员工，及其部门信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employee "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" entrydate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2006-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h5",{attrs:{id:"案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询低于本部门平均工资的员工信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp e2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("avg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp e1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" \ne1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询所有的部门信息, 并统计部门的员工人数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" emp e "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'人数'")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" dept d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询所有学生的选课情况, 展示出学生名称, 学号, 课程名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("no")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" student s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("student_course sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("course c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("studentid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" sc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("courseid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("p",[t._v("事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。")]),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：默认MySQL的事务是自动提交的，也就是说，当执行完一条DML语句时，MySQL会立即隐式的提交事务。")]),t._v(" "),s("p",[t._v("基本操作：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1. 查询张三账户余额")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2. 将张三账户余额-1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 此语句出错后张三钱减少但是李四钱没有增加")]),t._v("\n模拟"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("语句错误\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3. 将李四账户余额+1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李四'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看事务提交方式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@AUTOCOMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@AUTOCOMMIT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 提交事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 回滚事务")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 设置手动提交后上面代码改为：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李四'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[t._v("操作方式二：")]),t._v(" "),s("p",[t._v("开启事务：\n"),s("code",[t._v("START TRANSACTION 或 BEGIN TRANSACTION;")]),t._v("\n提交事务：\n"),s("code",[t._v("COMMIT;")]),t._v("\n回滚事务：\n"),s("code",[t._v("ROLLBACK;")])]),t._v(" "),s("p",[t._v("操作实例：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("start")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" account "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'李四'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"四大特性acid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四大特性acid"}},[t._v("#")]),t._v(" 四大特性ACID")]),t._v(" "),s("ul",[s("li",[t._v("原子性(Atomicity)：事务是不可分割的最小操作单元，要么全部成功，要么全部失败")]),t._v(" "),s("li",[t._v("一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态")]),t._v(" "),s("li",[t._v("隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行")]),t._v(" "),s("li",[t._v("持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的")])]),t._v(" "),s("h4",{attrs:{id:"并发事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发事务"}},[t._v("#")]),t._v(" 并发事务")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("问题")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("脏读")]),t._v(" "),s("td",[t._v("一个事务读到另一个事务还没提交的数据")])]),t._v(" "),s("tr",[s("td",[t._v("不可重复读")]),t._v(" "),s("td",[t._v("一个事务先后读取同一条记录，但两次读取的数据不同")])]),t._v(" "),s("tr",[s("td",[t._v("幻读")]),t._v(" "),s("td",[t._v("一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("这三个问题的详细演示：https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd")])]),t._v(" "),s("p",[t._v("并发事务隔离级别：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("隔离级别")]),t._v(" "),s("th",[t._v("脏读")]),t._v(" "),s("th",[t._v("不可重复读")]),t._v(" "),s("th",[t._v("幻读")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Read uncommitted")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("Read committed")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("Repeatable Read(默认)")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("√")])]),t._v(" "),s("tr",[s("td",[t._v("Serializable")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")]),t._v(" "),s("td",[t._v("×")])])])]),t._v(" "),s("ul",[s("li",[t._v("√表示在当前隔离级别下该问题会出现")]),t._v(" "),s("li",[t._v("Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差")])]),t._v(" "),s("p",[t._v("查看事务隔离级别：\n"),s("code",[t._v("SELECT @@TRANSACTION_ISOLATION;")]),t._v("\n设置事务隔离级别：\n"),s("code",[t._v("SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL {READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE };")]),t._v("\nSESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效")]),t._v(" "),s("h2",{attrs:{id:"进阶篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进阶篇"}},[t._v("#")]),t._v(" 进阶篇")]),t._v(" "),s("h3",{attrs:{id:"存储引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎"}},[t._v("#")]),t._v(" 存储引擎")]),t._v(" "),s("p",[t._v("MySQL体系结构：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_20220315034329549927.png%22%E7%BB%93%E6%9E%84%E5%9B%BE%22",alt:"结构图"}}),t._v(" "),s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%B1%82%E7%BA%A7%E5%90%AB%E4%B9%89_20220315034359342837.png%22%E5%B1%82%E7%BA%A7%E6%8F%8F%E8%BF%B0%22",alt:"层级描述"}})]),t._v(" "),s("p",[s("strong",[t._v("引擎层")]),t._v("：")]),t._v(" "),s("p",[t._v("存储引擎层， 存储引擎真正的负责了MySQL中数据的存储和提取，服务器通过API和存储引擎进行通\n信。不同的存储引擎具有不同的功能，这样我们可以根据自己的需要，来选取合适的存储引擎。数据库\n中的索引是在存储引擎层实现的。")]),t._v(" "),s("p",[t._v("存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。==存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。==\n默认存储引擎是InnoDB。")]),t._v(" "),s("p",[t._v("相关操作：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询建表语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" account"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 建表时指定存储引擎")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看当前数据库支持的存储引擎")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" engines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"innodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[t._v("#")]),t._v(" InnoDB")]),t._v(" "),s("p",[t._v("InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("DML 操作遵循 ACID 模型，支持"),s("strong",[t._v("事务")])]),t._v(" "),s("li",[s("strong",[t._v("行级锁")]),t._v("，提高并发访问性能")]),t._v(" "),s("li",[t._v("支持"),s("strong",[t._v("外键")]),t._v("约束，保证数据的完整性和正确性")])]),t._v(" "),s("p",[t._v("文件：")]),t._v(" "),s("ul",[s("li",[t._v("xxx.ibd: xxx代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。")])]),t._v(" "),s("p",[t._v("参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间")]),t._v(" "),s("p",[t._v("知识点：")]),t._v(" "),s("p",[t._v("查看 Mysql 变量：\n"),s("code",[t._v("show variables like 'innodb_file_per_table';")])]),t._v(" "),s("p",[t._v("从idb文件提取表结构数据：\n（在cmd运行）\n"),s("code",[t._v("ibd2sdi xxx.ibd")])]),t._v(" "),s("p",[t._v("InnoDB 逻辑存储结构：\n"),s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84_20220316030616590001.png%22InnoDB%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%22",alt:"InnoDB逻辑存储结构"}})]),t._v(" "),s("ul",[s("li",[t._v("表空间 : InnoDB存储引擎逻辑结构的最高层，ibd文件其实就是表空间文件，在表空间中可以\n包含多个Segment段。")]),t._v(" "),s("li",[t._v("段 : 表空间是由各个段组成的， 常见的段有数据段、索引段、回滚段等。InnoDB中对于段的管\n理，都是引擎自身完成，不需要人为对其控制，一个段中包含多个区。")]),t._v(" "),s("li",[t._v("区 : 区是表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为\n16K， 即一个区中一共有64个连续的页。")]),t._v(" "),s("li",[t._v("页 : 页是组成区的最小单元，页也是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默\n认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。")]),t._v(" "),s("li",[t._v("行 : InnoDB 存储引擎是面向行的，也就是说数据是按行进行存放的，在每一行中除了定义表时\n所指定的字段以外，还包含两个隐藏字段(后面会详细介绍)。")])]),t._v(" "),s("h4",{attrs:{id:"myisam"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#myisam"}},[t._v("#")]),t._v(" MyISAM")]),t._v(" "),s("p",[t._v("MyISAM 是 MySQL 早期的默认存储引擎。")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("不支持事务，不支持外键")]),t._v(" "),s("li",[t._v("支持表锁，不支持行锁")]),t._v(" "),s("li",[t._v("访问速度快")])]),t._v(" "),s("p",[t._v("文件：")]),t._v(" "),s("ul",[s("li",[t._v("xxx.sdi: 存储表结构信息")]),t._v(" "),s("li",[t._v("xxx.MYD: 存储数据")]),t._v(" "),s("li",[t._v("xxx.MYI: 存储索引")])]),t._v(" "),s("h4",{attrs:{id:"memory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory"}},[t._v("#")]),t._v(" Memory")]),t._v(" "),s("p",[t._v("Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("存放在内存中，速度快")]),t._v(" "),s("li",[t._v("hash索引（默认）")])]),t._v(" "),s("p",[t._v("文件：")]),t._v(" "),s("ul",[s("li",[t._v("xxx.sdi: 存储表结构信息")])]),t._v(" "),s("h4",{attrs:{id:"存储引擎特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎特点"}},[t._v("#")]),t._v(" 存储引擎特点")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特点")]),t._v(" "),s("th",[t._v("InnoDB")]),t._v(" "),s("th",[t._v("MyISAM")]),t._v(" "),s("th",[t._v("Memory")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("存储限制")]),t._v(" "),s("td",[t._v("64TB")]),t._v(" "),s("td",[t._v("有")]),t._v(" "),s("td",[t._v("有")])]),t._v(" "),s("tr",[s("td",[t._v("事务安全")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("锁机制")]),t._v(" "),s("td",[t._v("行锁")]),t._v(" "),s("td",[t._v("表锁")]),t._v(" "),s("td",[t._v("表锁")])]),t._v(" "),s("tr",[s("td",[t._v("B+tree索引")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("Hash索引")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("全文索引")]),t._v(" "),s("td",[t._v("支持（5.6版本之后）")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("-")])]),t._v(" "),s("tr",[s("td",[t._v("空间使用")]),t._v(" "),s("td",[t._v("高")]),t._v(" "),s("td",[t._v("低")]),t._v(" "),s("td",[t._v("N/A")])]),t._v(" "),s("tr",[s("td",[t._v("内存使用")]),t._v(" "),s("td",[t._v("高")]),t._v(" "),s("td",[t._v("低")]),t._v(" "),s("td",[t._v("中等")])]),t._v(" "),s("tr",[s("td",[t._v("批量插入速度")]),t._v(" "),s("td",[t._v("低")]),t._v(" "),s("td",[t._v("高")]),t._v(" "),s("td",[t._v("高")])]),t._v(" "),s("tr",[s("td",[t._v("支持外键")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("-")])])])]),t._v(" "),s("p",[s("strong",[t._v("面试题：")])]),t._v(" "),s("p",[t._v("InnoDB引擎与MyISAM引擎的区别 ?\n①. InnoDB引擎, 支持事务, 而MyISAM不支持。\n②. InnoDB引擎, 支持行锁和表锁, 而MyISAM仅支持表锁, 不支持行锁。\n③. InnoDB引擎, 支持外键, 而MyISAM是不支持的。")]),t._v(" "),s("h4",{attrs:{id:"存储引擎的选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎的选择"}},[t._v("#")]),t._v(" 存储引擎的选择")]),t._v(" "),s("p",[t._v("在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。")]),t._v(" "),s("ul",[s("li",[t._v("InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择")]),t._v(" "),s("li",[t._v("MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。")]),t._v(" "),s("li",[t._v("Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性")])]),t._v(" "),s("p",[t._v("电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。")]),t._v(" "),s("h3",{attrs:{id:"性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能分析"}},[t._v("#")]),t._v(" 性能分析")]),t._v(" "),s("h4",{attrs:{id:"查看执行频次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看执行频次"}},[t._v("#")]),t._v(" 查看执行频次")]),t._v(" "),s("p",[t._v("查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：\n"),s("code",[t._v("SHOW GLOBAL STATUS LIKE 'Com_______';")]),t._v(" 或者 "),s("code",[t._v("SHOW SESSION STATUS LIKE 'Com_______';")]),t._v("\n例："),s("code",[t._v("show global status like 'Com_______'")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- session 是查看当前会话 ;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- global 是查询全局数据 ;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATUS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Com_______'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("通过上述指令，我们可以查看到当前数据库到底是以查询为主库优化提供参考依据。 如果是以增删改为主，我们可以考虑不对其进行索引的优化查询为主，那么就要考虑对数据库的索引进行优化了。")])]),t._v(" "),s("h4",{attrs:{id:"慢查询日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#慢查询日志"}},[t._v("#")]),t._v(" 慢查询日志")]),t._v(" "),s("p",[t._v("慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10秒）的所有SQL语句的日志。\nMySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看慢查询日志开关状态：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slow_query_log'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("img",{attrs:{src:"/assets/1677034765023.png",alt:"1677034765023"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 开启慢查询日志开关")]),t._v("\nslow_query_log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 设置慢查询日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志")]),t._v("\nlong_query_time"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("更改后记得重启MySQL服务，日志文件位置：/var/lib/mysql/localhost-slow.log")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("systemctl restart mysqld\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"profile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" profile")]),t._v(" "),s("p",[t._v("show profile 能在做SQL优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：\n"),s("code",[t._v("SELECT @@have_profiling;")]),t._v("\nprofiling 默认关闭，可以通过set语句在session/global级别开启 profiling：\n"),s("code",[t._v("SET profiling = 1;")]),t._v("\n查看所有语句的耗时：\n"),s("code",[t._v("show profiles;")]),t._v("\n查看指定query_id的SQL语句各个阶段的耗时：\n"),s("code",[t._v("show profile for query query_id;")]),t._v("\n查看指定query_id的SQL语句CPU的使用情况\n"),s("code",[t._v("show profile cpu for query query_id;")])]),t._v(" "),s("h4",{attrs:{id:"explain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[t._v("#")]),t._v(" explain")]),t._v(" "),s("p",[t._v("EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。\n语法：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 直接在select语句之前加上关键字 explain / desc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPLAIN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" 字段列表 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" 表名 HWERE 条件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("EXPLAIN 各字段含义：")]),t._v(" "),s("ul",[s("li",[t._v("id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id相同，执行顺序从上到下；id不同，值越大越先执行）")]),t._v(" "),s("li",[t._v("select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION中的第二个或者后面的查询语句）、SUBQUERY（SELECT/WHERE之后包含了子查询）等")]),t._v(" "),s("li",[t._v("type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all")]),t._v(" "),s("li",[t._v("possible_key：可能应用在这张表上的索引，一个或多个")]),t._v(" "),s("li",[t._v("Key：实际使用的索引，如果为 NULL，则没有使用索引")]),t._v(" "),s("li",[t._v("Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好")]),t._v(" "),s("li",[t._v("rows：MySQL认为必须要执行的行数，在InnoDB引擎的表中，是一个估计值，可能并不总是准确的")]),t._v(" "),s("li",[t._v("filtered：表示返回结果的行数占需读取行数的百分比，filtered的值越大越好")])]),t._v(" "),s("h3",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("索引是帮助 MySQL "),s("strong",[t._v("高效获取数据")]),t._v("的"),s("strong",[t._v("数据结构（有序）")]),t._v("。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。")]),t._v(" "),s("p",[t._v("优缺点：")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("提高数据检索效率，降低数据库的IO成本")]),t._v(" "),s("li",[t._v("通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("索引列也是要占用空间的")]),t._v(" "),s("li",[t._v("索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE")])]),t._v(" "),s("h4",{attrs:{id:"索引结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引结构"}},[t._v("#")]),t._v(" 索引结构")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("索引结构")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("B+Tree")]),t._v(" "),s("td",[t._v("最常见的索引类型，大部分引擎都支持B+树索引")])]),t._v(" "),s("tr",[s("td",[t._v("Hash")]),t._v(" "),s("td",[t._v("底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询")])]),t._v(" "),s("tr",[s("td",[t._v("R-Tree(空间索引)")]),t._v(" "),s("td",[t._v("空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少")])]),t._v(" "),s("tr",[s("td",[t._v("Full-Text(全文索引)")]),t._v(" "),s("td",[t._v("是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("索引")]),t._v(" "),s("th",[t._v("InnoDB")]),t._v(" "),s("th",[t._v("MyISAM")]),t._v(" "),s("th",[t._v("Memory")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("B+Tree索引")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("Hash索引")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持")])]),t._v(" "),s("tr",[s("td",[t._v("R-Tree索引")]),t._v(" "),s("td",[t._v("不支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("不支持")])]),t._v(" "),s("tr",[s("td",[t._v("Full-text")]),t._v(" "),s("td",[t._v("5.6版本后支持")]),t._v(" "),s("td",[t._v("支持")]),t._v(" "),s("td",[t._v("不支持")])])])]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 我们平常所说的索引，如果没有特别指明，都是指B+树结构组织的索引。")]),t._v(" "),s("h5",{attrs:{id:"b-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-tree"}},[t._v("#")]),t._v(" B-Tree")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/%E4%BA%8C%E5%8F%89%E6%A0%91_20220316153214227108.png%22%E4%BA%8C%E5%8F%89%E6%A0%91%22",alt:"二叉树"}})]),t._v(" "),s("p",[t._v("二叉树的缺点可以用红黑树来解决：\n"),s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/%E7%BA%A2%E9%BB%91%E6%A0%91_20220316163142686602.png%22%E7%BA%A2%E9%BB%91%E6%A0%91%22",alt:"红黑树"}}),t._v("\n红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。")]),t._v(" "),s("p",[t._v("为了解决上述问题，可以使用 B-Tree 结构。\nB-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为5（5阶）的 b-tree 为例（每个节点最多存储4个key，5个指针）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/B-Tree%E7%BB%93%E6%9E%84_20220316163813441163.png%22B-Tree%E7%BB%93%E6%9E%84%22",alt:"B-Tree结构"}})]),t._v(" "),s("blockquote",[s("p",[t._v("B-Tree 的数据插入过程动画参照：https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68\n演示地址：https://www.cs.usfca.edu/~galles/visualization/BTree.html")])]),t._v(" "),s("h5",{attrs:{id:"b-tree-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-tree-2"}},[t._v("#")]),t._v(" B+Tree")]),t._v(" "),s("p",[t._v("结构图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/B+Tree%E7%BB%93%E6%9E%84%E5%9B%BE_20220316170700591277.png",alt:"B+Tree结构图",title:"B+Tree结构图"}})]),t._v(" "),s("blockquote",[s("p",[t._v("演示地址：https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html")])]),t._v(" "),s("p",[t._v("与 B-Tree 的区别：")]),t._v(" "),s("ul",[s("li",[t._v("所有的数据都会出现在叶子节点")]),t._v(" "),s("li",[t._v("叶子节点形成一个单向链表")])]),t._v(" "),s("p",[t._v("MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。")]),t._v(" "),s("p",[t._v('![MySQL B+Tree 结构图](https://dhc.pythonanywhere.com/media/editor/结构图_20220316171730865611.png"MySQL B+Tree 结构图")')]),t._v(" "),s("h5",{attrs:{id:"hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[t._v("#")]),t._v(" Hash")]),t._v(" "),s("p",[t._v("哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。\n如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞），可以通过链表来解决。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/Hash%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%9B%BE_20220317143226150679.png",alt:"Hash索引原理图",title:"Hash索引原理图"}})]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("ul",[s("li",[t._v("Hash索引只能用于对等比较（=、in），不支持范围查询（betwwn、>、<、...）")]),t._v(" "),s("li",[t._v("无法利用索引完成排序操作")]),t._v(" "),s("li",[t._v("查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引")])]),t._v(" "),s("p",[t._v("存储引擎支持：")]),t._v(" "),s("ul",[s("li",[t._v("Memory")]),t._v(" "),s("li",[t._v("InnoDB: 具有自适应hash功能，hash索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的")])]),t._v(" "),s("h5",{attrs:{id:"面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),s("ol",[s("li",[t._v("为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？")])]),t._v(" "),s("ul",[s("li",[t._v("相对于二叉树，层级更少，搜索效率高")]),t._v(" "),s("li",[t._v("对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低")]),t._v(" "),s("li",[t._v("相对于 Hash 索引，B+Tree 支持范围匹配及排序操作")])]),t._v(" "),s("h4",{attrs:{id:"索引分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引分类"}},[t._v("#")]),t._v(" 索引分类")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分类")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("特点")]),t._v(" "),s("th",[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("主键索引")]),t._v(" "),s("td",[t._v("针对于表中主键创建的索引")]),t._v(" "),s("td",[t._v("默认自动创建，只能有一个")]),t._v(" "),s("td",[t._v("PRIMARY")])]),t._v(" "),s("tr",[s("td",[t._v("唯一索引")]),t._v(" "),s("td",[t._v("避免同一个表中某数据列中的值重复")]),t._v(" "),s("td",[t._v("可以有多个")]),t._v(" "),s("td",[t._v("UNIQUE")])]),t._v(" "),s("tr",[s("td",[t._v("常规索引")]),t._v(" "),s("td",[t._v("快速定位特定数据")]),t._v(" "),s("td",[t._v("可以有多个")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("全文索引")]),t._v(" "),s("td",[t._v("全文索引查找的是文本中的关键词，而不是比较索引中的值")]),t._v(" "),s("td",[t._v("可以有多个")]),t._v(" "),s("td",[t._v("FULLTEXT")])])])]),t._v(" "),s("p",[t._v("在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分类")]),t._v(" "),s("th",[t._v("含义")]),t._v(" "),s("th",[t._v("特点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("聚集索引(Clustered Index)")]),t._v(" "),s("td",[t._v("将数据存储与索引放一块，索引结构的叶子节点保存了行数据")]),t._v(" "),s("td",[t._v("必须有，而且只有一个")])]),t._v(" "),s("tr",[s("td",[t._v("二级索引(Secondary Index)")]),t._v(" "),s("td",[t._v("将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键")]),t._v(" "),s("td",[t._v("可以存在多个")])])])]),t._v(" "),s("p",[t._v("演示图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/%E5%8E%9F%E7%90%86%E5%9B%BE_20220318194454880073.png%22%E5%A4%A7%E8%87%B4%E5%8E%9F%E7%90%86%22",alt:"大致原理"}}),t._v(" "),s("img",{attrs:{src:"https://dhc.pythonanywhere.com/media/editor/%E6%BC%94%E7%A4%BA%E5%9B%BE_20220319215403721066.png%22%E6%BC%94%E7%A4%BA%E5%9B%BE%22",alt:"演示图"}})]),t._v(" "),s("ul",[s("li",[t._v("聚集索引的叶子节点下挂的是这一行的数据 。")]),t._v(" "),s("li",[t._v("二级索引的叶子节点下挂的是该字段值对应的主键值。")])]),t._v(" "),s("p",[t._v("聚集索引选取规则：")]),t._v(" "),s("ul",[s("li",[t._v("如果存在主键，主键索引就是聚集索引")]),t._v(" "),s("li",[t._v("如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引")]),t._v(" "),s("li",[t._v("如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引")])]),t._v(" "),s("h5",{attrs:{id:"思考题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思考题"}},[t._v("#")]),t._v(" 思考题")]),t._v(" "),s("p",[t._v("1. 以下 SQL 语句，哪个执行效率高？为什么？")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Arm'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 备注：id为主键，name字段创建的有索引")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("答：第一条语句（存在主键，主键索引就是聚集索引），因为第二条需要回表查询，相当于两个步骤。因为A语句直接走聚集索引，直接返回数据。 而B语句需要先查询name字段的二级索引，然后再查询聚集索引，也就是需要进行回表查询。")]),t._v(" "),s("p",[t._v("2. InnoDB 主键索引的 B+Tree 高度为多少？")]),t._v(" "),s("p",[t._v("答：假设一行数据大小为1k，一页中可以存储16行这样的数据。InnoDB 的指针占用6个字节的空间，主键假设为bigint，占用字节数为8.\n可得公式："),s("code",[t._v("n * 8 + (n + 1) * 6 = 16 * 1024")]),t._v("，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的key的数量，(n + 1) 表示指针数量（比key多一个）。算出n约为1170。")]),t._v(" "),s("p",[t._v("如果树的高度为2，那么他能存储的数据量大概为："),s("code",[t._v("1171 * 16 = 18736")]),t._v("；\n如果树的高度为3，那么他能存储的数据量大概为："),s("code",[t._v("1171 * 1171 * 16 = 21939856")]),t._v("。")]),t._v(" "),s("p",[t._v("另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。")]),t._v(" "),s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),s("p",[t._v("创建索引：\n"),s("code",[t._v("CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);")]),t._v("\n如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引")]),t._v(" "),s("p",[t._v("查看索引：\n"),s("code",[t._v("SHOW INDEX FROM table_name;")])]),t._v(" "),s("p",[t._v("删除索引：\n"),s("code",[t._v("DROP INDEX index_name ON table_name;")])]),t._v(" "),s("p",[t._v("查看索引：")]),t._v(" "),s("p",[s("code",[t._v("SHOW INDEX FROM table_name;")])]),t._v(" "),s("p",[t._v("案例：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unique")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_phone "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 为profession, age, status创建联合索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_pro_age_stat "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("profession"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 为email建立合适的索引来提升查询效率")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_email "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看tb_user表的所有的索引数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_email "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h4",{attrs:{id:"使用规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用规则"}},[t._v("#")]),t._v(" 使用规则")]),t._v(" "),s("h5",{attrs:{id:"最左前缀法则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最左前缀法则"}},[t._v("#")]),t._v(" 最左前缀法则")]),t._v(" "),s("p",[t._v("如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。\n如果跳跃某一列，索引将部分失效（后面的字段索引失效）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677066496595.png",alt:"1677066496595"}})]),t._v(" "),s("p",[t._v("联合索引中，出现范围查询（<, >），范围查询右侧的列索引失效。在业务允许的情况下，尽量使用>=或者<=来规避索引失效问题。")]),t._v(" "),s("h5",{attrs:{id:"索引失效情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引失效情况"}},[t._v("#")]),t._v(" 索引失效情况")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在索引列上进行运算操作，索引将失效。如："),s("code",[t._v("explain select * from tb_user where substring(phone, 10, 2) = '15';")])])]),t._v(" "),s("li",[s("p",[t._v("字符串类型字段使用时，不加引号，索引将失效。如："),s("code",[t._v("explain select * from tb_user where phone = 17799990015;")]),t._v("，此处phone的值没有加引号")]),t._v(" "),s("p",[t._v("==（如果字符串不加单引号，对于查询结果，没什么影响，但是数据库存在隐式类型转换，索引将失效。）==")])]),t._v(" "),s("li",[s("p",[t._v("模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如："),s("code",[t._v("explain select * from tb_user where profession like '%工程';")]),t._v("，前后都有 % 也会失效。")])]),t._v(" "),s("li",[s("p",[t._v("用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。")])]),t._v(" "),s("li",[s("p",[t._v("如果 MySQL 评估使用索引比全表更慢，则不使用索引。")]),t._v(" "),s("ol",[s("li",[t._v("MySQL在查询时，会评估使用索引的效率与走全表扫描的效率，如果走全表扫描更快，则放弃索引，走全表扫描。 因为索引是用来索引少量数据的，如果通过索引查询返回大批量的数据，则还不如走全表扫描来的快，此时索引就会失效。")]),t._v(" "),s("li",[t._v("一模一样的SQL语句，先后执行了两次，结果查询计划是不一样的，为什么会出现这种现象，这是和数据库的数据分布有关系。查询时MySQL会评估，走索引快，还是全表扫描快，如果全表扫描更快，则放弃索引走全表扫描。 因此，is null 、is not null是否走索引，得具体情况具体分析，并不是固定的。")])])])]),t._v(" "),s("h5",{attrs:{id:"sql-提示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-提示"}},[t._v("#")]),t._v(" SQL 提示")]),t._v(" "),s("p",[t._v("是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。")]),t._v(" "),s("p",[t._v("例如，使用索引：\n"),s("code",[t._v('explain select * from tb_user use index(idx_user_pro) where profession="软件工程";')]),t._v("\n不使用哪个索引：\n"),s("code",[t._v('explain select * from tb_user ignore index(idx_user_pro) where profession="软件工程";')]),t._v("\n必须使用哪个索引：\n"),s("code",[t._v('explain select * from tb_user force index(idx_user_pro) where profession="软件工程";')])]),t._v(" "),s("p",[t._v("use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force就是无论如何都强制使用该索引。")]),t._v(" "),s("h5",{attrs:{id:"覆盖索引-回表查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引-回表查询"}},[t._v("#")]),t._v(" 覆盖索引&回表查询")]),t._v(" "),s("p",[t._v("**覆盖索引：**覆盖索引是指查询使用了索引，并且需要返回的列，在该索引中已经全部能够找到 。")]),t._v(" "),s("p",[t._v("尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。")]),t._v(" "),s("p",[t._v("explain 中 extra 字段含义：\n"),s("code",[t._v("using index condition")]),t._v("：查找使用了索引，但是需要回表查询数据\n"),s("code",[t._v("using where; using index;")]),t._v("：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询")]),t._v(" "),s("ul",[s("li",[t._v("如果一直使用select * 查询返回所有字段值，很容易就会造成回表查询（除非是根据主键查询，此时只会扫描聚集索引）。")])]),t._v(" "),s("p",[t._v("如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是select *；如果在辅助索引中找聚集索引，如"),s("code",[t._v("select id, name from xxx where name='xxx';")]),t._v("，也只需要通过辅助索引(name)查找到对应的id，返回name和name索引对应的id即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如"),s("code",[t._v("select id, name, gender from xxx where name='xxx';")])]),t._v(" "),s("p",[t._v("所以尽量不要用"),s("code",[t._v("select *")]),t._v("，容易出现回表查询，降低效率，除非有联合索引包含了所有字段")]),t._v(" "),s("blockquote",[s("p",[t._v("面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下SQL语句进行优化，该如何进行才是最优方案：\n"),s("code",[t._v("select id, username, password from tb_user where username='itcast';")])]),t._v(" "),s("p",[t._v("解：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 针对于 username, password建立联合索引, sql为: ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v(" idx_user_name_pass "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("username"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("给username和password字段建立联合索引，则不需要回表查询，直接覆盖索引")])]),t._v(" "),s("h5",{attrs:{id:"前缀索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前缀索引"}},[t._v("#")]),t._v(" 前缀索引")]),t._v(" "),s("p",[t._v("当字段类型为字符串（varchar, text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。")]),t._v(" "),s("p",[t._v("语法："),s("code",[t._v("create index idx_xxxx on table_name(columnn(n));")]),t._v("\n前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。\n求选择性公式：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("distinct")]),t._v(" substring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("show index 里面的sub_part可以看到接取的长度")]),t._v(" "),s("h5",{attrs:{id:"单列索引-联合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单列索引-联合索引"}},[t._v("#")]),t._v(" 单列索引&联合索引")]),t._v(" "),s("p",[t._v("单列索引：即一个索引只包含单个列\n联合索引：即一个索引包含了多个列")]),t._v(" "),s("blockquote",[s("p",[t._v("在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。")])]),t._v(" "),s("p",[t._v("单列索引情况：\n"),s("code",[t._v("explain select id, phone, name from tb_user where phone = '17799990010' and name = '韩信';")]),t._v("\n这句只会用到phone索引字段")]),t._v(" "),s("h6",{attrs:{id:"注意事项-9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-9"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ul",[s("li",[t._v("多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询")])]),t._v(" "),s("h4",{attrs:{id:"设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),s("ol",[s("li",[t._v("针对于数据量较大，且查询比较频繁的表建立索引")]),t._v(" "),s("li",[t._v("针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引")]),t._v(" "),s("li",[t._v("尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高")]),t._v(" "),s("li",[t._v("如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引")]),t._v(" "),s("li",[t._v("尽量==使用联合索引，减少单列索引==，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率")]),t._v(" "),s("li",[t._v("要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率")]),t._v(" "),s("li",[t._v("如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询")])]),t._v(" "),s("h3",{attrs:{id:"sql-优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql-优化"}},[t._v("#")]),t._v(" SQL 优化")]),t._v(" "),s("h4",{attrs:{id:"插入数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[t._v("#")]),t._v(" 插入数据")]),t._v(" "),s("p",[t._v("普通插入：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("采用批量插入（一次插入的数据不建议超过1000条）")])]),t._v(" "),s("li",[s("p",[t._v("手动提交事务")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677071642379.png",alt:"1677071642379"}})])]),t._v(" "),s("li",[s("p",[t._v("主键顺序插入")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677071663491.png",alt:"1677071663491"}})])])]),t._v(" "),s("p",[t._v("大批量插入：\n如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令插入。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）")]),t._v("\nmysql "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--local-infile -u root -p")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global")]),t._v(" local_infile "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@local_infile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 执行load指令将准备好的数据，加载到表结构中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("load")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("infile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/root/sql1.log'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tb_user'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fields")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lines")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("terminated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"主键优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主键优化"}},[t._v("#")]),t._v(" 主键优化")]),t._v(" "),s("p",[t._v("数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）")]),t._v(" "),s("ul",[s("li",[t._v("在InnoDB引擎中，数据行是记录在逻辑结构 page 页中的，而每一个页的大小是固定的，默认16K。那也就意味着， 一个页中所存储的行也是有限的，如果插入的数据行row在该页存储不小，将会存储到下一个页中，页与页之间会通过指针连接。")])]),t._v(" "),s("p",[t._v("页分裂：页可以为空，也可以填充一般，也可以填充100%，每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列。\n(移动数据，并插入id为50的数据之后，那么此时，这三个页之间的数据顺序是有问题的\n页，应该是3#， 3#的下一个页是2#。 所以，此时，需要重新设置链表指针。)")]),t._v(" "),s("p",[t._v("页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。\n(MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定)")]),t._v(" "),s("blockquote",[s("p",[t._v("文字说明不够清晰明了，具体可以看视频里的PPT演示过程：https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90")])]),t._v(" "),s("p",[t._v("主键设计原则：")]),t._v(" "),s("ul",[s("li",[t._v("满足业务需求的情况下，尽量降低主键的长度")]),t._v(" "),s("li",[t._v("插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键")]),t._v(" "),s("li",[t._v("尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号")]),t._v(" "),s("li",[t._v("业务操作时，避免对主键的修改")])]),t._v(" "),s("h4",{attrs:{id:"order-by优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order-by优化"}},[t._v("#")]),t._v(" order by优化")]),t._v(" "),s("ol",[s("li",[t._v("Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序")]),t._v(" "),s("li",[t._v("Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("排序时,也需要满足最左前缀法则,否则也会出现 filesort。因为在创建索引的时候， age是第一个字段，phone是第二个字段，所以排序时，也就该按照这个顺序来，否则就会出现 Using filesort。")])]),t._v(" "),s("li",[s("p",[t._v("如果order by字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain的extra信息显示的是"),s("code",[t._v("Using index, Using filesort")]),t._v("，\n如果要优化掉Using filesort，则需要另外再创建一个索引，如："),s("code",[t._v("create index idx_user_age_phone_ad on tb_user(age asc, phone desc);")]),t._v("  –索引中age升序排列、phone降序排列，此时使用"),s("code",[t._v("select id, age, phone from tb_user order by age asc, phone desc;")]),t._v("会全部走索引")])])]),t._v(" "),s("p",[t._v("总结：")]),t._v(" "),s("ul",[s("li",[t._v("根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则")]),t._v(" "),s("li",[t._v("尽量使用覆盖索引")]),t._v(" "),s("li",[t._v("多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）")]),t._v(" "),s("li",[t._v("如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认256k）")])]),t._v(" "),s("h4",{attrs:{id:"group-by优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#group-by优化"}},[t._v("#")]),t._v(" group by优化")]),t._v(" "),s("ul",[s("li",[t._v("在分组操作时，可以通过索引来提高效率")]),t._v(" "),s("li",[t._v("分组操作时，索引的使用也是满足最左前缀法则的")])]),t._v(" "),s("p",[t._v("如索引为"),s("code",[t._v("idx_user_pro_age_stat")]),t._v("，则句式可以是"),s("code",[t._v("select ... where profession order by age")]),t._v("，这样也符合最左前缀法则")]),t._v(" "),s("h4",{attrs:{id:"limit优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limit优化"}},[t._v("#")]),t._v(" limit优化")]),t._v(" "),s("p",[t._v("常见的问题如"),s("code",[t._v("limit 2000000, 10")]),t._v("，此时需要 MySQL 排序前2000000条记录，但仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。\n优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 此语句耗时很长")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_sku "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询（主键的id索引就是覆盖索引）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_sku "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_sku "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_sku "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("order")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("by")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"count优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#count优化"}},[t._v("#")]),t._v(" count优化")]),t._v(" "),s("p",[t._v("MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（前提是不适用where）；\nInnoDB 在执行 count(*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。\n优化方案：自己计数，如创建key-value表存储在内存或硬盘，或者是用redis")]),t._v(" "),s("p",[t._v("count的几种用法：")]),t._v(" "),s("ul",[s("li",[t._v("如果count函数的参数（count里面写的那个字段）不是NULL（字段值不为NULL），累计值就加一，最后返回累计值")]),t._v(" "),s("li",[t._v("用法：count(*)、count(主键)、count(字段)、count(1)")]),t._v(" "),s("li",[t._v("count(主键)跟count(*)一样，因为主键不能为空；count(字段)只计算字段值不为NULL的行；count(1)引擎会为每行添加一个1，然后就count这个1，返回结果也跟count(*)一样；count(null)返回0")])]),t._v(" "),s("p",[t._v("各种用法的性能：")]),t._v(" "),s("ul",[s("li",[t._v("count(主键)：InnoDB引擎会遍历整张表，把每行的主键id值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）")]),t._v(" "),s("li",[t._v("count(字段)：没有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加")]),t._v(" "),s("li",[t._v("count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加")]),t._v(" "),s("li",[t._v("count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加")])]),t._v(" "),s("p",[t._v("按效率排序：count(字段) < count(主键) < count(1) < count(*)，所以尽量使用 count(*)")]),t._v(" "),s("h4",{attrs:{id:"update优化-避免行锁升级为表锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update优化-避免行锁升级为表锁"}},[t._v("#")]),t._v(" update优化（避免行锁升级为表锁）")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677075420545.png",alt:"1677075420545"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677075395510.png",alt:"1677075395510"}})]),t._v(" "),s("p",[t._v("InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。")]),t._v(" "),s("p",[t._v("如以下两条语句：\n"),s("code",[t._v("update student set no = '123' where id = 1;")]),t._v("，这句由于id有主键索引，所以只会锁这一行；\n"),s("code",[t._v("update student set no = '123' where name = 'test';")]),t._v("，这句由于name没有索引，所以会把整张表都锁住进行数据更新，解决方法是给name字段添加索引")]),t._v(" "),s("h3",{attrs:{id:"视图-存储过程-触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图-存储过程-触发器"}},[t._v("#")]),t._v(" 视图/存储过程/触发器")]),t._v(" "),s("h4",{attrs:{id:"视图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),s("p",[t._v("视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视\n图的查询中使用的表，并且是在使用视图时动态生成的。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v("  视图名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列名列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("语句   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASCADED")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询")]),t._v("\n查看创建视图语句："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v("  视图名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n查看视图数据："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("   视图名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 修改")]),t._v("\n方式一："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("OR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPLACE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v("  视图名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列名列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("语句   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASCADED")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n方式二："),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v("  视图名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("列名列表"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("语句   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WITH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASCADED")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOCAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VIEW")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 视图名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("视图名称"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("可以通过视图来插入、更新数据")]),t._v(" "),s("h5",{attrs:{id:"检查选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查选项"}},[t._v("#")]),t._v(" 检查选项")]),t._v(" "),s("p",[t._v("当使用WITH CHECK OPTION子句创建视图时，MySQL会通过视图检查正在更改的每个行，例如 插入，更新，删除，以使其符合视图的定义。")]),t._v(" "),s("p",[s("strong",[t._v("确定检查范围")]),t._v("：")]),t._v(" "),s("ol",[s("li",[t._v("CASCADED 级联\nv2视图是基于v1视图的，如果在v2视图创建的时候指定了检查选项为 cascaded，但是v1视图创建时未指定检查选项。 则在执行检查时，不仅会检查v2，还会级联检查v2的关联视图v1。")]),t._v(" "),s("li",[t._v("LOCAL 本地\nv2视图是基于v1视图的，如果在v2视图创建的时候指定了检查选项为 local ，但是v1视图创建时未指定检查选项。 则在执行检查时，知会检查v2，不会检查v2的关联视图v1。")])]),t._v(" "),s("h5",{attrs:{id:"视图的更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的更新"}},[t._v("#")]),t._v(" 视图的更新")]),t._v(" "),s("p",[t._v("要使视图可更新，视图中的行与基础表中的行之间必须存在一对一的关系。如果视图包含以下任何一项，则该视图不可更新：")]),t._v(" "),s("p",[t._v("A. 聚合函数或窗口函数（SUM()、 MIN()、 MAX()、 COUNT()等）\nB. DISTINCT\nC. GROUP BY\nD. HAVING\nE. UNION 或者 UNION ALL")]),t._v(" "),s("h5",{attrs:{id:"视图的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图的作用"}},[t._v("#")]),t._v(" 视图的作用")]),t._v(" "),s("p",[t._v("1). 简单\n视图不仅可以简化用户对数据的理解，也可以简化他们的操作。那些被经常使用的查询可以被定义为视\n图，从而使得用户不必为以后的操作每次指定全部的条件。\n2). 安全\n数据库可以授权，但不能授权到数据库特定行和特定的列上。通过视图用户只能查询和修改他们所能见\n到的数据\n3). 数据独立\n视图可帮助用户屏蔽真实表结构变化带来的影响。")]),t._v(" "),s("h4",{attrs:{id:"存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[t._v("#")]),t._v(" 存储过程")]),t._v(" "),s("p",[t._v("存储过程是事先经过编译并存储在数据库中的一段 SQL 语句的集合，调用存储过程可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。")]),t._v(" "),s("p",[t._v("存储过程思想上很简单，就是数据库 SQL 语言层面的代码封装与重用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677114695709.png",alt:"1677114695709"}})]),t._v(" "),s("p",[s("strong",[t._v("特点：")])]),t._v(" "),s("ul",[s("li",[t._v("封装，复用 -----------------------\x3e 可以把某一业务SQL封装在存储过程中，需要用到的时候直接调用即可。")]),t._v(" "),s("li",[t._v("可以接收参数，也可以返回数据 --------\x3e 再存储过程中，可以传递参数，也可以接收返回值。")]),t._v(" "),s("li",[t._v("减少网络交互，效率提升 -------------\x3e 如果涉及到多条SQL，每执行一次都是一次网络传输。 而如果封装在存储过程中，我们只需要网络交互一次可能就可以了。")])]),t._v(" "),s("h5",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v("   存储过程名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 参数列表 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- SQL语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" 名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 参数 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" INFORMATION_SCHEMA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ROUTINES "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" ROUTINE_SCHEMA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询指定数据库的存储过程及状态信息")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v("   存储过程名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查询某个存储过程的定义")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 存储过程名称 ；\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  在命令行中，执行创建存储过程的SQL时，需要通过关键字 delimiter 指定SQL语句的结束符。")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h5",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("h6",{attrs:{id:"_1、系统变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、系统变量"}},[t._v("#")]),t._v(" 1、系统变量：")]),t._v(" "),s("p",[t._v("是MySQL服务器提供，不是用户定义的，属于服务器层面。分为全局变量（GLOBAL）、会话\n变量（SESSION）。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看系统变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   VARIABLES "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看所有系统变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   VARIABLES  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'......'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 可以通过LIKE模糊匹配方")]),t._v("\n式查找变量\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  @@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  系统变量名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--  查看指定变量的值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 设置系统变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   系统变量名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("  @@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SESSION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("系统变量名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("**注意：**如果没有指定SESSION/GLOBAL，默认是SESSION，会话变量。")]),t._v(" "),s("p",[t._v("（mysql服务重新启动之后，所设置的全局参数会失效，要想不失效，可以在 /etc/my.cnf 中配置。）")]),t._v(" "),s("p",[t._v("A. 全局变量(GLOBAL): 全局变量针对于所有的会话。\nB. 会话变量(SESSION): 会话变量针对于单个会话，在另外一个会话窗口就不生效了。")]),t._v(" "),s("h6",{attrs:{id:"_2、用户定义变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、用户定义变量"}},[t._v("#")]),t._v(" 2、用户定义变量：")]),t._v(" "),s("p",[t._v('用户定义变量 是用户根据需要自己定义的变量，用户变量不用提前声明，在用的时候直接用 "@变量名" 使用就可以。其作用域为当前连接。')]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 赋值")]),t._v("\n方式一：赋值时，可以使用 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ，也可以使用 :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n方式二：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" expr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  字段名  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@var_name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("strong",[t._v("注意:")]),t._v(" 用户定义的变量无需对其进行声明或初始化，只不过获取到的值为NULL。")]),t._v(" "),s("h6",{attrs:{id:"_3、局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、局部变量"}},[t._v("#")]),t._v(" 3、局部变量：")]),t._v(" "),s("p",[t._v("局部变量 是根据需要定义的在局部生效的变量，访问之前，需要DECLARE声明。可用作存储过程内的局部变量和输入参数，局部变量的范围是在其内声明的BEGIN ... END块。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" 变量名 变量类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 变量类型就是数据库字段类型：INT、BIGINT、CHAR、VARCHAR、DATE、TIME等。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 赋值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("  变量名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v("  变量名 :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  字段名  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v("  变量名  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("  表名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h5",{attrs:{id:"if"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[t._v("#")]),t._v(" if")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("  条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSEIF")]),t._v("  条件"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 可选")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("                     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 可选")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h5",{attrs:{id:"参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677116372963.png",alt:"1677116372963"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v("   存储过程名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INOUT")]),t._v("  参数名  参数类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- SQL语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" p4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("out")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("85")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" result :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'优秀'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" result :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'及格'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" result :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'不及格'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 定义用户变量 @result来接收返回的数据, 用户变量可以不用声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@result")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- inout和out参数需要用@变量名，in不用")]),t._v("\np5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inout")]),t._v(" score "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@score")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("198")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@score")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h5",{attrs:{id:"case"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[t._v("#")]),t._v(" case")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 含义： 当case_value的值为 when_value1时，执行statement_list1，当值为 when_value2时，")]),t._v("\n执行statement_list2， 否则就执行 statement_list\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v("  case_value\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v("  when_value1  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("  statement_list1\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v("  when_value2  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("  statement_list2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("  statement_list "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 含义： 当条件search_condition1成立时，执行statement_list1，当条件search_condition2成")]),t._v("\n立时，执行statement_list2， 否则就执行 statement_list\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v("  search_condition1  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("  statement_list1\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v("  search_condition2  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v("  statement_list2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v("  statement_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 如果判定条件有多个，多个条件之间，可以使用 and 或 or 进行连接。")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h5",{attrs:{id:"while"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[t._v("#")]),t._v(" while")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 先判定条件，如果条件为true，则执行逻辑，否则，不执行逻辑")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),t._v("  条件  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v("逻辑"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 案例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- A. 定义局部变量, 记录累加之后的值;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- B. 每循环一次, 就会对n进行减1 , 如果n减到0, 则退出循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" p7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" total :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" n :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h5",{attrs:{id:"repeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat"}},[t._v("#")]),t._v(" repeat")]),t._v(" "),s("p",[t._v("repeat是有条件的循环控制语句, 当满足until声明的条件的时候，则退出循环 。具体语法为：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 先执行一次逻辑，然后判定UNTIL条件是否满足，如果满足，则退出。如果不满足，则继续下一次循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v("逻辑"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  \n    UNTIL  条件\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 案例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- A. 定义局部变量, 记录累加之后的值;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- B. 每循环一次, 就会对n进行-1 , 如果n减到0, 则退出循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" p8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeat")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" total :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" n :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    until  n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("h5",{attrs:{id:"loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loop"}},[t._v("#")]),t._v(" loop")]),t._v(" "),s("p",[t._v("LOOP 实现简单的循环，如果不在SQL逻辑中增加退出循环的条件，可以用其来实现简单的死循环\nLOOP可以配合一下两个语句使用：")]),t._v(" "),s("ul",[s("li",[t._v("LEAVE ：配合循环使用，退出循环。")]),t._v(" "),s("li",[t._v("ITERATE：必须用在循环中，作用是跳过当前循环剩下的语句，直接进入下一次循环。")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("begin_label:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOOP")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v("逻辑"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LOOP")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("end_label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEAVE")]),t._v("  label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 退出指定标记的循环体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ITERATE")]),t._v("  label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 直接进入下一次循环")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- egin_label，end_label，label 指的都是我们所自定义的标记。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- A. 定义局部变量, 记录累加之后的值;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- B. 每循环一次, 就会对n进行-1 , 如果n减到0, 则退出循环 ----\x3e leave xx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" p9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    sum:"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("leave")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" total :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" n :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 案例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- A. 定义局部变量, 记录累加之后的值;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- B. 每循环一次, 就会对n进行-1 , 如果n减到0, 则退出循环 ----\x3e leave xx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- C. 如果当次累加的数据是奇数, 则直接进入下一次循环. --------\x3e iterate xx")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" p10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    sum:"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("leave")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" n :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("iterate")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" total :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" n :"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("loop")]),t._v(" sum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br")])]),s("h5",{attrs:{id:"游标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#游标"}},[t._v("#")]),t._v(" 游标")]),t._v(" "),s("p",[t._v("游标（CURSOR）是用来存储查询结果集的数据类型 , 在存储过程和函数中可以使用游标对结果集进行循环的处理。游标的使用包括游标的声明、OPEN、FETCH 和 CLOSE，其语法分别如下。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" 游标名称 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURSOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" 查询语句 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 打开游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPEN")]),t._v(" 游标名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 获取游标记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" 游标名称 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" 变量 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 变量 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 关闭游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CLOSE")]),t._v(" 游标名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 案例")]),t._v("\n根据传入的参数uage，来查询用户表tb_user中，所有的用户年龄小于等于uage的用户姓名\n（name）和专业（profession），并将用户的姓名和专业插入到所创建的一张新表\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("profession"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中。\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 逻辑:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- A. 声明游标, 存储查询结果集")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- B. 准备: 创建表结构")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- C. 开启游标")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- D. 获取游标中的记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- E. 插入数据到新表中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- F. 关闭游标")]),t._v("\n\nreate "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v("  p11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" uage "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" uname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" upro "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" u_cursor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("cursor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("profession "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tb_user "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("uage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" tb_user_pro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exists")]),t._v(" tb_user_pro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto_increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        profession "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" u_cursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fetch")]),t._v(" u_cursor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("upro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" tb_user_pro "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("uname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("upro"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" u_cursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("call")]),t._v(" p11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#上述的存储过程，最终我们在调用的过程中，会报错，之所以报错是因为上面的while循环中，并没有退出条件。当游标的数据集获取完毕之后，再次获取数据，就会报错，从而终止了程序的执行。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 声明条件处理程序 ： 当SQL语句执行抛出的状态码为02000时，将关闭游标u_cursor，并退出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("handler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" SQLSTATE "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02000'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" u_cursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 加入条件处理语句可以解决这一问题")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("h5",{attrs:{id:"条件处理程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件处理程序"}},[t._v("#")]),t._v(" 条件处理程序")]),t._v(" "),s("p",[t._v("条件处理程序（Handler）可以用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v("   handler_action   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HANDLER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v("    condition_value  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" condition_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("   statement "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nhandler_action 的取值： \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONTINUE")]),t._v(": 继续执行当前程序\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXIT")]),t._v(": 终止执行当前程序\n    \ncondition_value 的取值： \n    SQLSTATE  sqlstate_value: 状态码，如 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("02000")]),t._v("\n    \n    SQLWARNING: 所有以"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v("开头的SQLSTATE代码的简写\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" FOUND: 所有以"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),t._v("开头的SQLSTATE代码的简写\n    SQLEXCEPTION: 所有没有被SQLWARNING 或 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" FOUND捕获的SQLSTATE代码的简写\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("handler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" SQLSTATE "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02000'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" u_cursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("exit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("handler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" found "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("close")]),t._v(" u_cursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h5",{attrs:{id:"存储函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存储函数"}},[t._v("#")]),t._v(" 存储函数")]),t._v(" "),s("p",[t._v("存储函数是有返回值的存储过程，存储函数的参数只能是IN类型的。具体语法如下：")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v("   存储函数名称 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" 参数列表 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("characteristic "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- SQL语句")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncharacteristic说明：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DETERMINISTIC")]),t._v("：相同的输入参数总是产生相同的结果\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" ：不包含 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" 语句。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("READS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATA")]),t._v("：包含读取数据的语句，但不包含写入数据的语句。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h4",{attrs:{id:"触发器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发器"}},[t._v("#")]),t._v(" 触发器")]),t._v(" "),s("p",[t._v("触发器是与表有关的数据库对象，指在insert/update/delete之前(BEFORE)或之后(AFTER)，触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以协助应用在数据库端确保数据的完整性 , 日志记录 , 数据校验等操作 。")]),t._v(" "),s("p",[t._v("使用别名OLD和NEW来引用触发器中发生变化的记录内容，这与其他的数据库是相似的。现在触发器还\n只支持行级触发，不支持语句级触发。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677119527281.png",alt:"1677119527281"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v("  trigger_name \nBEFORE"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AFTER")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" tbl_name   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR EACH ROW")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 行级触发器")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    trigger_stmt "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" TRIGGERS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TRIGGER")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("schema_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("trigger_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 如果没有指定schema_name，默认为当前数据库 。")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:"锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[t._v("#")]),t._v(" 锁")]),t._v(" "),s("p",[t._v("锁是计算机协调多个进程或线程并发访问某一资源的机制。")]),t._v(" "),s("p",[t._v("在数据库中，除传统的计算资源（CPU、RAM、I/O）的争用以外，数据也是一种供许多用户共享的资源。如何保证数据并发访问的一致性、有效性是所有数据库必须解决的一个问题，锁冲突也是影响数据库并发访问性能的一个重要因素。")]),t._v(" "),s("h4",{attrs:{id:"全局锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局锁"}},[t._v("#")]),t._v(" 全局锁")]),t._v(" "),s("p",[t._v("全局锁就是对整个数据库实例加锁，加锁后整个实例就处于只读状态，后续的DML的写语句，DDL语\n句，已经更新操作的事务提交语句都将被阻塞。（典型的使用场景是做全库的逻辑备份，对所有的表进行锁定，从而获取一致性视图，保证数据的完整性。）")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677120767307.png",alt:"1677120767307"}})]),t._v(" "),s("p",[t._v("对数据库进行进行逻辑备份之前，先对整个数据库加上全局锁，一旦加了全局锁之后，其他的DDL、DML全部都处于阻塞状态，但是可以执行DQL语句，也就是处于只读状态，而数据备份就是查询操作。那么数据在进行逻辑备份的过程中，数据库中的数据就是不会发生变化的，这样就保证了数据的一致性和完整性。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 加全局锁")]),t._v("\nflush "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 数据备份")]),t._v("\nmysqldump "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot –p1234 itcast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" itcast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 数据备份的相关指令")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 释放锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("数据库中加全局锁，是一个比较重的操作，存在以下问题：")]),t._v(" "),s("ul",[s("li",[t._v("如果在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆。")]),t._v(" "),s("li",[t._v("如果在从库上备份，那么在备份期间从库不能执行主库同步过来的二进制日志（binlog），会导\n致主从延迟。")])]),t._v(" "),s("p",[t._v("在InnoDB引擎中，我们可以在备份时加上参数 --single-transaction 参数来完成不加锁的一致\n性数据备份。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mysqldump --single-transaction -uroot –p123456 itcast > itcast.sql\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"表级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表级锁"}},[t._v("#")]),t._v(" 表级锁")]),t._v(" "),s("p",[t._v("表级锁，每次操作锁住整张表。锁定粒度大，发生锁冲突的概率最高，并发度最低。应用在MyISAM、InnoDB、BDB等存储引擎中。")]),t._v(" "),s("p",[t._v("三类：表锁、元数据锁（meta data lock，MDL）、意向锁")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 加锁：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" 表名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("write")]),t._v("。\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 释放锁：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unlock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 客户端断开连接 。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h5",{attrs:{id:"表锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表锁"}},[t._v("#")]),t._v(" 表锁")]),t._v(" "),s("p",[t._v("表共享读锁（read lock）、表独占写锁（write lock）")]),t._v(" "),s("p",[s("strong",[t._v("读锁")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677121207625.png",alt:"1677121207625"}})]),t._v(" "),s("p",[s("strong",[t._v("写锁")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677121236360.png",alt:"1677121236360"}})]),t._v(" "),s("p",[t._v("结论: 读锁不会阻塞其他客户端的读，但是会阻塞写。写锁既会阻塞其他客户端的读，又会阻塞其他客户端的写。")]),t._v(" "),s("h5",{attrs:{id:"元数据锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元数据锁"}},[t._v("#")]),t._v(" 元数据锁")]),t._v(" "),s("p",[t._v("（meta data lock，MDL）")]),t._v(" "),s("p",[t._v("MDL加锁过程是系统自动控制，无需显式使用，在访问一张表的时候会自动加上。MDL锁主要作用是维护表元数据的数据一致性，==在表上有活动事务的时候，不可以对元数据进行写入操作==。为了避免DML与DDL冲突，保证读写的正确性。")]),t._v(" "),s("ul",[s("li",[t._v("某一张表涉及到未提交的事务时，是不能够修改这张表的表结构的。")]),t._v(" "),s("li",[t._v("当对一张表进行增删改查的时候，加MDL读锁(共享)；当对表结构进行变更操作的时候，加MDL写锁(排他)。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677121533599.png",alt:"1677121533599"}})]),t._v(" "),s("p",[t._v("当执行SELECT、INSERT、UPDATE、DELETE等语句时，添加的是元数据共享锁（SHARED_READ / SHARED_WRITE），之间是兼容的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677121671552.png",alt:"1677121671552"}})]),t._v(" "),s("p",[t._v("左边select语句，添加的是元数据共享锁（SHARED_READ）会阻塞元数据排他锁\n（EXCLUSIVE），之间是互斥的。")]),t._v(" "),s("p",[t._v("右边对表结构进行变更操作的时候，加MDL写锁，元数据排他锁（阻塞）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677121710865.png",alt:"1677121710865"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" object_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("object_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("object_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_duration "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" \nperformance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("metadata_locks "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h5",{attrs:{id:"意向锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意向锁"}},[t._v("#")]),t._v(" 意向锁")]),t._v(" "),s("p",[t._v("为了避免DML在执行时，加的行锁与表锁的冲突，在InnoDB中引入了意向锁，使得表锁不用检查每行数据是否加锁，使用意向锁来减少表锁的检查。")]),t._v(" "),s("ol",[s("li",[t._v("客户端一，在执行DML操作时，会对涉及的行加行锁，同时也会对该表加上意向锁。")]),t._v(" "),s("li",[t._v("而其他客户端，在对这张表加表锁的时候不用逐行判断行锁情况了。")])]),t._v(" "),s("p",[s("strong",[t._v("分类")])]),t._v(" "),s("ul",[s("li",[t._v("意向共享锁(IS): 由语句select ... lock in share mode添加 。 与表锁共享锁(read)兼容，与表锁排他锁(write)互斥。")]),t._v(" "),s("li",[t._v("意向排他锁(IX): 由insert、update、delete、select...for update添加 。与表锁共享锁(read)及排他锁(write)都互斥，意向锁之间不会互斥。")])]),t._v(" "),s("blockquote",[s("p",[t._v("一旦事务提交了，意向共享锁、意向排他锁，都会自动释放。")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" object_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("object_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" performance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data_locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"行级锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行级锁"}},[t._v("#")]),t._v(" "),s("strong",[t._v("行级锁")])]),t._v(" "),s("p",[t._v("行级锁，每次操作锁住对应的行数据。锁定粒度最小，发生锁冲突的概率最低，并发度最高。应用在InnoDB存储引擎中。")]),t._v(" "),s("p",[t._v("InnoDB的数据是基于索引组织的，行锁是通过对索引上的索引项加锁来实现的，而不是对记录加的锁。")]),t._v(" "),s("p",[s("strong",[t._v("三类")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677123445838.png",alt:"1677123445838"}})]),t._v(" "),s("h5",{attrs:{id:"行锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行锁"}},[t._v("#")]),t._v(" 行锁")]),t._v(" "),s("p",[t._v("InnoDB实现了以下两种类型的行锁：\n共享锁（S）：允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁。\n排他锁（X）：允许获取排他锁的事务更新数据，阻止其他事务获得相同数据集的共享锁和排他锁。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677123804035.png",alt:"1677123804035"}})]),t._v(" "),s("p",[t._v("常见的SQL语句，在执行时，所加的行锁如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677123841373.png",alt:"1677123841373"}})]),t._v(" "),s("p",[t._v("默认情况下，InnoDB在 REPEATABLE READ事务隔离级别运行，InnoDB使用 next-key 锁进行搜索和索引扫描，以防止幻读。\n针对唯一索引进行检索时，对已存在的记录进行等值匹配时，将会自动优化为行锁。InnoDB的行锁是针对于索引加的锁，不通过索引条件检索数据，那么InnoDB将对表中的所有记录加锁，此时就会升级为表锁。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" object_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("object_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lock_data "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" \nperformance_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data_locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("A. select...lock in share mode，加共享锁，共享锁与共享锁之间兼容。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677124319216.png",alt:"1677124319216"}})]),t._v(" "),s("p",[t._v("共享锁与排他锁之间互斥。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677124332370.png",alt:"1677124332370"}})]),t._v(" "),s("p",[t._v("客户端一获取的是id为1这行的共享锁，客户端二是可以获取id为3这行的排它锁的，因为不是同一行\n数据。 而如果客户端二想获取id为1这行的排他锁，会处于阻塞状态，以为共享锁与排他锁之间互\n斥。")]),t._v(" "),s("p",[t._v("B. 排它锁与排他锁之间互斥")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677124465209.png",alt:"1677124465209"}})]),t._v(" "),s("p",[t._v("当客户端一，执行update语句，会为id为1的记录加排他锁； 客户端二，如果也执行update语句更新id为1的数据，也要为id为1的数据加排他锁，但是客户端二会处于阻塞状态，因为排他锁之间是互斥的。 直到客户端一，把事务提交了，才会把这一行的行锁释放，此时客户端二，解除阻塞。")]),t._v(" "),s("p",[t._v("C. 无索引行锁升级为表锁")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677134856216.png",alt:"1677134856216"}})]),t._v(" "),s("p",[t._v("在客户端一中，开启事务，并执行update语句，更新name为Lily的数据，也就是id为19的记录 。 然后在客户端二中更新id为3的记录，却不能直接执行，会处于阻塞状态，为什么呢？\n原因就是因为此时，客户端一，根据name字段进行更新时，name字段是没有索引的，如果没有索引，此时行锁会升级为表锁(因为行锁是对索引项加的锁，而name没有索引)。")]),t._v(" "),s("p",[t._v("再针对name字段建立索引，索引建立之后，再次做一个测试：\n此时我们可以看到，客户端一，开启事务，然后依然是根据name进行更新。而客户端二，在更新id为3\n的数据时，更新成功，并未进入阻塞状态。 这样就说明，我们根据索引字段进行更新操作，就可以避\n免行锁升级为表锁的情况。")]),t._v(" "),s("h5",{attrs:{id:"间隙锁-临键锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#间隙锁-临键锁"}},[t._v("#")]),t._v(" 间隙锁&临键锁")]),t._v(" "),s("p",[t._v("默认情况下，InnoDB在 REPEATABLE READ事务隔离级别运行，InnoDB使用 next-key 锁进行搜索和索引扫描，以防止幻读。")]),t._v(" "),s("ul",[s("li",[t._v("索引上的等值查询(唯一索引)，给不存在的记录加锁时, 优化为间隙锁 。")]),t._v(" "),s("li",[t._v("索引上的等值查询(非唯一普通索引)，向右遍历时最后一个值不满足查询需求时，next-key lock 退化为间隙锁。")]),t._v(" "),s("li",[t._v("索引上的范围查询(唯一索引)--会访问到不满足条件的第一个值为止。")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：间隙锁唯一目的是防止其他事务插入间隙。==间隙锁可以共存，一个事务采用的间隙锁不会阻止另一个事务在同一间隙上采用间隙锁。==")])]),t._v(" "),s("p",[t._v("A. 索引上的等值查询(唯一索引)，给不存在的记录加锁时, 优化为间隙锁 。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677136002353.png",alt:"1677136002353"}})]),t._v(" "),s("p",[t._v("B. 索引上的等值查询(非唯一普通索引)，向右遍历时最后一个值不满足查询需求时，next-key lock 退化为间隙锁。")]),t._v(" "),s("p",[t._v("我们知道InnoDB的B+树索引，叶子节点是有序的双向链表。 假如，我们要根据这个二级索引查询值为18的数据，并加上共享锁，我们是只锁定18这一行就可以了吗？ 并不是，因为是非唯一索引，这个结构中可能有多个18的存在，所以，在加锁时会继续往后找，找到一个不满足条件的值（当前案例中也就是29）。此时会对18加临键锁，并对29之前的间隙加锁。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677136379077.png",alt:"1677136379077"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677136574612.png",alt:"1677136574612"}})]),t._v(" "),s("p",[t._v("C. 索引上的范围查询(唯一索引)--会访问到不满足条件的第一个值为止。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677137015482.png",alt:"1677137015482"}})]),t._v(" "),s("p",[t._v("查询的条件为id>=19，并添加共享锁。 此时我们可以根据数据库表中现有的数据，将数据分为三个部分：\n[19]\n(19,25]\n(25,+∞]\n所以数据库数据在加锁是，就是将19加了行锁，25的临键锁（包含25及25之前的间隙），正无穷的临\n键锁(正无穷及之前的间隙)。")]),t._v(" "),s("h3",{attrs:{id:"innodb引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb引擎"}},[t._v("#")]),t._v(" InnoDB引擎")]),t._v(" "),s("h4",{attrs:{id:"逻辑存储结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑存储结构"}},[t._v("#")]),t._v(" 逻辑存储结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677137118884.png",alt:"1677137118884"}})]),t._v(" "),s("ul",[s("li",[t._v("**表空间：**表空间是InnoDB存储引擎逻辑结构的最高层， 如果用户启用了参数 innodb_file_per_table(在8.0版本中默认开启) ，则==每张表都会有一个表空间（xxx.ibd）==，一个mysql实例可以对应多个表空间，用于存储记录、索引等数据。")]),t._v(" "),s("li",[t._v("**段：**分为数据段（Leaf node segment）、索引段（Non-leaf node segment）、回滚段（Rollback segment），InnoDB是索引组织表，数据段就是B+树的叶子节点， 索引段即为B+树的非叶子节点。段用来管理多个Extent（区）。")]),t._v(" "),s("li",[t._v("**区：**表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。")]),t._v(" "),s("li",[t._v("**页：**是InnoDB 存储引擎磁盘管理的最小单元，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。")]),t._v(" "),s("li",[t._v("**行：**InnoDB 存储引擎数据是按行进行存放的。\n在行中，默认有两个隐藏字段：\nTrx_id：每次对某条记录进行改动时，都会把对应的事务id赋值给trx_id隐藏列。\nRoll_pointer：每次对某条引记录进行改动时，都会把旧的版本写入到undo日志中，然后这个隐藏列就相当于一个指针，可以通过它来找到该记录修改前的信息。")])]),t._v(" "),s("h4",{attrs:{id:"架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677137489564.png",alt:"1677137489564"}})]),t._v(" "),s("h5",{attrs:{id:"内存结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存结构"}},[t._v("#")]),t._v(" 内存结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677137523653.png",alt:"1677137523653"}})]),t._v(" "),s("p",[t._v("1、Buffer Pool")]),t._v(" "),s("p",[t._v("InnoDB存储引擎基于磁盘文件存储，访问物理硬盘和在内存中进行访问，速度相差很大，为了尽可能弥补这两者之间的I/O效率的差值，就需要==把经常使用的数据加载到缓冲池中，避免每次访问都进行磁盘I/O==。")]),t._v(" "),s("p",[t._v("缓冲池 Buffer Pool，是主内存中的一个区域，里面可以缓存磁盘上经常操作的真实数据，在执行增删改查操作时，先操作缓冲池中的数据（若缓冲池没有数据，则从磁盘加载并缓存），然后再以一定频率刷新到磁盘，从而减少磁盘IO，加快处理速度。")]),t._v(" "),s("p",[t._v("缓冲池以Page页为单位，底层采用链表数据结构管理Page。根据状态，将Page分为三种类型：\n• free page：空闲page，未被使用。\n• clean page：被使用page，数据没有被修改过。\n• dirty page：脏页，被使用page，数据被修改过，也中数据与磁盘的数据产生了不一致。")]),t._v(" "),s("p",[t._v("2、Change Buffer")]),t._v(" "),s("p",[t._v("更改缓冲区（针对于非唯一二级索引页），在执行DML语句时，如果这些数据Page没有在Buffer Pool中，不会直接操作磁盘，而会将数据变更存在更改缓冲区 Change Buffer 中，在未来数据被读取时，再将数据合并恢复到Buffer Pool中，再将合并后的数据刷新到磁盘中。")]),t._v(" "),s("p",[t._v("比如：与聚集索引不同，二级索引通常是非唯一的，并且以相对随机的顺序插入二级索引。同样，删除和更新可能会影响索引树中不相邻的二级索引页，如果每一次都操作磁盘，会造成大量的磁盘IO。有了ChangeBuffer之后，我们可以在缓冲池中进行合并处理，减少磁盘IO。")]),t._v(" "),s("p",[t._v("3、Adaptive Hash Index")]),t._v(" "),s("p",[t._v("自适应hash索引，用于优化对Buffer Pool数据的查询。MySQL的innoDB引擎中虽然没有直接支持hash索引，但是给我们提供了一个功能就是这个自适应hash索引。因为前面我们讲到过，hash索引在进行等值匹配时，一般性能是要高于B+树的，因为hash索引一般只需要一次IO即可，而B+树，可能需要几次匹配，所以hash索引的效率要高，但是hash索引又不适合做范围查询、模糊匹配等。")]),t._v(" "),s("p",[t._v("InnoDB存储引擎会监控对表上各索引页的查询，如果观察到在特定的条件下hash索引可以提升速度，则建立hash索引，称之为自适应hash索引。")]),t._v(" "),s("p",[s("strong",[t._v("自适应哈希索引，无需人工干预，是系统根据情况自动完成。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("参数：adaptive_hash_index\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("4、Log Buffer")]),t._v(" "),s("p",[t._v("日志缓冲区，用来保存要写入到磁盘中的log日志数据（redo log 、undo log），默认大小为 16MB，日志缓冲区的日志会定期刷新到磁盘中。如果需要更新、插入或删除许多行的事务，增加日志缓冲区的大小可以节省磁盘 I/O。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("参数：\ninnodb_log_buffer_size：缓冲区大小\ninnodb_flush_log_at_trx_commit：日志刷新到磁盘时机，取值主要包含以下三个：\n 1: 日志在每次事务提交时写入并刷新到磁盘，默认值。\n 0: 每秒将日志写入并刷新到磁盘一次。\n 2: 日志在每次事务提交后写入，并每秒刷新到磁盘一次。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h5",{attrs:{id:"磁盘结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘结构"}},[t._v("#")]),t._v(" 磁盘结构")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677138413774.png",alt:"1677138413774"}})]),t._v(" "),s("p",[t._v("1、System Tablespace")]),t._v(" "),s("p",[t._v("系统表空间是更改缓冲区的存储区域。如果表是在系统表空间而不是每个表文件或通用表空间中创建的，它也可能包含表和索引数据。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("参数：innodb_data_file_path \n系统表空间，默认的文件名叫 ibdata1。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("2、File-Per-Table Tablespaces")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果开启了innodb_file_per_table开关 ，则每个表的文件表空间包含单个InnoDB表的数据和索引 ，并存储在文件系统上的单个数据文件中。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("3、General Tablespaces")]),t._v(" "),s("p",[t._v("通用表空间，需要通过 CREATE TABLESPACE 语法创建通用表空间，在创建表时，可以指定该表空间。")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建表空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLESPACE")]),t._v(" ts_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" DATAFILE "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file_name'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" engine_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 创建表时指定表空间")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" xxx "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLESPACE")]),t._v(" ts_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("4、Undo Tablespaces")]),t._v(" "),s("p",[t._v("撤销表空间，MySQL实例在初始化时会自动创建两个默认的undo表空间（初始大小16M），用于存储\nundo log日志。")]),t._v(" "),s("p",[t._v("5、Temporary Tablespaces")]),t._v(" "),s("p",[t._v("InnoDB 使用会话临时表空间和全局临时表空间。存储用户创建的临时表等数据。")]),t._v(" "),s("p",[t._v("6、Doublewrite Buffer Files")]),t._v(" "),s("p",[t._v("双写缓冲区，innoDB引擎将数据页从Buffer Pool刷新到磁盘前，先将数据页写入双写缓冲区文件中，便于系统异常时恢复数据。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677138828296.png",alt:"1677138828296"}})]),t._v(" "),s("p",[t._v("7、Redo Log")]),t._v(" "),s("p",[t._v("重做日志，是用来实现事务的持久性。该日志文件由两部分组成：重做日志缓冲（redo log buffer）以及重做日志文件（redo log）,前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都会存到该日志中, 用于在刷新脏页到磁盘时,发生错误时, 进行数据恢复使用。")]),t._v(" "),s("p",[t._v("以循环方式写入重做日志文件，涉及两个文件：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677139654583.png",alt:"1677139654583"}})]),t._v(" "),s("h5",{attrs:{id:"后台线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后台线程"}},[t._v("#")]),t._v(" 后台线程")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677139710919.png",alt:"1677139710919"}})]),t._v(" "),s("p",[t._v("1、Master Thread")]),t._v(" "),s("p",[t._v("核心后台线程，负责调度其他线程，还负责将缓冲池中的数据异步刷新到磁盘中, 保持数据的一致性， 还包括脏页的刷新、合并插入缓存、undo页的回收 。")]),t._v(" "),s("p",[t._v("2、IO Thread")]),t._v(" "),s("p",[t._v("在InnoDB存储引擎中大量使用了AIO来处理IO请求, 这样可以极大地提高数据库的性能，而IO Thread主要负责这些IO请求的回调。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677139941613.png",alt:"1677139941613"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看到InnoDB的状态信息，其中就包含IO Thread信息。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("engine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("innodb")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v(" \\G"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("img",{attrs:{src:"/assets/1677140053780.png",alt:"1677140053780"}})]),t._v(" "),s("p",[t._v("3、Purge Thread")]),t._v(" "),s("p",[t._v("主要用于回收事务已经提交了的undo log，在事务提交之后，undo log可能不用了，就用它来回收。")]),t._v(" "),s("p",[t._v("4、Page Cleaner Thread")]),t._v(" "),s("p",[t._v("协助 Master Thread 刷新脏页到磁盘的线程，它可以减轻 Master Thread 的工作压力，减少阻塞。")]),t._v(" "),s("h4",{attrs:{id:"事务原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务原理"}},[t._v("#")]),t._v(" 事务原理")]),t._v(" "),s("p",[t._v("事务：是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。")]),t._v(" "),s("p",[t._v("• 原子性（Atomicity）：事务是不可分割的最小操作单元，要么全部成功，要么全部失败。\n• 一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。\n• 隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。\n• 持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。")]),t._v(" "),s("p",[t._v("原子性、一致性、持久化，实际上是由InnoDB中的两份日志来保证的，一份是redo log日志，一份是undo log日志。 而持久性是通过数据库的锁，加上MVCC来保证的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677140282439.png",alt:"1677140282439"}})]),t._v(" "),s("h5",{attrs:{id:"redo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redo-log"}},[t._v("#")]),t._v(" redo log")]),t._v(" "),s("p",[t._v("重做日志，记录的是事务提交时数据页的物理修改，是用来实现事务的持久性。")]),t._v(" "),s("p",[t._v("该日志文件由两部分组成：重做日志缓冲（redo log buffer）以及重做日志文件（redo log file）,前者是在内存中，后者在磁盘中。当事务提交之后会把所有修改信息都存到该日志文件中, 用于在刷新脏页到磁盘,发生错误时, 进行数据恢复使用。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677140540772.png",alt:"1677140540772"}})]),t._v(" "),s("p",[t._v("1）有了redolog之后，当对缓冲区的数据进行增删改之后，会首先将操作的数据页的变化，记录在redo log buffer中。\n2）在事务提交时，会将redo log buffer中的数据刷新到redo log磁盘文件中。\n3）过一段时间之后，如果刷新缓冲区的脏页到磁盘时，发生错误，此时就可以借助于redo log进行数据恢复，这样就保证了事务的持久性。 而如果脏页成功刷新到磁盘 或 或者涉及到的数据已经落盘，此时redolog就没有作用了，就可以删除了，所以存在的两个redolog文件是循环写的。")]),t._v(" "),s("p",[s("strong",[t._v("那为什么每一次提交事务，要刷新redo log 到磁盘中呢，而不是直接将buffer pool中的脏页刷新到磁盘呢？")]),t._v("\n答：因为在业务操作中，我们操作数据一般都是随机读写磁盘的，而不是顺序读写磁盘。 而redo log在往磁盘文件中写入数据，由于是日志文件，所以都是顺序写的。顺序写的效率，要远大于随机写。 这种先写日志的方式，称之为 WAL（Write-Ahead Logging）。")]),t._v(" "),s("h5",{attrs:{id:"undo-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undo-log"}},[t._v("#")]),t._v(" undo log")]),t._v(" "),s("p",[t._v("回滚日志，用于记录数据被修改前的信息 , 作用包含两个 : 提供回滚(保证事务的原子性) 和 MVCC(多版本并发控制) 。")]),t._v(" "),s("p",[t._v("**undo log和redo log记录物理日志不一样，它是逻辑日志。**可以认为当delete一条记录时，undo log中会记录一条对应的insert记录，反之亦然，当update一条记录时，它记录一条对应相反的update记录。当执行rollback时，就可以从undo log中的逻辑记录读取到相应的内容并进行回滚。")]),t._v(" "),s("ul",[s("li",[t._v("Undo log销毁：undo log在事务执行时产生，事务提交时，并不会立即删除undo log，因为这些\n日志可能还用于MVCC。")]),t._v(" "),s("li",[t._v("Undo log存储：undo log采用段的方式进行管理和记录，存放在前面介绍的 rollback segment\n回滚段中，内部包含1024个undo log segment。")])]),t._v(" "),s("h5",{attrs:{id:"mvcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvcc"}},[t._v("#")]),t._v(" MVCC")]),t._v(" "),s("h6",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("1). 当前读\n读取的是记录的最新版本，读取时还要保证其他并发事务不能修改当前记录，会对读取的记录进行加锁。对于我们日常的操作，如：select ... lock in share mode(共享锁)，select ... for update、update、insert、delete(排他锁)都是一种当前读。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("即使是在默认的RR隔离级别下，事务A中依然可以读取到事务B最新提交的内容，因为在查询语句后面加上了 lock in share mode 共享锁，此时是当前读操作。当然，当我们加排他锁的时候，也是当前读操作。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("2). 快照读\n简单的select（不加锁）就是快照读，读取的是记录数据的可见版本，有可能是历史数据，不加锁，是非阻读。")]),t._v(" "),s("p",[t._v("• Read Committed：每次select，都生成一个快照读。\n• Repeatable Read：开启事务后第一个select语句才是快照读的地方。\n• Serializable：快照读会退化为当前读。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677141645911.png",alt:"1677141645911"}})]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在测试中,我们看到即使事务B提交了数据,事务A中也查询不到。 原因就是因为普通的select是快照读，而在当前默认的RR隔离级别下，开启事务后第一个select语句才是快照读的地方，后面执行相同的select语句都是从快照中获取数据，可能不是当前的最新数据，这样也就保证了可重复读。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("3). MVCC\n全称 Multi-Version Concurrency Control，多版本并发控制。指==维护一个数据的多个版本，使得读写操作没有冲突，快照读为MySQL实现MVCC提供了一个非阻塞读功能。==MVCC的具体实现，还需要依赖于数据库记录中的三个隐式字段、undo log日志、readView。")]),t._v(" "),s("h6",{attrs:{id:"隐藏字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏字段"}},[t._v("#")]),t._v(" 隐藏字段")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677141819011.png",alt:"1677141819011"}})]),t._v(" "),s("p",[t._v("创建表时，显式看到的这三个字段。InnoDB还会自动的给我们添加三个隐藏字段及其含义分别是：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677141866686.png",alt:"1677141866686"}})]),t._v(" "),s("h6",{attrs:{id:"undolog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undolog"}},[t._v("#")]),t._v(" undolog")]),t._v(" "),s("p",[t._v("Undo log版本链")]),t._v(" "),s("p",[t._v("回滚日志，在insert、update、delete的时候产生的便于数据回滚的日志。\n当insert的时候，产生的undo log日志只在回滚时需要，在事务提交后，可被立即删除。\n而update、delete的时候，产生的undo log日志不仅在回滚时需要，在快照读时也需要，不会立即被删除。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677142449341.png",alt:"1677142449341"}})]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("DB_TRX_ID : 代表最近修改事务ID，记录插入这条记录或最后一次修改该记录的事务ID，是自增的。\nDB_ROLL_PTR ： 由于这条数据是才插入的，没有被更新过，所以该字段值为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("不同事务或相同事务对同一条记录进行修改，会导致该记录的undolog生成一条记录版本链表，链表的头部是最新的旧记录，链表尾部是最早的旧记录。")])]),t._v(" "),s("h6",{attrs:{id:"readview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readview"}},[t._v("#")]),t._v(" ReadView")]),t._v(" "),s("p",[t._v("ReadView（读视图）是 快照读 SQL执行时MVCC提取数据的依据，记录并维护系统当前活跃的事务\n（未提交的）id。")]),t._v(" "),s("p",[t._v("四个核心字段：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677142779681.png",alt:"1677142779681"}})]),t._v(" "),s("p",[s("strong",[t._v("版本链数据的访问规则")]),t._v("，trx_id 代表当前undolog版本链对应事务ID。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677142948673.png",alt:"1677142948673"}})]),t._v(" "),s("h6",{attrs:{id:"原理分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理分析"}},[t._v("#")]),t._v(" 原理分析")]),t._v(" "),s("p",[t._v("不同的隔离级别，生成ReadView的时机不同：")]),t._v(" "),s("ul",[s("li",[t._v("READ COMMITTED ：在事务中每一次执行快照读时生成ReadView。")]),t._v(" "),s("li",[t._v("REPEATABLE READ：仅在事务中第一次执行快照读时生成ReadView，后续复用该ReadView。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677143612347.png",alt:"1677143612347"}})]),t._v(" "),s("p",[t._v("MVCC的实现原理就是通过 InnoDB表的隐藏字段、UndoLog 版本链、ReadView来实现的。 而MVCC + 锁，则实现了事务的隔离性。 而一致性则是由redolog 与 undolog保证。")]),t._v(" "),s("h3",{attrs:{id:"mysql管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql管理"}},[t._v("#")]),t._v(" MySQL管理")]),t._v(" "),s("h4",{attrs:{id:"系统数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统数据库"}},[t._v("#")]),t._v(" 系统数据库")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1677143696861.png",alt:"1677143696861"}})]),t._v(" "),s("h4",{attrs:{id:"常用工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用工具"}},[t._v("#")]),t._v(" 常用工具")]),t._v(" "),s("h5",{attrs:{id:"mysql-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-2"}},[t._v("#")]),t._v(" mysql")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("语法 ：    \n    mysql   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("database")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n选项 ： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--user=name         #指定用户名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--password[=name]           #指定密码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--host=name         #指定服务器IP或域名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--port=port             #指定连接端口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--execute=name          #执行SQL语句并退出")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e选项可以在Mysql客户端执行"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v("语句，而不用连接到MySQL数据库再执行，对于一些批处理脚本，这种方式尤其方便。    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例：")]),t._v("\nmysql "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot –p123456 db01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"select * from stu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h5",{attrs:{id:"mysqladmin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysqladmin"}},[t._v("#")]),t._v(" mysqladmin")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqladmin 是一个执行管理操作的客户端程序。可以用它来检查服务器的配置和当前状态、创建并删除数据库等。\n通过帮助文档查看选项：\n    mysqladmin "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--help")]),t._v("\n    \n语法: \n    mysqladmin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" command "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n选项:\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--user=name             #指定用户名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--password[=name]       #指定密码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--host=name             #指定服务器IP或域名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--port=port             #指定连接端口")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例")]),t._v("\nmysqladmin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot –p1234 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("drop")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmysqladmin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot –p1234 version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h5",{attrs:{id:"mysqlbinlog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysqlbinlog"}},[t._v("#")]),t._v(" mysqlbinlog")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("由于服务器生成的二进制日志文件以二进制格式保存，所以如果想要检查这些文本的文本格式，就会使用到mysqlbinlog 日志管理工具。\n\n语法 ：    \n    mysqlbinlog "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("files1 log"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("files2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n选项 ： \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--database=name         指定数据库名称，只列出指定的数据库相关操作。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--offset=##              忽略掉日志中的前n行命令。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--result-file=name       将输出的文本格式日志输出到指定文件。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--short-form            显示简单格式， 省略掉一些信息。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--start-datatime=date1  --stop-datetime=date2       指定日期间隔内的所有日志。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--start-position=pos1 --stop-position=pos2          指定位置间隔内的所有日志。")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看 binlog.000008这个二进制文件中的数据信息,太复杂了，-s来显示简单格式")]),t._v("\nmysqlbinlog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s binlog"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("000008")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h5",{attrs:{id:"mysqlshow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysqlshow"}},[t._v("#")]),t._v(" mysqlshow")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqlshow 客户端对象查找工具，用来很快地查找存在哪些数据库、数据库中的表、表中的列或者索引。\n\n语法 ：    \n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("db_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("table_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("col_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n选项 ： \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count     显示数据库及表的统计信息（数据库，表 均可以不指定）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i      显示指定数据库或者指定表的状态信息\n示例：\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询test库中每个表中的字段书，及行数")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p2143 test "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询test库中book表的详细情况")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p2143 test book "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查询每个数据库的表的数量及表中记录的数量")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看数据库db01的统计信息")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 db01 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看数据库db01中的course表的信息")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 db01 course "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看数据库db01中的course表的id字段的信息")]),t._v("\n    mysqlshow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 db01 course id "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--count")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("p",[t._v("mysqldump")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqldump 客户端工具用来备份数据库或在不同数据库之间进行数据迁移。备份内容包含创建表，及插入表的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),t._v("语句。\n\n语法 ：    \n    mysqldump "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" db_name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tables")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    mysqldump "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--database/-B db1 [db2 db3...]")]),t._v("\n    mysqldump "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--all-databases/-A")]),t._v("\n连接选项 ：  \n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--user=name                 指定用户名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--password[=name]           指定密码")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--host=name                 指定服务器ip或域名")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("P"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--port=##                    指定连接端口")]),t._v("\n输出选项：\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--add-drop-database         在每个数据库创建语句前加上 drop database 语句")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--add-drop-table            在每个表创建语句前加上 drop table 语句 , 默认开启 ; 不")]),t._v("\n开启 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--skip-add-drop-table)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--no-create-db          不包含数据库的创建语句")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--no-create-info        不包含数据表的创建语句")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--no-data                不包含数据")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--tab=name             自动生成两个文件：一个.sql文件，创建表结构的语句；一")]),t._v("\n个"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt文件，数据文件\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 备份db01数据库")]),t._v("\nmysqldump "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 db01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" db01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("\n备份出来的数据包含： \n·删除表的语句\n·创建表的语句\n·数据插入语句\n如果我们在数据备份时，不需要创建表，或者不需要备份数据，只需要备份表结构，都可以通过对应的\n参数来实现。\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 备份db01数据库中的表数据，不备份表结构(-t)")]),t._v("\nmysqldump "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t db01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" db01"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 打开 db02.sql ，来查看备份的数据，只有insert语句，没有备份表结构。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 查看哪些目录是MySQL信任的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" variables lik "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%secure_file_priv'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 将db01数据库的表的表结构与数据分开备份(-T)")]),t._v("\nmysqldump "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p1234 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("T "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" db01 score\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 会产生两个文件")]),t._v("\nscore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v(" 中记录的就是表结构文件\nscore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt 就是表数据文件，但是需要注意表数据文件，并不是记录一条条的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v("语句，而是按照一定的格式记录表结构中的数据。如下：\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br")])]),s("p",[s("img",{attrs:{src:"/assets/1677144699338.png",alt:"1677144699338"}})]),t._v(" "),s("h5",{attrs:{id:"mysqlimport-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysqlimport-source"}},[t._v("#")]),t._v(" mysqlimport/source")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("mysqlimport 是客户端数据导入工具，用来导入mysqldump 加 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("T 参数后导出的文本文件。\n语法 ：    \n    mysqlimport "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  db_name  textfile1  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("textfile2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n示例 ： \n    mysqlimport "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("uroot "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p2143 db01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("var"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lib"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("如果需要导入"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("文件"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("可以使用mysql中的source 指令 : \n语法 ：    \n    source "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxxxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("h3",{attrs:{id:"整型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整型"}},[t._v("#")]),t._v(" 整型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("取值范围")]),t._v(" "),s("th",[t._v("大小")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("TINYINT")]),t._v(" "),s("td",[t._v("-128〜127")]),t._v(" "),s("td",[t._v("1个字节")])]),t._v(" "),s("tr",[s("td",[t._v("SMALLINT")]),t._v(" "),s("td",[t._v("-32768〜32767")]),t._v(" "),s("td",[t._v("2个宇节")])]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMINT")]),t._v(" "),s("td",[t._v("-8388608〜8388607")]),t._v(" "),s("td",[t._v("3个字节")])]),t._v(" "),s("tr",[s("td",[t._v("INT (INTEGHR)")]),t._v(" "),s("td",[t._v("-2147483648〜2147483647")]),t._v(" "),s("td",[t._v("4个字节")])]),t._v(" "),s("tr",[s("td",[t._v("BIGINT")]),t._v(" "),s("td",[t._v("-9223372036854775808〜9223372036854775807")]),t._v(" "),s("td",[t._v("8个字节")])])])]),t._v(" "),s("p",[t._v("无符号在数据类型后加 unsigned 关键字。")]),t._v(" "),s("h3",{attrs:{id:"浮点型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点型"}},[t._v("#")]),t._v(" 浮点型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("存储需求")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("FLOAT")]),t._v(" "),s("td",[t._v("单精度浮点数")]),t._v(" "),s("td",[t._v("4 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("DOUBLE")]),t._v(" "),s("td",[t._v("双精度浮点数")]),t._v(" "),s("td",[t._v("8 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("DECIMAL (M, D)，DEC")]),t._v(" "),s("td",[t._v("压缩的“严格”定点数")]),t._v(" "),s("td",[t._v("M+2 个字节")])])])]),t._v(" "),s("h3",{attrs:{id:"日期和时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间"}},[t._v("#")]),t._v(" 日期和时间")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("日期格式")]),t._v(" "),s("th",[t._v("日期范围")]),t._v(" "),s("th",[t._v("存储需求")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("YEAR")]),t._v(" "),s("td",[t._v("YYYY")]),t._v(" "),s("td",[t._v("1901 ~ 2155")]),t._v(" "),s("td",[t._v("1 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("TIME")]),t._v(" "),s("td",[t._v("HH:MM:SS")]),t._v(" "),s("td",[t._v("-838:59:59 ~ 838:59:59")]),t._v(" "),s("td",[t._v("3 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("DATE")]),t._v(" "),s("td",[t._v("YYYY-MM-DD")]),t._v(" "),s("td",[t._v("1000-01-01 ~ 9999-12-3")]),t._v(" "),s("td",[t._v("3 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("DATETIME")]),t._v(" "),s("td",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),s("td",[t._v("1000-01-01 00:00:00 ~ 9999-12-31 23:59:59")]),t._v(" "),s("td",[t._v("8 个字节")])]),t._v(" "),s("tr",[s("td",[t._v("TIMESTAMP")]),t._v(" "),s("td",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),s("td",[t._v("1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC")]),t._v(" "),s("td",[t._v("4 个字节")])])])]),t._v(" "),s("h3",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("存储需求")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("CHAR(M)")]),t._v(" "),s("td",[t._v("固定长度非二进制字符串")]),t._v(" "),s("td",[t._v("M 字节，1<=M<=255")])]),t._v(" "),s("tr",[s("td",[t._v("VARCHAR(M)")]),t._v(" "),s("td",[t._v("变长非二进制字符串")]),t._v(" "),s("td",[t._v("L+1字节，在此，L< = M和 1<=M<=255")])]),t._v(" "),s("tr",[s("td",[t._v("TINYTEXT")]),t._v(" "),s("td",[t._v("非常小的非二进制字符串")]),t._v(" "),s("td",[t._v("L+1字节，在此，L<2^8")])]),t._v(" "),s("tr",[s("td",[t._v("TEXT")]),t._v(" "),s("td",[t._v("小的非二进制字符串")]),t._v(" "),s("td",[t._v("L+2字节，在此，L<2^16")])]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMTEXT")]),t._v(" "),s("td",[t._v("中等大小的非二进制字符串")]),t._v(" "),s("td",[t._v("L+3字节，在此，L<2^24")])]),t._v(" "),s("tr",[s("td",[t._v("LONGTEXT")]),t._v(" "),s("td",[t._v("大的非二进制字符串")]),t._v(" "),s("td",[t._v("L+4字节，在此，L<2^32")])]),t._v(" "),s("tr",[s("td",[t._v("ENUM")]),t._v(" "),s("td",[t._v("枚举类型，只能有一个枚举字符串值")]),t._v(" "),s("td",[t._v("1或2个字节，取决于枚举值的数目 (最大值为65535)")])]),t._v(" "),s("tr",[s("td",[t._v("SET")]),t._v(" "),s("td",[t._v("一个设置，字符串对象可以有零个或 多个SET成员")]),t._v(" "),s("td",[t._v("1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）")])])])]),t._v(" "),s("h3",{attrs:{id:"二进制类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制类型"}},[t._v("#")]),t._v(" 二进制类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型名称")]),t._v(" "),s("th",[t._v("说明")]),t._v(" "),s("th",[t._v("存储需求")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("BIT(M)")]),t._v(" "),s("td",[t._v("位字段类型")]),t._v(" "),s("td",[t._v("大约 (M+7)/8 字节")])]),t._v(" "),s("tr",[s("td",[t._v("BINARY(M)")]),t._v(" "),s("td",[t._v("固定长度二进制字符串")]),t._v(" "),s("td",[t._v("M 字节")])]),t._v(" "),s("tr",[s("td",[t._v("VARBINARY (M)")]),t._v(" "),s("td",[t._v("可变长度二进制字符串")]),t._v(" "),s("td",[t._v("M+1 字节")])]),t._v(" "),s("tr",[s("td",[t._v("TINYBLOB (M)")]),t._v(" "),s("td",[t._v("非常小的BLOB")]),t._v(" "),s("td",[t._v("L+1 字节，在此，L<2^8")])]),t._v(" "),s("tr",[s("td",[t._v("BLOB (M)")]),t._v(" "),s("td",[t._v("小 BLOB")]),t._v(" "),s("td",[t._v("L+2 字节，在此，L<2^16")])]),t._v(" "),s("tr",[s("td",[t._v("MEDIUMBLOB (M)")]),t._v(" "),s("td",[t._v("中等大小的BLOB")]),t._v(" "),s("td",[t._v("L+3 字节，在此，L<2^24")])]),t._v(" "),s("tr",[s("td",[t._v("LONGBLOB (M)")]),t._v(" "),s("td",[t._v("非常大的BLOB")]),t._v(" "),s("td",[t._v("L+4 字节，在此，L<2^32")])])])]),t._v(" "),s("h2",{attrs:{id:"权限一览表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权限一览表"}},[t._v("#")]),t._v(" 权限一览表")]),t._v(" "),s("blockquote",[s("p",[t._v("具体权限的作用详见"),s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html",title:"官方文档",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("GRANT 和 REVOKE 允许的静态权限")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Privilege")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Grant Table Column")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Context")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ALL [PRIVILEGES]")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Synonym for “all privileges”")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ALTER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Alter_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ALTER ROUTINE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Alter_routine_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Stored routines")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases, tables, or indexes")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE ROLE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_role_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE ROUTINE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_routine_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Stored routines")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE TABLESPACE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_tablespace_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE TEMPORARY TABLES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_tmp_table_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE USER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_user_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CREATE VIEW")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Create_view_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Views")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DELETE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Delete_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DROP")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Drop_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases, tables, or views")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("DROP ROLE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Drop_role_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("EVENT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Event_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("EXECUTE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Execute_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Stored routines")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FILE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("File_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("File access on server host")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GRANT OPTION")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Grant_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases, tables, or stored routines")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("INDEX")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Index_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("INSERT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Insert_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables or columns")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("LOCK TABLES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Lock_tables_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PROCESS")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Process_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PROXY")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("See "),s("code",[t._v("proxies_priv")]),t._v(" table")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("REFERENCES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("References_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Databases or tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("RELOAD")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Reload_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("REPLICATION CLIENT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Repl_client_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("REPLICATION SLAVE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Repl_slave_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SELECT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Select_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables or columns")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SHOW DATABASES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Show_db_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SHOW VIEW")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Show_view_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Views")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SHUTDOWN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Shutdown_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SUPER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Super_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("TRIGGER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Trigger_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("UPDATE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("Update_priv")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Tables or columns")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("USAGE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Synonym for “no privileges”")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])])])]),t._v(" "),s("p",[t._v("GRANT 和 REVOKE 允许的动态权限")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Privilege")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Context")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("APPLICATION_PASSWORD_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Dual password administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("AUDIT_ABORT_EXEMPT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Allow queries blocked by audit log filter")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("AUDIT_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Audit log administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("AUTHENTICATION_POLICY_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Authentication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BACKUP_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Backup administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BINLOG_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Backup and Replication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("BINLOG_ENCRYPTION_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Backup and Replication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CLONE_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Clone administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("CONNECTION_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ENCRYPTION_KEY_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FIREWALL_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Firewall administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FIREWALL_EXEMPT")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Firewall administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FIREWALL_USER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Firewall administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FLUSH_OPTIMIZER_COSTS")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FLUSH_STATUS")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FLUSH_TABLES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("FLUSH_USER_RESOURCES")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GROUP_REPLICATION_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Replication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("GROUP_REPLICATION_STREAM")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Replication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("INNODB_REDO_LOG_ARCHIVE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Redo log archiving administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("NDB_STORED_USER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("NDB Cluster")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PASSWORDLESS_USER_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Authentication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PERSIST_RO_VARIABLES_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("REPLICATION_APPLIER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("PRIVILEGE_CHECKS_USER")]),t._v(" for a replication channel")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("REPLICATION_SLAVE_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Replication administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("RESOURCE_GROUP_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Resource group administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("RESOURCE_GROUP_USER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Resource group administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ROLE_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SESSION_VARIABLES_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SET_USER_ID")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SHOW_ROUTINE")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SYSTEM_USER")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("SYSTEM_VARIABLES_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("TABLE_ENCRYPTION_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("VERSION_TOKEN_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("XA_RECOVER_ADMIN")]),s("OutboundLink")],1)]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Server administration")])])])]),t._v(" "),s("h2",{attrs:{id:"图形化界面工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图形化界面工具"}},[t._v("#")]),t._v(" 图形化界面工具")]),t._v(" "),s("ul",[s("li",[t._v("Workbench(免费): http://dev.mysql.com/downloads/workbench/")]),t._v(" "),s("li",[t._v("navicat(收费，试用版30天): https://www.navicat.com/en/download/navicat-for-mysql")]),t._v(" "),s("li",[t._v("Sequel Pro(开源免费，仅支持Mac OS): http://www.sequelpro.com/")]),t._v(" "),s("li",[t._v("HeidiSQL(免费): http://www.heidisql.com/")]),t._v(" "),s("li",[t._v("phpMyAdmin(免费): https://www.phpmyadmin.net/")]),t._v(" "),s("li",[t._v("SQLyog: https://sqlyog.en.softonic.com/")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("h2",{attrs:{id:"小技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小技巧"}},[t._v("#")]),t._v(" 小技巧")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在SQL语句之后加上"),s("code",[t._v("\\G")]),t._v("会将结果的表格形式转换成行文本形式")]),t._v(" "),s("p",[t._v("在MySQL的sql语句后加上"),s("code",[t._v("\\G")]),t._v("，表示将查询结果进行按列打印，可以使每个字段打印到单独的行。即"),s("strong",[t._v("将查到的结构旋转90度变成纵向；")])])]),t._v(" "),s("li",[s("p",[t._v("查看Mysql数据库占用空间：")])])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" table_schema "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Database Name"')]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data_length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" index_length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Database Size in MB"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" information_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLES")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" table_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),s("h3",{attrs:{id:"mycat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mycat"}},[t._v("#")]),t._v(" mycat")]),t._v(" "),s("p",[t._v("能够将mysql数据组成一个分布式的集群，可以把物理上多个独立的mysql数据库，搞成一个逻辑上的整体，使开发者感受不到的物理上的独立。这些物理上独立的mysql数据库按照配置不同各自完成各自的工作。")]),t._v(" "),s("h2",{attrs:{id:"后续内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后续内容"}},[t._v("#")]),t._v(" 后续内容")]),t._v(" "),s("p",[t._v("后续内容因为跟当前学习、工作计划有冲突，所以后续课程的学习计划会无限期推后。\n目前的工作重点放在重做一个学习笔记网站，当然这是边做边学的，开发过程中遇到的难点和知识点我也会记录下来供大家学习。\n"),s("strong",[t._v("在此感谢B站同样爱学习的同学 @守心-人 提供的后续课程笔记，大家有条件一定要去给个star，你的每一个star和点赞都是我们前进的动力")]),t._v(" "),s("strong",[s("a",{attrs:{href:"https://github.com/Buildings-Lei/mysql_note/blob/main/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Buildings-Lei/mysql_note/blob/main/README.md"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);