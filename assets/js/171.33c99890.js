(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{485:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、git-分为哪些区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、git-分为哪些区域"}},[t._v("#")]),t._v(" 1、git：分为哪些区域？")]),t._v(" "),s("p",[t._v("在 Git 中，常见的区域有以下三个：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("工作区（Working Directory）：也称为工作目录或工作树，是你当前"),s("strong",[t._v("正在修改")]),t._v("的项目文件所在的目录。")])]),t._v(" "),s("li",[s("p",[t._v("暂存区（Staging Area）：也称为索引（Index），是一个中间区域，"),s("strong",[t._v("用于暂时存放已经修改的文件")]),t._v("。在"),s("strong",[t._v("提交之前，需要将想要保存的更改添加到暂存区")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("版本库（Repository）：也称为仓库，"),s("strong",[t._v("包含完整的项目历史记录和元数据信息")]),t._v("。版本库通常位于项目的 "),s("code",[t._v(".git")]),t._v(" 目录下，其中包括分支、标签、提交历史等。")])])]),t._v(" "),s("p",[t._v("工作流程通常如下：")]),t._v(" "),s("ol",[s("li",[t._v("在工作区中修改文件。")]),t._v(" "),s("li",[t._v("把想要保存的更改添加到暂存区。")]),t._v(" "),s("li",[t._v("将暂存区的更改提交到版本库中，形成一个新的提交记录。")])]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("git add")]),t._v(" 命令可以将文件从工作区添加到暂存区，使用 "),s("code",[t._v("git commit")]),t._v(" 命令可以将暂存区的文件提交到版本库中。")]),t._v(" "),s("p",[t._v("这些区域的概念使得 Git 具备了强大的版本控制功能，能够跟踪文件的变化并保存每一次的修改历史。")]),t._v(" "),s("h2",{attrs:{id:"_3、git切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、git切换分支"}},[t._v("#")]),t._v(" 3、git切换分支")]),t._v(" "),s("p",[t._v("git checkout：该命令用于切换分支。使用 "),s("code",[t._v("git checkout <branch-name>")]),t._v(' 可以切换到指定的分支。例如，要切换到名为 "feature" 的分支，可以执行以下命令：')]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout feature\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-b")]),t._v(" feature "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建分支并切换")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有本地分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出所有远程分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有分支，包括本地和远程分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h2",{attrs:{id:"_5、git如何解决版本冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、git如何解决版本冲突"}},[t._v("#")]),t._v(" 5、git如何解决版本冲突")]),t._v(" "),s("p",[t._v("在 Git 中，当多个人同时修改了同一个文件的同一部分时，就会产生版本冲突。为了解决这种冲突，可以按照以下步骤进行操作：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("获取最新代码：在你开始解决冲突之前，首先需要确保你拥有最新的代码。可以使用 "),s("code",[t._v("git pull")]),t._v(" 命令从远程仓库获取最新的更新。")])]),t._v(" "),s("li",[s("p",[t._v("查找冲突：运行 "),s("code",[t._v("git status")]),t._v(" 命令来检查是否存在冲突文件。Git 会在文件中标记出冲突的部分，以 "),s("code",[t._v("<<<<<<<")]),t._v("、"),s("code",[t._v("=======")]),t._v(" 和 "),s("code",[t._v(">>>>>>>")]),t._v(" 的形式展示。")])]),t._v(" "),s("li",[s("p",[t._v("解决冲突：打开冲突文件，手动编辑并解决冲突。根据具体情况，你可以选择保留某个版本的更改，或者将两个版本的更改合并。删除掉冲突标记符号 "),s("code",[t._v("<<<<<<<")]),t._v("、"),s("code",[t._v("=======")]),t._v(" 和 "),s("code",[t._v(">>>>>>>")]),t._v("，然后保存文件。")])]),t._v(" "),s("li",[s("p",[t._v("添加解决后的文件：使用 "),s("code",[t._v("git add <file>")]),t._v(" 命令将解决冲突后的文件添加到暂存区。")])]),t._v(" "),s("li",[s("p",[t._v("提交解决：运行 "),s("code",[t._v("git commit")]),t._v(" 命令提交解决冲突的文件。在提交信息中描述清楚你是如何解决冲突的。")])]),t._v(" "),s("li",[s("p",[t._v("推送代码：如果你不是在本地独立工作，而是与其他人共享同一个远程仓库，那么你需要运行 "),s("code",[t._v("git push")]),t._v(" 命令将你的解决冲突的代码推送到远程仓库。")])])]),t._v(" "),s("p",[t._v("当您在Git中合并分支时，可能会遇到版本冲突。解决版本冲突的方法包括手动解决和自动解决。手动解决冲突的方法是"),s("strong",[t._v("打开发生冲突的文件，查看冲突内容，然后将代码库中的修改和开发者的修改合并到一起")]),t._v("。自动解决冲突的方法是运行"),s("strong",[t._v("git mergetool")]),t._v("命令，该命令将启动Merge Tool并帮助您解决冲突。")]),t._v(" "),s("h2",{attrs:{id:"_7、git怎样切换到历史版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、git怎样切换到历史版本"}},[t._v("#")]),t._v(" 7、git怎样切换到历史版本？")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有提交记录")]),t._v("\nvs： "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--pretty")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一行显示版本信息")]),t._v("\n补充：\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log lfa380b5O2a0Ob82bfc8d84c5ab5el5b8fbf7dac "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会显示所有关于这个id以及之前的修改记录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log lfa380b5O2a0Ob82bfc8d84c5ab5el5b8fbf7dac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加上-1参数表示我们只想看到一行记录")]),t._v("\n而如果想要查看这条提交记录具体修改了什么内容，可以在命令中加入p参数，命令如下:\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log Ifa380b502a00b82bfc8d84c5ab5el5b8fbf7dac "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有版本信息")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--hard")]),t._v(" 版本id  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退版本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 在执行git checkout master或者git pull命令前，执行过git add .及commit命令git commit -m "xxx"，git工具才能给你记录你的版本变化（本地的）,否则丢失代码可能无可挽救。')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 git checkout 切换到历史版本：运行 git checkout <commit-hash> 命令，将 <commit-hash> 替换为你想要切换到的历史版本的 commit hash。例如，如果你想要切换到 commit hash 为 abcd1234 的版本，可以执行以下命令：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout abcd1234\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);