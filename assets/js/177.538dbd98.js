(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{493:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_2、简述gdb常见的调试命令-什么是条件断点-多进程下如何调试。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、简述gdb常见的调试命令-什么是条件断点-多进程下如何调试。"}},[s._v("#")]),s._v(" 2、简述GDB常见的调试命令，什么是条件断点，多进程下如何调试。")]),s._v(" "),n("p",[n("strong",[s._v("GDB调试")]),s._v("：gdb调试的是可执行文件，在gcc编译时加入 -g ，告诉gcc在编译时加入调试信息，这样gdb\n才能调试这个被编译的文件 gcc -g tesst.c -o test\n"),n("strong",[s._v("GDB命令格式")]),s._v("：")]),s._v(" "),n("ol",[n("li",[s._v("quit：退出gdb，结束调试")]),s._v(" "),n("li",[s._v("list：查看程序源代码\nlist 5，10：显示5到10行的代码\nlist test.c:5, 10:  显示源文件5到10行的代码，在调试多个文件时使用\nlist get_sum:  显示get_sum函数周围的代码\nlist test.c get_sum: 显示源文件get_sum函数周围的代码，在调试多个文件时使用")]),s._v(" "),n("li",[s._v("reverse-search：字符串用来从当前行向前查找第一个匹配的字符串")]),s._v(" "),n("li",[s._v("run：程序开始执行")]),s._v(" "),n("li",[s._v("help list/all：查看帮助信息")]),s._v(" "),n("li",[s._v("break：设置断点\nbreak 7：在第七行设置断点\nbreak get_sum：以函数名设置断点\nbreak 行号或者函数名 if 条件：以条件表达式设置断点")]),s._v(" "),n("li",[s._v("watch 条件表达式：条件表达式发生改变时程序就会停下来")]),s._v(" "),n("li",[s._v("next：继续执行下一条语句 ，会把函数当作一条语句执行")]),s._v(" "),n("li",[s._v("step：继续执行下一条语句，会跟踪进入函数，一次一条的执行函数内的代码")]),s._v(" "),n("li",[s._v("continue：继续运行到下一个断点")])]),s._v(" "),n("p",[n("strong",[s._v("条件断点")]),s._v("：break  if 条件 以条件表达式设置断点")]),s._v(" "),n("p",[n("strong",[s._v("多进程下如何调试")]),s._v("：用set follow-fork-mode child 调试子进程\n或者set follow-fork-mode parent 调试父进程")]),s._v(" "),n("h2",{attrs:{id:"_12、说说静态库和动态库怎么制作及如何使用-区别是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12、说说静态库和动态库怎么制作及如何使用-区别是什么"}},[s._v("#")]),s._v(" 12、说说静态库和动态库怎么制作及如何使用，区别是什么")]),s._v(" "),n("p",[s._v("静态库的制作：")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("gcc  hello.c  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" //这样就生成hello.o目标文件\nar rcs libhello.a  hello.o//生成libhello.a静态库\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("静态库的使用：")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[s._v("gcc main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("lhello "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("o staticLibrary"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//main.c和hello静态库链接，生成staticLibrary执行")]),s._v("\n文件\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    main.c：是指main主函数\n    -lhello：是我们生成的.a 文件砍头去尾（lib不要 .a也不要）前面加-l\n    -L：是指告诉gcc编译器先从-L指定的路径去找静态库，默认是从/usr/lib/ 或者  \n/usr/local/lib/ 去找。\n    ./：是指当前路径的意思\n    staticLibrary：是最后想生成的文件名（这里可随意起名字）\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("动态库的制作：")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("gcc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-fPIC")]),s._v(" a.c b.c c.c "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v("\ngcc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-shared")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" libmytest.so a.o b.o c.o\n\ngcc "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-shared")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-fPIC")]),s._v(" hello.c "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" libhello.so\n"),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-shared")]),s._v(" 指定生成动态库\n"),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-fPIC")]),s._v(" ：fPIC选项作用于编译阶段，在生成目标文件时就得使用该选项，以生成位置无关的代码。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("动态库的使用：")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[s._v("gcc main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("L"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("lhello  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("o dynamicDepot\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n    main.c：是指main主函数\n    -lhello：是我们生成的.so 文件砍头去尾（lib不要 .so也不要）前面加-l\n    -L：是指告诉gcc编译器先从-L指定的路径去找动态库，默认是从/usr/lib/ 或者 \n/usr/local/lib/ 去找。\n    ./：是指当前路径的意思\n    dynamicDepot：是最后想生成的文件名（这里可随意起名字）\n*/")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("区别：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("静态库代码装载的速度快，执行速度略比动态库快。")])]),s._v(" "),n("li",[n("p",[s._v("动态库更加节省内存，可执行文件体积比静态库小很多。")])]),s._v(" "),n("li",[n("p",[s._v("静态库是在编译时加载，动态库是在运行时加载。")])]),s._v(" "),n("li",[n("p",[s._v("生成的静态链接库，Windows下以.lib为后缀，Linux下以.a为后缀。\n生成的动态链接库，Windows下以.dll为后缀，Linux下以.so为后缀。")])])]),s._v(" "),n("h2",{attrs:{id:"_14、gdb调试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14、gdb调试"}},[s._v("#")]),s._v(" 14、gdb调试")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1.启动gdb\nstart -- 只执行一步，停在第一行执行语句\n\t\t\t\tn -- next\n\t\t\t\ts -- step(单步) -- 可以进入到函数体内部\n\t\t\t\tc - continue -- 直接停在断点的位置\n\n2. 查看代码:\n\t\tl -- list，查看所在的源代码行附近的内容\n\t\tl 10（函数名）\n\t\tl filename：行号（函数名）\n3. 设置断点:\n\t\t（断点需要在程序start后才能加）\n\t\t设置当前文件断点:\n\t\t\tb -- break\n\t\t\tb 10（函数名）\n\t\t\t\n\t\t设置指定文件断点:\n\t\t\tb fileName:行号（函数名）\n\t\t\n\t\t设置条件断点:\n\t\t\tb 10 if value==19\n\t\t删除断点:\n\t\t\tdelete -- del - d\n\t\t\td 断点的编号\n\t\t\t\t获取编号： info -- i\n\t\t\t\t\t\t\t\t\tinfo b\n4. 查看设置的断点\n5. 开始 执行gdb调试\n\t\t执行一步操作: \n\t\t\t继续执行:\n\t\t执行多步, 直接停在断点处:\n5. 单步调试\n\t\t进入函数体内部: s\n\t\t\t从函数体内部跳出: finish\n\t\t不进入函数体内部:\n\t\t\tn\n\t\t退出当前循环: u\n6. 查看变量的值: p -- print\n7. 查看变量的类型: ptype 变量名\n8. 设置变量的值:\tset var 变量名 = 赋值；没办法接收函数的返回值，直接p function()打印返回值\n9. 设置追踪变量\n\t\tdisplay\n\t\t取消追踪变量\n\t\tundisplay 编号\n\t\t\t\t获取编号： info display\n10. 退出gdb调试\n\t\t\tquit\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("使用场景\n\t程序编译无误，但是有逻辑错误\n\t使用文字终端（shell），实现一个单步调试的功能\n\t生成可执行文件之前必须加参数 -g\n\t\tgcc hello.c -o hello -g\n启动gdb调试\n\tgdb + 可执行文件 （如：gdb hello）\ngdb相关命令\n\tl（list） --\x3e 列出文件的代码清单\n\t\tl + 行号（l 32） --\x3e 代码从第32行开始显示\n\t\t\n\tb（break）--\x3e 设置断点\n\t\tb + 行号（b 12）--\x3e 在第12行设置断点\n\t\tb + 行号（2） + 条件（if i=5） --\x3e 在第2行设置断点，只有i等于5时生效\n\t\t\n\tinfo b（break）--\x3e 查看断点信息\n\t\n\tinfo source --\x3e 查看当前源代码文件的路径  info sources查看全部源代码\n\t\n\tr（run）--\x3e 启动或重新启动程序，可加参数，会停在第一个断点处\n\t\n\tstart --\x3e 单步执行，运行程序，停在第一行执行语句\n\t\n\tdisable/enable + 断点号 --\x3e 设置断点是否有效\n\t\n\td（delete）+ 断点号 --\x3e 删除指定断点号对应的断点\n\t\n\tp(print) + 变量名 --\x3e 打印变量值\n\t\n\tdisplay + 变量名 --\x3e 追踪变量\n\t\t之后每执行一步，该变量值都会被打印出来\n\t\t\n\tundisplay + 变量名编号 --\x3e 取消跟踪\n\t\n\tn（next）--\x3e 下一行（不会进入到函数体内部）\n\t\n\ts（step）--\x3e 下一步（会进入到函数体内部）\n\t\n\tptyte + 变量名 --\x3e 查看变量的类型\n\t\n\t（fin）finish --\x3e 结束当前函数，返回到函数调用点\n\t\n\tset --\x3e 设置变量的值 set var n=100\n\t\n\tq（quit） --\x3e 退出gdb\n\t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);