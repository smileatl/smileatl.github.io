(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{530:function(_,v,i){"use strict";i.r(v);var l=i(7),e=Object(l.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"六大组件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六大组件"}},[_._v("#")]),_._v(" 六大组件")]),_._v(" "),v("ol",[v("li",[_._v("分配器：用来管理内存。")]),_._v(" "),v("li",[_._v("迭代器：将容器和算法粘合在一起，用来遍历STL容器中的部分或全部元素。")]),_._v(" "),v("li",[_._v("容器：封装了大量常用的数据结构。")]),_._v(" "),v("li",[_._v("算法：定义了一些常用算法。")]),_._v(" "),v("li",[_._v("仿函数：具有函数特质的对象。")]),_._v(" "),v("li",[_._v("适配器：主要用来修改接口。")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/assets/20210315140318657.png",alt:"img"}})]),_._v(" "),v("p",[_._v("在C++ STL（Standard Template Library）中，有适配器（配接器，Adapter）、分配器（配置器，Allocator）和迭代器（Iterator）这三个概念，它们在STL中具有不同的含义和作用。")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("适配器（Adapter）：在C++ STL中，适配器是指一种容器适配器（Container Adapter），如"),v("code",[_._v("stack")]),_._v("、"),v("code",[_._v("queue")]),_._v("和"),v("code",[_._v("priority_queue")]),_._v("。这些适配器通过封装底层的容器（如"),v("code",[_._v("vector")]),_._v("、"),v("code",[_._v("deque")]),_._v("或"),v("code",[_._v("list")]),_._v("）来提供不同的接口和行为。适配器允许使用者以特定的方式访问底层容器，使其具备栈、队列或优先队列的功能，同时隐藏了底层容器的具体实现。")])]),_._v(" "),v("li",[v("p",[_._v("分配器（Allocator）：在C++ STL中，分配器是一种用于内存分配和管理的抽象机制。分配器允许容器在运行时动态地分配和释放内存，而不是依赖于固定大小的栈或静态内存分配。STL中的容器类（如"),v("code",[_._v("vector")]),_._v("、"),v("code",[_._v("list")]),_._v("、"),v("code",[_._v("map")]),_._v("等）都使用分配器来管理内存，使其具有灵活的内存管理能力。")])]),_._v(" "),v("li",[v("p",[_._v("迭代器（Iterator）：在C++ STL中，迭代器是一种用于遍历容器元素的抽象机制。迭代器提供了一种统一的访问容器元素的方式，使得可以通过迭代器按顺序访问容器中的元素，而不需要了解容器的具体实现细节。STL中的容器类都提供了迭代器接口，使得用户可以使用迭代器来遍历容器，并执行各种操作。")])])]),_._v(" "),v("p",[_._v("总结：")]),_._v(" "),v("ul",[v("li",[_._v("适配器（Adapter）是容器适配器，提供不同接口和行为的封装容器。")]),_._v(" "),v("li",[_._v("分配器（Allocator）是内存分配和管理的抽象机制，允许容器在运行时动态分配和释放内存。")]),_._v(" "),v("li",[_._v("迭代器（Iterator）是遍历容器元素的抽象机制，提供统一的访问容器元素的方式。")])]),_._v(" "),v("p",[_._v("在C++ STL中，算法（Algorithm）是一组操作容器元素的函数模板，而仿函数（Functor）是一种可调用对象，它可以被算法用来操作容器中的元素。在使用算法时，可以通过传递不同的仿函数对象来改变算法的行为。")]),_._v(" "),v("p",[_._v("区别如下：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("算法的作用：算法是用于对容器中的元素进行各种操作的函数模板，例如排序、查找、遍历等。算法本身定义了一系列操作步骤，而仿函数则被算法用来执行具体的操作。")])]),_._v(" "),v("li",[v("p",[_._v("仿函数的作用：仿函数是一种可调用对象，它可以被算法用来操作容器中的元素。仿函数可以被算法传递给特定的参数，用于定制算法的行为。通过传递不同的仿函数对象，可以改变算法对元素的处理方式，实现不同的功能。")])]),_._v(" "),v("li",[v("p",[_._v("使用方式：算法是通过函数模板来定义的，可以直接调用算法函数并传递容器和其他参数来执行相应的操作。而仿函数是一个类或结构体，需要实例化一个仿函数对象，并将其作为参数传递给算法函数。")])]),_._v(" "),v("li",[v("p",[_._v("灵活性：通过传递不同的仿函数对象，可以在不改变算法本身的情况下改变算法的行为。这使得算法非常灵活，可以适应不同的需求和场景。")])])]),_._v(" "),v("p",[_._v("总结：\n算法是一组操作容器元素的函数模板，定义了一系列操作步骤；仿函数是一种可调用对象，用于定制算法的行为。通过传递不同的仿函数对象给算法，可以改变算法的行为，实现不同的功能。")]),_._v(" "),v("h2",{attrs:{id:"文件分布"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#文件分布"}},[_._v("#")]),_._v(" 文件分布")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("组件")]),_._v(" "),v("th",[_._v("文件")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("分配器")]),_._v(" "),v("td",[_._v("construct.h、allocator.h")])]),_._v(" "),v("tr",[v("td",[_._v("迭代器")]),_._v(" "),v("td",[_._v("iterator.h、type_traits.h")])]),_._v(" "),v("tr",[v("td",[_._v("容器")]),_._v(" "),v("td",[_._v("astring.h、basic_string.h、vector.h、list.h、deque.h、stack.h、queue.h、rb_tree.h、set.h、map.h、hashtable.h、unordered_set.h、unordered_map.h")])]),_._v(" "),v("tr",[v("td",[_._v("算法")]),_._v(" "),v("td",[_._v("uninitialized.h、algorithm.h、algobase.h、algo.h、set_algo.h、heap_algo.h、numeric.h")])]),_._v(" "),v("tr",[v("td",[_._v("仿函数")]),_._v(" "),v("td",[_._v("functional.h")])]),_._v(" "),v("tr",[v("td",[_._v("配接器")]),_._v(" "),v("td",[_._v("分布在很多角落")])])])]),_._v(" "),v("h2",{attrs:{id:"分配器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分配器"}},[_._v("#")]),_._v(" 分配器")]),_._v(" "),v("p",[_._v("定义在allocator.h里")]),_._v(" "),v("ul",[v("li",[_._v("allocator：负责空间的配置与回收\n"),v("ul",[v("li",[_._v("allocate")]),_._v(" "),v("li",[_._v("deallocate")])])]),_._v(" "),v("li",[_._v("constructor：负责对象的构造与析构，对应两个全局函数： "),v("code",[_._v("construct")]),_._v(" 和 "),v("code",[_._v("destroy")]),_._v("。\n"),v("ul",[v("li",[_._v("construct")]),_._v(" "),v("li",[_._v("destroy")])])])]),_._v(" "),v("h2",{attrs:{id:"迭代器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[_._v("#")]),_._v(" 迭代器")]),_._v(" "),v("p",[_._v("迭代器")]),_._v(" "),v("ul",[v("li",[_._v("iterator："),v("code",[_._v("iterator")]),_._v("，连接着容器与算法，是一种"),v("code",[_._v("泛型指针")]),_._v("，定义在 iterator.h 中。每个容器都附带专属的迭代器，是一种重载了 "),v("code",[_._v("operator*")]),_._v("，"),v("code",[_._v("operator->")]),_._v("，"),v("code",[_._v("operator++")]),_._v("，"),v("code",[_._v("operator--")]),_._v(" 等操作的模板类。")])]),_._v(" "),v("p",[_._v("用到了type_traits.h和uninitialized.h")]),_._v(" "),v("h2",{attrs:{id:"容器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[_._v("#")]),_._v(" 容器")]),_._v(" "),v("ul",[v("li",[_._v("vector（向量）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("destructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")]),_._v(" "),v("li",[_._v("capacity")]),_._v(" "),v("li",[_._v("reserve")]),_._v(" "),v("li",[_._v("shrink_to_fit")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("operator[]")]),_._v(" "),v("li",[_._v("at")]),_._v(" "),v("li",[_._v("front")]),_._v(" "),v("li",[_._v("back")]),_._v(" "),v("li",[_._v("data")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("assign")]),_._v(" "),v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_back")]),_._v(" "),v("li",[_._v("push_back")]),_._v(" "),v("li",[_._v("pop_back")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("resize")]),_._v(" "),v("li",[_._v("reverse")]),_._v(" "),v("li",[_._v("swap")])])])])]),_._v(" "),v("li",[_._v("list（双向链表）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("destructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("front")]),_._v(" "),v("li",[_._v("back")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("assign")]),_._v(" "),v("li",[_._v("push_front")]),_._v(" "),v("li",[_._v("push_back")]),_._v(" "),v("li",[_._v("pop_front")]),_._v(" "),v("li",[_._v("pop_back")]),_._v(" "),v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_front")]),_._v(" "),v("li",[_._v("emplace_back")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("resize")]),_._v(" "),v("li",[_._v("swap")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("splice")]),_._v(" "),v("li",[_._v("remove")]),_._v(" "),v("li",[_._v("remove_if")]),_._v(" "),v("li",[_._v("unique")]),_._v(" "),v("li",[_._v("merge")]),_._v(" "),v("li",[_._v("sort")]),_._v(" "),v("li",[_._v("reverse")])])])])]),_._v(" "),v("li",[_._v("deque（双端队列）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("destructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")]),_._v(" "),v("li",[_._v("resize")]),_._v(" "),v("li",[_._v("shrink_to_fit")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("operator[]")]),_._v(" "),v("li",[_._v("at")]),_._v(" "),v("li",[_._v("front")]),_._v(" "),v("li",[_._v("back")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("assign")]),_._v(" "),v("li",[_._v("push_front")]),_._v(" "),v("li",[_._v("push_back")]),_._v(" "),v("li",[_._v("pop_front")]),_._v(" "),v("li",[_._v("pop_back")]),_._v(" "),v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_front")]),_._v(" "),v("li",[_._v("emplace_back")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])])])]),_._v(" "),v("li",[_._v("map/multimap（映射）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("at")]),_._v(" "),v("li",[_._v("operator[]")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_hint")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("find")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("lower_bound")]),_._v(" "),v("li",[_._v("upper_bound")]),_._v(" "),v("li",[_._v("equal_range")])])])])]),_._v(" "),v("li",[_._v("set/multiset（集合）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_hint")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("find")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("lower_bound")]),_._v(" "),v("li",[_._v("upper_bound")]),_._v(" "),v("li",[_._v("equal_range")])])])])]),_._v(" "),v("li",[_._v("unordered_map/unordered_multimap（无序映射）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("cend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("at")]),_._v(" "),v("li",[_._v("operator[]")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_hint")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("find")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("equal_range")])])]),_._v(" "),v("li",[_._v("Buckets\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("bucket_count")]),_._v(" "),v("li",[_._v("max_bucket_count")]),_._v(" "),v("li",[_._v("bucket_size")]),_._v(" "),v("li",[_._v("bucket")])])])])]),_._v(" "),v("li",[_._v("unordered_set/unordered_multiset（无序集合）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("cend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("size")]),_._v(" "),v("li",[_._v("max_size")]),_._v(" "),v("li",[_._v("empty")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("emplace")]),_._v(" "),v("li",[_._v("emplace_hint")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("find")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("equal_range")])])]),_._v(" "),v("li",[_._v("Buckets\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("bucket_count")]),_._v(" "),v("li",[_._v("max_bucket_count")]),_._v(" "),v("li",[_._v("bucket_size")]),_._v(" "),v("li",[_._v("bucket")])])])])]),_._v(" "),v("li",[_._v("basic_string （字符序列）\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("destructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Iterators\n"),v("ul",[v("li",[_._v("begin")]),_._v(" "),v("li",[_._v("cbegin")]),_._v(" "),v("li",[_._v("end")]),_._v(" "),v("li",[_._v("cend")]),_._v(" "),v("li",[_._v("rbegin")]),_._v(" "),v("li",[_._v("crbegin")]),_._v(" "),v("li",[_._v("rend")]),_._v(" "),v("li",[_._v("crend")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")]),_._v(" "),v("li",[_._v("length")]),_._v(" "),v("li",[_._v("max_size")]),_._v(" "),v("li",[_._v("capacity")]),_._v(" "),v("li",[_._v("reserve")]),_._v(" "),v("li",[_._v("shrink_to_fit")])])]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("operator[]")]),_._v(" "),v("li",[_._v("at")]),_._v(" "),v("li",[_._v("front")]),_._v(" "),v("li",[_._v("back")]),_._v(" "),v("li",[_._v("data")]),_._v(" "),v("li",[_._v("c_str")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("append")]),_._v(" "),v("li",[_._v("insert")]),_._v(" "),v("li",[_._v("erase")]),_._v(" "),v("li",[_._v("push_back")]),_._v(" "),v("li",[_._v("pop_back")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("resize")]),_._v(" "),v("li",[_._v("operator+=")])])]),_._v(" "),v("li",[_._v("Operations\n"),v("ul",[v("li",[_._v("compare")]),_._v(" "),v("li",[_._v("substr")]),_._v(" "),v("li",[_._v("replace")]),_._v(" "),v("li",[_._v("reverse")]),_._v(" "),v("li",[_._v("find")]),_._v(" "),v("li",[_._v("rfind")]),_._v(" "),v("li",[_._v("find_first_of")]),_._v(" "),v("li",[_._v("find_first_not_of")]),_._v(" "),v("li",[_._v("find_last_of")]),_._v(" "),v("li",[_._v("find_last_not_of")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("swap")])])])])])]),_._v(" "),v("h2",{attrs:{id:"适配器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#适配器"}},[_._v("#")]),_._v(" 适配器")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("container adapters")])]),_._v(" "),v("ul",[v("li",[_._v("stack\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("top")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("push")]),_._v(" "),v("li",[_._v("pop")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])])])]),_._v(" "),v("li",[_._v("queue\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("front")]),_._v(" "),v("li",[_._v("back")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("push")]),_._v(" "),v("li",[_._v("pop")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])])])]),_._v(" "),v("li",[_._v("priority_queue\n"),v("ul",[v("li",[_._v("constructor")]),_._v(" "),v("li",[_._v("operator=")]),_._v(" "),v("li",[_._v("Element access\n"),v("ul",[v("li",[_._v("top")])])]),_._v(" "),v("li",[_._v("Capacity\n"),v("ul",[v("li",[_._v("empty")]),_._v(" "),v("li",[_._v("size")])])]),_._v(" "),v("li",[_._v("Modifiers\n"),v("ul",[v("li",[_._v("push")]),_._v(" "),v("li",[_._v("pop")]),_._v(" "),v("li",[_._v("clear")]),_._v(" "),v("li",[_._v("swap")])])])])])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("iterator adapters")])]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/Alinshans/MyTinySTL/blob/master/MyTinySTL/iterator.h",target:"_blank",rel:"noopener noreferrer"}},[_._v("reverse_iterator"),v("OutboundLink")],1)])]),_._v(" "),v("p",[v("code",[_._v("reverse_iterator")]),_._v(" 是一种反向迭代器，重载了 "),v("code",[_._v("operator*")]),_._v("，"),v("code",[_._v("operator->")]),_._v("，"),v("code",[_._v("operator++")]),_._v("，"),v("code",[_._v("operator--")]),_._v("，"),v("code",[_._v("operator+")]),_._v("，"),v("code",[_._v("operator-")]),_._v("，"),v("code",[_._v("operator+=")]),_._v("，"),v("code",[_._v("operatpr-=")]),_._v("，"),v("code",[_._v("operator[]")]),_._v(" 等操作，变前进为后退，后退为前进。")])])]),_._v(" "),v("h2",{attrs:{id:"仿函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#仿函数"}},[_._v("#")]),_._v(" 仿函数")]),_._v(" "),v("p",[_._v("仿函数，也叫函数对象")]),_._v(" "),v("ul",[v("li",[_._v("functional：\n"),v("ul",[v("li",[_._v("算术类\n"),v("ul",[v("li",[_._v("plus")]),_._v(" "),v("li",[_._v("minus")]),_._v(" "),v("li",[_._v("multiplies")]),_._v(" "),v("li",[_._v("divides")]),_._v(" "),v("li",[_._v("modulus")]),_._v(" "),v("li",[_._v("negate")]),_._v(" "),v("li",[_._v("identity_element")])])]),_._v(" "),v("li",[_._v("关系运算类\n"),v("ul",[v("li",[_._v("equal_to")]),_._v(" "),v("li",[_._v("not_equal_to")]),_._v(" "),v("li",[_._v("greater")]),_._v(" "),v("li",[_._v("less")]),_._v(" "),v("li",[_._v("greater_equal")]),_._v(" "),v("li",[_._v("less_equal")])])]),_._v(" "),v("li",[_._v("逻辑运算类\n"),v("ul",[v("li",[_._v("logical_and")]),_._v(" "),v("li",[_._v("logical_or")]),_._v(" "),v("li",[_._v("logical_not")])])]),_._v(" "),v("li",[_._v("证同、选择、投影\n"),v("ul",[v("li",[_._v("identity")]),_._v(" "),v("li",[_._v("selectfirst")]),_._v(" "),v("li",[_._v("selectsecond")]),_._v(" "),v("li",[_._v("projectfirst")]),_._v(" "),v("li",[_._v("projectsecond")])])])])]),_._v(" "),v("li",[_._v("hash_functional："),v("code",[_._v("mystl::hash")]),_._v(" 函数对象用于计算元素的哈希值(在哈希表中的位置)，对一些内置型别和容器做了特化处理。")])]),_._v(" "),v("h2",{attrs:{id:"算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[_._v("#")]),_._v(" 算法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("algorithm.h：包含了其他所有的算法头文件")])]),_._v(" "),v("li",[v("p",[_._v("基本算法（14个） 定义在algobase.h：最大最小值，比较，内存拷贝，移动等算法")]),_._v(" "),v("ul",[v("li",[_._v("min")])])]),_._v(" "),v("li",[v("p",[_._v("max")]),_._v(" "),v("ul",[v("li",[_._v("iter_swap")]),_._v(" "),v("li",[_._v("copy")]),_._v(" "),v("li",[_._v("copy_backward")]),_._v(" "),v("li",[_._v("copy_if")]),_._v(" "),v("li",[_._v("copy_n")]),_._v(" "),v("li",[_._v("move")]),_._v(" "),v("li",[_._v("move_backward")]),_._v(" "),v("li",[_._v("equal")]),_._v(" "),v("li",[_._v("fill")]),_._v(" "),v("li",[_._v("fill_n")]),_._v(" "),v("li",[_._v("lexicographical_compare")]),_._v(" "),v("li",[_._v("mismatch")])])]),_._v(" "),v("li",[v("p",[_._v("数值算法（5个） 定义在numeric.h")]),_._v(" "),v("ul",[v("li",[_._v("accumulate")])])]),_._v(" "),v("li",[v("p",[_._v("adjacent_difference")]),_._v(" "),v("ul",[v("li",[_._v("inner_product")]),_._v(" "),v("li",[_._v("iota")]),_._v(" "),v("li",[_._v("partial_sum")])])]),_._v(" "),v("li",[v("p",[_._v("set 算法（4个） 定义在set_algo.h：集合算法")]),_._v(" "),v("ul",[v("li",[_._v("set_difference")])])]),_._v(" "),v("li",[v("p",[_._v("set_intersection")]),_._v(" "),v("ul",[v("li",[_._v("set_symmetric_difference")]),_._v(" "),v("li",[_._v("set_union")])])]),_._v(" "),v("li",[v("p",[_._v("heap 算法（4个） 定义在heap_algo.h：堆算法")]),_._v(" "),v("ul",[v("li",[_._v("make_heap")])])]),_._v(" "),v("li",[v("p",[_._v("pop_heap")]),_._v(" "),v("ul",[v("li",[_._v("push_heap")]),_._v(" "),v("li",[_._v("sort_heap")])])]),_._v(" "),v("li",[v("p",[_._v("其它算法（54个） 定义在algo.h：查找、排序等算法")]),_._v(" "),v("ul",[v("li",[_._v("adjacent_find")])])]),_._v(" "),v("li",[v("p",[_._v("all_of")]),_._v(" "),v("ul",[v("li",[_._v("any_of")]),_._v(" "),v("li",[_._v("binary_search")]),_._v(" "),v("li",[_._v("count")]),_._v(" "),v("li",[_._v("count_if")]),_._v(" "),v("li",[_._v("equal_range")]),_._v(" "),v("li",[_._v("find")]),_._v(" "),v("li",[_._v("find_end")]),_._v(" "),v("li",[_._v("find_first_of")]),_._v(" "),v("li",[_._v("find_if")]),_._v(" "),v("li",[_._v("find_if_not")]),_._v(" "),v("li",[_._v("for_each")]),_._v(" "),v("li",[_._v("generate")]),_._v(" "),v("li",[_._v("generate_n")]),_._v(" "),v("li",[_._v("includes")]),_._v(" "),v("li",[_._v("inplace_merge")]),_._v(" "),v("li",[_._v("is_heap")]),_._v(" "),v("li",[_._v("is_sorted")]),_._v(" "),v("li",[_._v("is_permutation")]),_._v(" "),v("li",[_._v("lower_bound")]),_._v(" "),v("li",[_._v("max_element")]),_._v(" "),v("li",[_._v("median")]),_._v(" "),v("li",[_._v("merge")]),_._v(" "),v("li",[_._v("min_elememt")]),_._v(" "),v("li",[_._v("next_permutation")]),_._v(" "),v("li",[_._v("none_of")]),_._v(" "),v("li",[_._v("nth_element")]),_._v(" "),v("li",[_._v("partial_sort")]),_._v(" "),v("li",[_._v("partial_sort_copy")]),_._v(" "),v("li",[_._v("partition")]),_._v(" "),v("li",[_._v("partition_copy")]),_._v(" "),v("li",[_._v("prev_permutation")]),_._v(" "),v("li",[_._v("random_shuffle")]),_._v(" "),v("li",[_._v("remove")]),_._v(" "),v("li",[_._v("remove_copy")]),_._v(" "),v("li",[_._v("remove_copy_if")]),_._v(" "),v("li",[_._v("remove_if")]),_._v(" "),v("li",[_._v("replace")]),_._v(" "),v("li",[_._v("replace_copy")]),_._v(" "),v("li",[_._v("replace_copy_if")]),_._v(" "),v("li",[_._v("replace_if")]),_._v(" "),v("li",[_._v("reverse")]),_._v(" "),v("li",[_._v("reverse_copy")]),_._v(" "),v("li",[_._v("rotate")]),_._v(" "),v("li",[_._v("rotate_copy")]),_._v(" "),v("li",[_._v("search")]),_._v(" "),v("li",[_._v("search_n")]),_._v(" "),v("li",[_._v("sort")]),_._v(" "),v("li",[_._v("swap_ranges")]),_._v(" "),v("li",[_._v("transform")]),_._v(" "),v("li",[_._v("unique")]),_._v(" "),v("li",[_._v("unique_copy")]),_._v(" "),v("li",[_._v("upper_bound")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);