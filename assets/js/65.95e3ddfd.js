(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{380:function(t,s,a){"use strict";a.r(s);var r=a(7),v=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据结构-串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-串"}},[t._v("#")]),t._v(" 数据结构——串")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938700845.png",alt:"1685938700845"}})]),t._v(" "),s("p",[t._v("串(String)是由零个或多个任意字符组成的有限序列又名字符串"),s("br"),t._v("\n(用双引号括起来有些书中也用单引号)所谓序列说明串的相邻字符之间具有前驱和后继关系")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938712420.png",alt:"1685938712420"}})]),t._v(" "),s("p",[t._v("空格串：由一个或多个空格组成的串，与空串不同，空格串有内容有长度且只由空格组成"),s("br"),t._v("\n子串：串中任意个"),s("strong",[t._v("连续")]),t._v("的字符组成的子序列(含空串)称为该串的子串"),s("br"),t._v("\n主串：包含子串的串就相应的称为主串\n真子串：指不包含自身的所有子串\n字符位置：字符在序列中的序号为该字符在串中的位置"),s("br"),t._v("\n子串位置：子串第一个字符在主串中的位置")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938725637.png",alt:"1685938725637"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938732517.png",alt:"1685938732517"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938741248.png",alt:"1685938741248"}})]),t._v(" "),s("p",[t._v("串相等：当且仅当两个串长度相等，并且各个对应位置上的字符都相同时，这两个串才是相等的\n所有的空串都相等"),s("br"),t._v("\n串的应用非常广泛，计算机的大多数非数值处理的对象大多数是字符串数据，例如：文字编辑、符号处理，各种信息系统等等")]),t._v(" "),s("blockquote",[s("h1",{attrs:{id:"案例引入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例引入"}},[t._v("#")]),t._v(" 案例引入")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938749925.png",alt:"1685938749925"}})]),t._v(" "),s("blockquote",[s("h1",{attrs:{id:"串的类型定义、存储结构及其运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串的类型定义、存储结构及其运算"}},[t._v("#")]),t._v(" 串的类型定义、存储结构及其运算")])]),t._v(" "),s("p",[t._v("线性表更关注单个元素的操作，比如查找一个元素插入或删除一个元素但串中更多的是查找子串的位置、得到指定位置的子串、替换子串的操作")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938764903.png",alt:"1685938764903"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938771973.png",alt:"1685938771973"}})]),t._v(" "),s("blockquote",[s("h1",{attrs:{id:"串的顺序存储结构-物理位置的前后表示逻辑上的前后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串的顺序存储结构-物理位置的前后表示逻辑上的前后"}},[t._v("#")]),t._v(" 串的顺序存储结构(物理位置的前后表示逻辑上的前后)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938814931.png",alt:"1685938814931"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938833896.png",alt:"1685938833896"}})]),t._v(" "),s("p",[t._v("下标为0空间闲置从下标为1的存起便于研究某些算法")]),t._v(" "),s("blockquote",[s("h1",{attrs:{id:"串的链式存储结构-任意的空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串的链式存储结构-任意的空间"}},[t._v("#")]),t._v(" 串的链式存储结构(任意的空间)")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938841833.png",alt:"1685938841833"}}),t._v("上")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685938854431.png",alt:"1685938854431"}})]),t._v(" "),s("p",[t._v("实际上对字符串进行加入删除操作比较少，所以顺序结构用的比较多，常进行匹配、查找运算")])])}),[],!1,null,null,null);s.default=v.exports}}]);