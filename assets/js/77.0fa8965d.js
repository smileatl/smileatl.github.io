(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{394:function(t,s,a){"use strict";a.r(s);var r=a(7),p=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据结构-哈夫曼编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-哈夫曼编码"}},[t._v("#")]),t._v(" 数据结构——哈夫曼编码")]),t._v(" "),s("blockquote",[s("h1",{attrs:{id:"哈夫曼编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈夫曼编码"}},[t._v("#")]),t._v(" 哈夫曼编码")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953591643.png",alt:"1685953591643"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953598694.png",alt:"1685953598694"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953603993.png",alt:"1685953603993"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953608705.png",alt:"1685953608705"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953617662.png",alt:"1685953617662"}})]),t._v(" "),s("p",[t._v("T;ACS都是叶子结点，根到一个字符不会路过另一个字符")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953622532.png",alt:"1685953622532"}})]),t._v(" "),s("p",[t._v("第一步：构造哈夫曼树不清楚的看之前的文章")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953636645.png",alt:"1685953636645"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953629047.png",alt:"1685953629047"}})]),t._v(" "),s("p",[t._v("第二步：左分支标注0右分支标注1某个字符的哈夫曼编码为从根结点到字符对应的叶子结点路过分支的标注形成的由0和1构成的序列 而自上而下标注用算法不太好实现所以改从叶子结点到根结点自下而上对分支进行标注")]),t._v(" "),s("p",[t._v("具体过程(求G的编码)")]),t._v(" "),s("p",[t._v("G是7号结点，他的parent是8 找到8号，判断G是8号的左孩子还是右孩子(8号的哪个域是7)--\x3e8号的lch为7--\x3eG是8号的左孩子--\x3e标记0....直到根结点(parent=0)哈夫曼编码从根结点到叶子结点而现在是叶子到根哈夫曼编码需要把得到的值倒过来(很容易想到后进先出的栈)")]),t._v(" "),s("p",[t._v("但实际我们是求哈夫曼树的7个叶子结点的编码(A-G)")]),t._v(" "),s("p",[t._v("for（i=1;i<=n;i++）{")]),t._v(" "),s("p",[t._v("//求当前字符的编码")]),t._v(" "),s("p",[t._v("反复找双亲 判断是左孩子还是右孩子 标注 ...... 直到parent=0 循环次数不确定while(f!=0)")]),t._v(" "),s("p",[t._v("f表示当前结点的parent值")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("用字符串数组(二维数组)来存储字符的编码 字符串通过char[]实现")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953641713.png",alt:"1685953641713"}})]),t._v(" "),s("p",[t._v("得到的值与编码相反的定义一个cd[](数组)保存得到的值")]),t._v(" "),s("p",[t._v("数组的长度设哈夫曼树有n个结点分支（层次）数最多为n-1 而字符串要多一个\\0作为结束的标志 长度n，0~n-2存放得到的值，第一个得到的值放在cd[n-2](最后)")]),t._v(" "),s("p",[t._v("这里是A-G n=7")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953646595.png",alt:"1685953646595"}})]),t._v(" "),s("p",[t._v("当i=1(求A的编码) A的parent=13 13的lch=1(左孩子)标注0--\x3e存到cd[5]--\x3estart--（start=4）13号parent=0循环结束--\x3e字符串复制函数复制到HC[1]")]),t._v(" "),s("p",[t._v("i=2(求B的编码)B的parent=12 12的rch=2(右孩子)标注1--\x3e存到cd[5]--\x3estart--；start=4 --\x3e12的parent=13 13的rch=12(右孩子)标注1 存入cd[start]--\x3e13号parent=0循环结束--\x3e哈夫曼编码cd[start]--\\0 字符串复制函数复制到HC[2]")]),t._v(" "),s("p",[t._v(".....")]),t._v(" "),s("p",[t._v("7个字符的编码都得到")]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953651357.png",alt:"1685953651357"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953656872.png",alt:"1685953656872"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953667521.png",alt:"1685953667521"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953672371.png",alt:"1685953672371"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953676800.png",alt:"1685953676800"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953745617.png",alt:"1685953745617"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/assets/1685953751314.png",alt:"1685953751314"}})]),t._v(" "),s("p",[t._v("算法的实现不做具体的介绍")]),t._v(" "),s("p",[t._v("明文--\x3e哈夫曼编码(编码反过来叫解码)")])])}),[],!1,null,null,null);s.default=p.exports}}]);