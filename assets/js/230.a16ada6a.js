(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{547:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[s._v("#")]),s._v(" 锁")]),s._v(" "),t("p",[s._v("多个进程需要同时进行写文件操作。")]),s._v(" "),t("p",[s._v("多个进程可能同时访问和操作同一个文件。当多个进程同时尝试对同一文件进行写操作时，可能会导致数据不一致、损坏或竞争条件等问题。加锁是一种常用的机制，用于确保在任意时刻只有一个进程能够访问共享资源（例如文件），从而防止并发写操作引发的问题。")]),s._v(" "),t("h2",{attrs:{id:"进程锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程锁"}},[s._v("#")]),s._v(" 进程锁")]),s._v(" "),t("blockquote",[t("p",[s._v("main.py")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 互斥锁")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取进程锁，用以后续转换result为csv文件时的同步")]),s._v("\nlock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在Python中，"),t("code",[s._v("lock = mp.Lock()")]),s._v(" 表示创建了一个进程锁（Process Lock），这是使用 "),t("code",[s._v("multiprocessing")]),s._v(" 模块中的 "),t("code",[s._v("Lock")]),s._v(" 类实现的。进程锁用于在多个进程之间控制对共享资源的访问，以避免竞争条件和数据不一致问题。")]),s._v(" "),t("p",[s._v("当多个进程需要访问共享资源时，可能会出现问题，因为并发访问可能会导致数据损坏或不正确的结果。进程锁通过确保一次只有一个进程可以访问共享资源，从而解决了这个问题。当一个进程获得了锁，其他进程就必须等待直到锁被释放。")]),s._v(" "),t("p",[s._v("在您提到的代码中，"),t("code",[s._v("mp.Lock()")]),s._v(" 创建了一个进程锁对象，并将其赋值给变量 "),t("code",[s._v("lock")]),s._v("。然后，您可以在进程中使用这个 "),t("code",[s._v("lock")]),s._v(" 对象来保护共享资源，以确保在同一时间只有一个进程可以访问该资源。下面是一个简单示例：")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" multiprocessing "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" mp\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("worker_function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shared_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在获得锁的情况下，对共享资源进行操作")]),s._v("\n        shared_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'__main__'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    shared_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'i'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享整数值")]),s._v("\n    lock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建进程锁")]),s._v("\n\n    processes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" _ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        process "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("worker_function"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shared_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        processes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" process "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" processes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"共享资源的值:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shared_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("在这个例子中，四个进程通过共享数据进行操作，但是通过使用进程锁，我们确保每次只有一个进程可以修改共享资源，避免了竞争条件。")]),s._v(" "),t("h2",{attrs:{id:"加锁、释放锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加锁、释放锁"}},[s._v("#")]),s._v(" 加锁、释放锁")]),s._v(" "),t("blockquote",[t("p",[s._v("Client.py")])]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[s._v("lock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ----写文件操作-----")]),s._v("\nlock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("release"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("code",[s._v("lock.acquire()")]),s._v(" 和 "),t("code",[s._v("lock.release()")]),s._v(" 是 Python 中用于加锁和释放锁的方法。这些方法通常与锁对象一起使用，以确保在多个线程或进程中对共享资源的访问是互斥的。")]),s._v(" "),t("p",[s._v("下面是对这两个方法的详细解释：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("lock.acquire([blocking])")]),s._v("：该方法用于获取锁。当调用 "),t("code",[s._v("lock.acquire()")]),s._v(" 时，线程或进程会尝试获取锁。如果锁当前不可用，即被其他线程或进程持有，那么调用线程或进程将被阻塞，直到锁可用或达到指定的超时时间（如果指定了 "),t("code",[s._v("blocking")]),s._v(" 参数）。如果 "),t("code",[s._v("blocking")]),s._v(" 参数为 True（默认值），则调用线程或进程会一直等待锁的释放；如果为 False，则调用线程或进程会立即返回，而不会等待锁的释放。当成功获取到锁时，该方法会返回 True。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("lock.release()")]),s._v("：该方法用于释放锁。当调用 "),t("code",[s._v("lock.release()")]),s._v(" 时，锁会被释放，允许其他线程或进程获取该锁。释放锁后，其他等待的线程或进程将有机会获取锁并继续执行。如果调用 "),t("code",[s._v("lock.release()")]),s._v(" 时没有持有锁，会引发 "),t("code",[s._v("RuntimeError")]),s._v(" 异常。")])])]),s._v(" "),t("p",[s._v("下面是一个简单的示例，演示了如何使用锁来保护共享资源：")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" threading\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个锁对象")]),s._v("\nlock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" threading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 共享资源")]),s._v("\nshared_resource "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update_shared_resource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" shared_resource\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取锁")]),s._v("\n    lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("acquire"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对共享资源进行操作")]),s._v("\n        shared_resource "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 释放锁")]),s._v("\n        lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("release"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建多个线程来更新共享资源")]),s._v("\nthreads "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" _ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" threading"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Thread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("update_shared_resource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("append"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等待所有线程完成")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("join"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出最终的共享资源的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shared resource:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" shared_resource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("p",[s._v("在上述示例中，"),t("code",[s._v("lock.acquire()")]),s._v(" 和 "),t("code",[s._v("lock.release()")]),s._v(" 方法用于在 "),t("code",[s._v("update_shared_resource()")]),s._v(" 函数中获取和释放锁。这样可以确保每次只有一个线程能够访问和修改共享资源 "),t("code",[s._v("shared_resource")]),s._v("，从而避免竞争条件和数据不一致性的问题。")]),s._v(" "),t("p",[s._v("希望这个示例能够帮助您理解 "),t("code",[s._v("lock.acquire()")]),s._v(" 和 "),t("code",[s._v("lock.release()")]),s._v(" 方法的使用。如果您有任何进一步的问题，请随时提问。")])])}),[],!1,null,null,null);t.default=e.exports}}]);